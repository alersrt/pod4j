/*
 * supports a RESTful API for the Libpod library
 * This documentation describes the Podman v2.x+ RESTful API. It consists of a Docker-compatible API and a Libpod API providing support for Podmanâ€™s unique features such as pods.  To start the service and keep it running for 5,000 seconds (-t 0 runs forever):  podman system service -t 5000 &  You can then use cURL on the socket using requests documented below.  NOTE: if you install the package podman-docker, it will create a symbolic link for /run/docker.sock to /run/podman/podman.sock  NOTE: Some fields in the API response JSON are encoded as omitempty, which means that if said field has a zero value, they will not be encoded in the API response. This is a feature to help reduce the size of the JSON responses returned via the API.  NOTE: Due to the limitations of [go-swagger](https://github.com/go-swagger/go-swagger), some field values that have a complex type show up as null in the docs as well as in the API responses. This is because the zero value for the field type is null. The field description in the docs will state what type the field is expected to be for such cases.  See podman-system-service(1) for more information.  Quick Examples:  'podman info'  curl --unix-socket /run/podman/podman.sock http://d/v5.0.0/libpod/info  'podman pull quay.io/containers/podman'  curl -XPOST --unix-socket /run/podman/podman.sock -v 'http://d/v5.0.0/images/create?fromImage=quay.io%2Fcontainers%2Fpodman'  'podman list images'  curl --unix-socket /run/podman/podman.sock -v 'http://d/v5.0.0/libpod/images/json' | jq
 *
 * The version of the OpenAPI document: 5.0.0
 * Contact: podman@lists.podman.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.github.alersrt.pod4j.openapi.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.github.alersrt.pod4j.openapi.model.IDMap;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import jakarta.validation.constraints.*;
import jakarta.validation.Valid;


import io.github.alersrt.pod4j.openapi.ApiClient;
/**
 * AutoUserNsOptions
 */
@JsonPropertyOrder({
  AutoUserNsOptions.JSON_PROPERTY_ADDITIONAL_G_I_D_MAPPINGS,
  AutoUserNsOptions.JSON_PROPERTY_ADDITIONAL_U_I_D_MAPPINGS,
  AutoUserNsOptions.JSON_PROPERTY_GROUP_FILE,
  AutoUserNsOptions.JSON_PROPERTY_INITIAL_SIZE,
  AutoUserNsOptions.JSON_PROPERTY_PASSWD_FILE,
  AutoUserNsOptions.JSON_PROPERTY_SIZE
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-11-28T19:32:38.690938181+07:00[Asia/Barnaul]", comments = "Generator version: 7.7.0")
public class AutoUserNsOptions {
  public static final String JSON_PROPERTY_ADDITIONAL_G_I_D_MAPPINGS = "AdditionalGIDMappings";
  private List<@Valid IDMap> additionalGIDMappings = new ArrayList<>();

  public static final String JSON_PROPERTY_ADDITIONAL_U_I_D_MAPPINGS = "AdditionalUIDMappings";
  private List<@Valid IDMap> additionalUIDMappings = new ArrayList<>();

  public static final String JSON_PROPERTY_GROUP_FILE = "GroupFile";
  private String groupFile;

  public static final String JSON_PROPERTY_INITIAL_SIZE = "InitialSize";
  private Integer initialSize;

  public static final String JSON_PROPERTY_PASSWD_FILE = "PasswdFile";
  private String passwdFile;

  public static final String JSON_PROPERTY_SIZE = "Size";
  private Integer size;

  public AutoUserNsOptions() { 
  }

  public AutoUserNsOptions additionalGIDMappings(List<@Valid IDMap> additionalGIDMappings) {
    this.additionalGIDMappings = additionalGIDMappings;
    return this;
  }

  public AutoUserNsOptions addAdditionalGIDMappingsItem(IDMap additionalGIDMappingsItem) {
    if (this.additionalGIDMappings == null) {
      this.additionalGIDMappings = new ArrayList<>();
    }
    this.additionalGIDMappings.add(additionalGIDMappingsItem);
    return this;
  }

  /**
   * AdditionalGIDMappings specified additional GID mappings to include in the generated user namespace.
   * @return additionalGIDMappings
   */
  @javax.annotation.Nullable
  @Valid

  @JsonProperty(JSON_PROPERTY_ADDITIONAL_G_I_D_MAPPINGS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public List<@Valid IDMap> getAdditionalGIDMappings() {
    return additionalGIDMappings;
  }


  @JsonProperty(JSON_PROPERTY_ADDITIONAL_G_I_D_MAPPINGS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAdditionalGIDMappings(List<@Valid IDMap> additionalGIDMappings) {
    this.additionalGIDMappings = additionalGIDMappings;
  }


  public AutoUserNsOptions additionalUIDMappings(List<@Valid IDMap> additionalUIDMappings) {
    this.additionalUIDMappings = additionalUIDMappings;
    return this;
  }

  public AutoUserNsOptions addAdditionalUIDMappingsItem(IDMap additionalUIDMappingsItem) {
    if (this.additionalUIDMappings == null) {
      this.additionalUIDMappings = new ArrayList<>();
    }
    this.additionalUIDMappings.add(additionalUIDMappingsItem);
    return this;
  }

  /**
   * AdditionalUIDMappings specified additional UID mappings to include in the generated user namespace.
   * @return additionalUIDMappings
   */
  @javax.annotation.Nullable
  @Valid

  @JsonProperty(JSON_PROPERTY_ADDITIONAL_U_I_D_MAPPINGS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public List<@Valid IDMap> getAdditionalUIDMappings() {
    return additionalUIDMappings;
  }


  @JsonProperty(JSON_PROPERTY_ADDITIONAL_U_I_D_MAPPINGS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAdditionalUIDMappings(List<@Valid IDMap> additionalUIDMappings) {
    this.additionalUIDMappings = additionalUIDMappings;
  }


  public AutoUserNsOptions groupFile(String groupFile) {
    this.groupFile = groupFile;
    return this;
  }

  /**
   * GroupFile to use if the container uses a volume.
   * @return groupFile
   */
  @javax.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_GROUP_FILE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getGroupFile() {
    return groupFile;
  }


  @JsonProperty(JSON_PROPERTY_GROUP_FILE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setGroupFile(String groupFile) {
    this.groupFile = groupFile;
  }


  public AutoUserNsOptions initialSize(Integer initialSize) {
    this.initialSize = initialSize;
    return this;
  }

  /**
   * InitialSize defines the minimum size for the user namespace. The created user namespace will have at least this size.
   * @return initialSize
   */
  @javax.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_INITIAL_SIZE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Integer getInitialSize() {
    return initialSize;
  }


  @JsonProperty(JSON_PROPERTY_INITIAL_SIZE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setInitialSize(Integer initialSize) {
    this.initialSize = initialSize;
  }


  public AutoUserNsOptions passwdFile(String passwdFile) {
    this.passwdFile = passwdFile;
    return this;
  }

  /**
   * PasswdFile to use if the container uses a volume.
   * @return passwdFile
   */
  @javax.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_PASSWD_FILE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getPasswdFile() {
    return passwdFile;
  }


  @JsonProperty(JSON_PROPERTY_PASSWD_FILE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPasswdFile(String passwdFile) {
    this.passwdFile = passwdFile;
  }


  public AutoUserNsOptions size(Integer size) {
    this.size = size;
    return this;
  }

  /**
   * Size defines the size for the user namespace.  If it is set to a value bigger than 0, the user namespace will have exactly this size. If it is not set, some heuristics will be used to find its size.
   * @return size
   */
  @javax.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_SIZE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Integer getSize() {
    return size;
  }


  @JsonProperty(JSON_PROPERTY_SIZE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSize(Integer size) {
    this.size = size;
  }


  /**
   * Return true if this AutoUserNsOptions object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AutoUserNsOptions autoUserNsOptions = (AutoUserNsOptions) o;
    return Objects.equals(this.additionalGIDMappings, autoUserNsOptions.additionalGIDMappings) &&
        Objects.equals(this.additionalUIDMappings, autoUserNsOptions.additionalUIDMappings) &&
        Objects.equals(this.groupFile, autoUserNsOptions.groupFile) &&
        Objects.equals(this.initialSize, autoUserNsOptions.initialSize) &&
        Objects.equals(this.passwdFile, autoUserNsOptions.passwdFile) &&
        Objects.equals(this.size, autoUserNsOptions.size);
  }

  @Override
  public int hashCode() {
    return Objects.hash(additionalGIDMappings, additionalUIDMappings, groupFile, initialSize, passwdFile, size);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AutoUserNsOptions {\n");
    sb.append("    additionalGIDMappings: ").append(toIndentedString(additionalGIDMappings)).append("\n");
    sb.append("    additionalUIDMappings: ").append(toIndentedString(additionalUIDMappings)).append("\n");
    sb.append("    groupFile: ").append(toIndentedString(groupFile)).append("\n");
    sb.append("    initialSize: ").append(toIndentedString(initialSize)).append("\n");
    sb.append("    passwdFile: ").append(toIndentedString(passwdFile)).append("\n");
    sb.append("    size: ").append(toIndentedString(size)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `AdditionalGIDMappings` to the URL query string
    if (getAdditionalGIDMappings() != null) {
      for (int i = 0; i < getAdditionalGIDMappings().size(); i++) {
        if (getAdditionalGIDMappings().get(i) != null) {
          joiner.add(getAdditionalGIDMappings().get(i).toUrlQueryString(String.format("%sAdditionalGIDMappings%s%s", prefix, suffix,
          "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix))));
        }
      }
    }

    // add `AdditionalUIDMappings` to the URL query string
    if (getAdditionalUIDMappings() != null) {
      for (int i = 0; i < getAdditionalUIDMappings().size(); i++) {
        if (getAdditionalUIDMappings().get(i) != null) {
          joiner.add(getAdditionalUIDMappings().get(i).toUrlQueryString(String.format("%sAdditionalUIDMappings%s%s", prefix, suffix,
          "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix))));
        }
      }
    }

    // add `GroupFile` to the URL query string
    if (getGroupFile() != null) {
      joiner.add(String.format("%sGroupFile%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getGroupFile()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `InitialSize` to the URL query string
    if (getInitialSize() != null) {
      joiner.add(String.format("%sInitialSize%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getInitialSize()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `PasswdFile` to the URL query string
    if (getPasswdFile() != null) {
      joiner.add(String.format("%sPasswdFile%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getPasswdFile()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `Size` to the URL query string
    if (getSize() != null) {
      joiner.add(String.format("%sSize%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getSize()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    return joiner.toString();
  }
}

