/*
 * supports a RESTful API for the Libpod library
 * This documentation describes the Podman v2.x+ RESTful API. It consists of a Docker-compatible API and a Libpod API providing support for Podmanâ€™s unique features such as pods.  To start the service and keep it running for 5,000 seconds (-t 0 runs forever):  podman system service -t 5000 &  You can then use cURL on the socket using requests documented below.  NOTE: if you install the package podman-docker, it will create a symbolic link for /run/docker.sock to /run/podman/podman.sock  NOTE: Some fields in the API response JSON are encoded as omitempty, which means that if said field has a zero value, they will not be encoded in the API response. This is a feature to help reduce the size of the JSON responses returned via the API.  NOTE: Due to the limitations of [go-swagger](https://github.com/go-swagger/go-swagger), some field values that have a complex type show up as null in the docs as well as in the API responses. This is because the zero value for the field type is null. The field description in the docs will state what type the field is expected to be for such cases.  See podman-system-service(1) for more information.  Quick Examples:  'podman info'  curl --unix-socket /run/podman/podman.sock http://d/v5.0.0/libpod/info  'podman pull quay.io/containers/podman'  curl -XPOST --unix-socket /run/podman/podman.sock -v 'http://d/v5.0.0/images/create?fromImage=quay.io%2Fcontainers%2Fpodman'  'podman list images'  curl --unix-socket /run/podman/podman.sock -v 'http://d/v5.0.0/libpod/images/json' | jq
 *
 * The version of the OpenAPI document: 5.0.0
 * Contact: podman@lists.podman.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.github.alersrt.pod4j.openapi.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.github.alersrt.pod4j.openapi.model.Address;
import io.github.alersrt.pod4j.openapi.model.EndpointSettings;
import io.github.alersrt.pod4j.openapi.model.PortBinding;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import jakarta.validation.constraints.*;
import jakarta.validation.Valid;


import io.github.alersrt.pod4j.openapi.ApiClient;
/**
 * NetworkSettings exposes the network settings in the api
 */
@JsonPropertyOrder({
  NetworkSettings.JSON_PROPERTY_BRIDGE,
  NetworkSettings.JSON_PROPERTY_ENDPOINT_I_D,
  NetworkSettings.JSON_PROPERTY_GATEWAY,
  NetworkSettings.JSON_PROPERTY_GLOBAL_I_PV6_ADDRESS,
  NetworkSettings.JSON_PROPERTY_GLOBAL_I_PV6_PREFIX_LEN,
  NetworkSettings.JSON_PROPERTY_HAIRPIN_MODE,
  NetworkSettings.JSON_PROPERTY_IP_ADDRESS,
  NetworkSettings.JSON_PROPERTY_IP_PREFIX_LEN,
  NetworkSettings.JSON_PROPERTY_IPV6_GATEWAY,
  NetworkSettings.JSON_PROPERTY_LINK_LOCAL_I_PV6_ADDRESS,
  NetworkSettings.JSON_PROPERTY_LINK_LOCAL_I_PV6_PREFIX_LEN,
  NetworkSettings.JSON_PROPERTY_MAC_ADDRESS,
  NetworkSettings.JSON_PROPERTY_NETWORKS,
  NetworkSettings.JSON_PROPERTY_PORTS,
  NetworkSettings.JSON_PROPERTY_SANDBOX_I_D,
  NetworkSettings.JSON_PROPERTY_SANDBOX_KEY,
  NetworkSettings.JSON_PROPERTY_SECONDARY_I_P_ADDRESSES,
  NetworkSettings.JSON_PROPERTY_SECONDARY_I_PV6_ADDRESSES
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-11-28T19:32:38.690938181+07:00[Asia/Barnaul]", comments = "Generator version: 7.7.0")
public class NetworkSettings {
  public static final String JSON_PROPERTY_BRIDGE = "Bridge";
  private String bridge;

  public static final String JSON_PROPERTY_ENDPOINT_I_D = "EndpointID";
  private String endpointID;

  public static final String JSON_PROPERTY_GATEWAY = "Gateway";
  private String gateway;

  public static final String JSON_PROPERTY_GLOBAL_I_PV6_ADDRESS = "GlobalIPv6Address";
  private String globalIPv6Address;

  public static final String JSON_PROPERTY_GLOBAL_I_PV6_PREFIX_LEN = "GlobalIPv6PrefixLen";
  private Long globalIPv6PrefixLen;

  public static final String JSON_PROPERTY_HAIRPIN_MODE = "HairpinMode";
  private Boolean hairpinMode;

  public static final String JSON_PROPERTY_IP_ADDRESS = "IPAddress";
  private String ipAddress;

  public static final String JSON_PROPERTY_IP_PREFIX_LEN = "IPPrefixLen";
  private Long ipPrefixLen;

  public static final String JSON_PROPERTY_IPV6_GATEWAY = "IPv6Gateway";
  private String ipv6Gateway;

  public static final String JSON_PROPERTY_LINK_LOCAL_I_PV6_ADDRESS = "LinkLocalIPv6Address";
  private String linkLocalIPv6Address;

  public static final String JSON_PROPERTY_LINK_LOCAL_I_PV6_PREFIX_LEN = "LinkLocalIPv6PrefixLen";
  private Long linkLocalIPv6PrefixLen;

  public static final String JSON_PROPERTY_MAC_ADDRESS = "MacAddress";
  private String macAddress;

  public static final String JSON_PROPERTY_NETWORKS = "Networks";
  private Map<String, EndpointSettings> networks = new HashMap<>();

  public static final String JSON_PROPERTY_PORTS = "Ports";
  private Map<String, List<@Valid PortBinding>> ports = new HashMap<>();

  public static final String JSON_PROPERTY_SANDBOX_I_D = "SandboxID";
  private String sandboxID;

  public static final String JSON_PROPERTY_SANDBOX_KEY = "SandboxKey";
  private String sandboxKey;

  public static final String JSON_PROPERTY_SECONDARY_I_P_ADDRESSES = "SecondaryIPAddresses";
  private List<@Valid Address> secondaryIPAddresses = new ArrayList<>();

  public static final String JSON_PROPERTY_SECONDARY_I_PV6_ADDRESSES = "SecondaryIPv6Addresses";
  private List<@Valid Address> secondaryIPv6Addresses = new ArrayList<>();

  public NetworkSettings() { 
  }

  public NetworkSettings bridge(String bridge) {
    this.bridge = bridge;
    return this;
  }

  /**
   * Get bridge
   * @return bridge
   */
  @javax.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_BRIDGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getBridge() {
    return bridge;
  }


  @JsonProperty(JSON_PROPERTY_BRIDGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBridge(String bridge) {
    this.bridge = bridge;
  }


  public NetworkSettings endpointID(String endpointID) {
    this.endpointID = endpointID;
    return this;
  }

  /**
   * Get endpointID
   * @return endpointID
   */
  @javax.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_ENDPOINT_I_D)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getEndpointID() {
    return endpointID;
  }


  @JsonProperty(JSON_PROPERTY_ENDPOINT_I_D)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEndpointID(String endpointID) {
    this.endpointID = endpointID;
  }


  public NetworkSettings gateway(String gateway) {
    this.gateway = gateway;
    return this;
  }

  /**
   * Get gateway
   * @return gateway
   */
  @javax.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_GATEWAY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getGateway() {
    return gateway;
  }


  @JsonProperty(JSON_PROPERTY_GATEWAY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setGateway(String gateway) {
    this.gateway = gateway;
  }


  public NetworkSettings globalIPv6Address(String globalIPv6Address) {
    this.globalIPv6Address = globalIPv6Address;
    return this;
  }

  /**
   * Get globalIPv6Address
   * @return globalIPv6Address
   */
  @javax.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_GLOBAL_I_PV6_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getGlobalIPv6Address() {
    return globalIPv6Address;
  }


  @JsonProperty(JSON_PROPERTY_GLOBAL_I_PV6_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setGlobalIPv6Address(String globalIPv6Address) {
    this.globalIPv6Address = globalIPv6Address;
  }


  public NetworkSettings globalIPv6PrefixLen(Long globalIPv6PrefixLen) {
    this.globalIPv6PrefixLen = globalIPv6PrefixLen;
    return this;
  }

  /**
   * Get globalIPv6PrefixLen
   * @return globalIPv6PrefixLen
   */
  @javax.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_GLOBAL_I_PV6_PREFIX_LEN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Long getGlobalIPv6PrefixLen() {
    return globalIPv6PrefixLen;
  }


  @JsonProperty(JSON_PROPERTY_GLOBAL_I_PV6_PREFIX_LEN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setGlobalIPv6PrefixLen(Long globalIPv6PrefixLen) {
    this.globalIPv6PrefixLen = globalIPv6PrefixLen;
  }


  public NetworkSettings hairpinMode(Boolean hairpinMode) {
    this.hairpinMode = hairpinMode;
    return this;
  }

  /**
   * HairpinMode specifies if hairpin NAT should be enabled on the virtual interface  Deprecated: This field is never set and will be removed in a future release.
   * @return hairpinMode
   */
  @javax.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_HAIRPIN_MODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Boolean getHairpinMode() {
    return hairpinMode;
  }


  @JsonProperty(JSON_PROPERTY_HAIRPIN_MODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setHairpinMode(Boolean hairpinMode) {
    this.hairpinMode = hairpinMode;
  }


  public NetworkSettings ipAddress(String ipAddress) {
    this.ipAddress = ipAddress;
    return this;
  }

  /**
   * Get ipAddress
   * @return ipAddress
   */
  @javax.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_IP_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getIpAddress() {
    return ipAddress;
  }


  @JsonProperty(JSON_PROPERTY_IP_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIpAddress(String ipAddress) {
    this.ipAddress = ipAddress;
  }


  public NetworkSettings ipPrefixLen(Long ipPrefixLen) {
    this.ipPrefixLen = ipPrefixLen;
    return this;
  }

  /**
   * Get ipPrefixLen
   * @return ipPrefixLen
   */
  @javax.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_IP_PREFIX_LEN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Long getIpPrefixLen() {
    return ipPrefixLen;
  }


  @JsonProperty(JSON_PROPERTY_IP_PREFIX_LEN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIpPrefixLen(Long ipPrefixLen) {
    this.ipPrefixLen = ipPrefixLen;
  }


  public NetworkSettings ipv6Gateway(String ipv6Gateway) {
    this.ipv6Gateway = ipv6Gateway;
    return this;
  }

  /**
   * Get ipv6Gateway
   * @return ipv6Gateway
   */
  @javax.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_IPV6_GATEWAY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getIpv6Gateway() {
    return ipv6Gateway;
  }


  @JsonProperty(JSON_PROPERTY_IPV6_GATEWAY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIpv6Gateway(String ipv6Gateway) {
    this.ipv6Gateway = ipv6Gateway;
  }


  public NetworkSettings linkLocalIPv6Address(String linkLocalIPv6Address) {
    this.linkLocalIPv6Address = linkLocalIPv6Address;
    return this;
  }

  /**
   * LinkLocalIPv6Address is an IPv6 unicast address using the link-local prefix  Deprecated: This field is never set and will be removed in a future release.
   * @return linkLocalIPv6Address
   */
  @javax.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_LINK_LOCAL_I_PV6_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getLinkLocalIPv6Address() {
    return linkLocalIPv6Address;
  }


  @JsonProperty(JSON_PROPERTY_LINK_LOCAL_I_PV6_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLinkLocalIPv6Address(String linkLocalIPv6Address) {
    this.linkLocalIPv6Address = linkLocalIPv6Address;
  }


  public NetworkSettings linkLocalIPv6PrefixLen(Long linkLocalIPv6PrefixLen) {
    this.linkLocalIPv6PrefixLen = linkLocalIPv6PrefixLen;
    return this;
  }

  /**
   * LinkLocalIPv6PrefixLen is the prefix length of an IPv6 unicast address  Deprecated: This field is never set and will be removed in a future release.
   * @return linkLocalIPv6PrefixLen
   */
  @javax.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_LINK_LOCAL_I_PV6_PREFIX_LEN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Long getLinkLocalIPv6PrefixLen() {
    return linkLocalIPv6PrefixLen;
  }


  @JsonProperty(JSON_PROPERTY_LINK_LOCAL_I_PV6_PREFIX_LEN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLinkLocalIPv6PrefixLen(Long linkLocalIPv6PrefixLen) {
    this.linkLocalIPv6PrefixLen = linkLocalIPv6PrefixLen;
  }


  public NetworkSettings macAddress(String macAddress) {
    this.macAddress = macAddress;
    return this;
  }

  /**
   * Get macAddress
   * @return macAddress
   */
  @javax.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_MAC_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getMacAddress() {
    return macAddress;
  }


  @JsonProperty(JSON_PROPERTY_MAC_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMacAddress(String macAddress) {
    this.macAddress = macAddress;
  }


  public NetworkSettings networks(Map<String, EndpointSettings> networks) {
    this.networks = networks;
    return this;
  }

  public NetworkSettings putNetworksItem(String key, EndpointSettings networksItem) {
    if (this.networks == null) {
      this.networks = new HashMap<>();
    }
    this.networks.put(key, networksItem);
    return this;
  }

  /**
   * Get networks
   * @return networks
   */
  @javax.annotation.Nullable
  @Valid

  @JsonProperty(JSON_PROPERTY_NETWORKS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Map<String, EndpointSettings> getNetworks() {
    return networks;
  }


  @JsonProperty(JSON_PROPERTY_NETWORKS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNetworks(Map<String, EndpointSettings> networks) {
    this.networks = networks;
  }


  public NetworkSettings ports(Map<String, List<@Valid PortBinding>> ports) {
    this.ports = ports;
    return this;
  }

  public NetworkSettings putPortsItem(String key, List<@Valid PortBinding> portsItem) {
    if (this.ports == null) {
      this.ports = new HashMap<>();
    }
    this.ports.put(key, portsItem);
    return this;
  }

  /**
   * PortMap is a collection of PortBinding indexed by Port
   * @return ports
   */
  @javax.annotation.Nullable
  @Valid

  @JsonProperty(JSON_PROPERTY_PORTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Map<String, List<@Valid PortBinding>> getPorts() {
    return ports;
  }


  @JsonProperty(JSON_PROPERTY_PORTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPorts(Map<String, List<@Valid PortBinding>> ports) {
    this.ports = ports;
  }


  public NetworkSettings sandboxID(String sandboxID) {
    this.sandboxID = sandboxID;
    return this;
  }

  /**
   * Get sandboxID
   * @return sandboxID
   */
  @javax.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_SANDBOX_I_D)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getSandboxID() {
    return sandboxID;
  }


  @JsonProperty(JSON_PROPERTY_SANDBOX_I_D)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSandboxID(String sandboxID) {
    this.sandboxID = sandboxID;
  }


  public NetworkSettings sandboxKey(String sandboxKey) {
    this.sandboxKey = sandboxKey;
    return this;
  }

  /**
   * Get sandboxKey
   * @return sandboxKey
   */
  @javax.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_SANDBOX_KEY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getSandboxKey() {
    return sandboxKey;
  }


  @JsonProperty(JSON_PROPERTY_SANDBOX_KEY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSandboxKey(String sandboxKey) {
    this.sandboxKey = sandboxKey;
  }


  public NetworkSettings secondaryIPAddresses(List<@Valid Address> secondaryIPAddresses) {
    this.secondaryIPAddresses = secondaryIPAddresses;
    return this;
  }

  public NetworkSettings addSecondaryIPAddressesItem(Address secondaryIPAddressesItem) {
    if (this.secondaryIPAddresses == null) {
      this.secondaryIPAddresses = new ArrayList<>();
    }
    this.secondaryIPAddresses.add(secondaryIPAddressesItem);
    return this;
  }

  /**
   * Get secondaryIPAddresses
   * @return secondaryIPAddresses
   */
  @javax.annotation.Nullable
  @Valid

  @JsonProperty(JSON_PROPERTY_SECONDARY_I_P_ADDRESSES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public List<@Valid Address> getSecondaryIPAddresses() {
    return secondaryIPAddresses;
  }


  @JsonProperty(JSON_PROPERTY_SECONDARY_I_P_ADDRESSES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSecondaryIPAddresses(List<@Valid Address> secondaryIPAddresses) {
    this.secondaryIPAddresses = secondaryIPAddresses;
  }


  public NetworkSettings secondaryIPv6Addresses(List<@Valid Address> secondaryIPv6Addresses) {
    this.secondaryIPv6Addresses = secondaryIPv6Addresses;
    return this;
  }

  public NetworkSettings addSecondaryIPv6AddressesItem(Address secondaryIPv6AddressesItem) {
    if (this.secondaryIPv6Addresses == null) {
      this.secondaryIPv6Addresses = new ArrayList<>();
    }
    this.secondaryIPv6Addresses.add(secondaryIPv6AddressesItem);
    return this;
  }

  /**
   * Get secondaryIPv6Addresses
   * @return secondaryIPv6Addresses
   */
  @javax.annotation.Nullable
  @Valid

  @JsonProperty(JSON_PROPERTY_SECONDARY_I_PV6_ADDRESSES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public List<@Valid Address> getSecondaryIPv6Addresses() {
    return secondaryIPv6Addresses;
  }


  @JsonProperty(JSON_PROPERTY_SECONDARY_I_PV6_ADDRESSES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSecondaryIPv6Addresses(List<@Valid Address> secondaryIPv6Addresses) {
    this.secondaryIPv6Addresses = secondaryIPv6Addresses;
  }


  /**
   * Return true if this NetworkSettings object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    NetworkSettings networkSettings = (NetworkSettings) o;
    return Objects.equals(this.bridge, networkSettings.bridge) &&
        Objects.equals(this.endpointID, networkSettings.endpointID) &&
        Objects.equals(this.gateway, networkSettings.gateway) &&
        Objects.equals(this.globalIPv6Address, networkSettings.globalIPv6Address) &&
        Objects.equals(this.globalIPv6PrefixLen, networkSettings.globalIPv6PrefixLen) &&
        Objects.equals(this.hairpinMode, networkSettings.hairpinMode) &&
        Objects.equals(this.ipAddress, networkSettings.ipAddress) &&
        Objects.equals(this.ipPrefixLen, networkSettings.ipPrefixLen) &&
        Objects.equals(this.ipv6Gateway, networkSettings.ipv6Gateway) &&
        Objects.equals(this.linkLocalIPv6Address, networkSettings.linkLocalIPv6Address) &&
        Objects.equals(this.linkLocalIPv6PrefixLen, networkSettings.linkLocalIPv6PrefixLen) &&
        Objects.equals(this.macAddress, networkSettings.macAddress) &&
        Objects.equals(this.networks, networkSettings.networks) &&
        Objects.equals(this.ports, networkSettings.ports) &&
        Objects.equals(this.sandboxID, networkSettings.sandboxID) &&
        Objects.equals(this.sandboxKey, networkSettings.sandboxKey) &&
        Objects.equals(this.secondaryIPAddresses, networkSettings.secondaryIPAddresses) &&
        Objects.equals(this.secondaryIPv6Addresses, networkSettings.secondaryIPv6Addresses);
  }

  @Override
  public int hashCode() {
    return Objects.hash(bridge, endpointID, gateway, globalIPv6Address, globalIPv6PrefixLen, hairpinMode, ipAddress, ipPrefixLen, ipv6Gateway, linkLocalIPv6Address, linkLocalIPv6PrefixLen, macAddress, networks, ports, sandboxID, sandboxKey, secondaryIPAddresses, secondaryIPv6Addresses);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class NetworkSettings {\n");
    sb.append("    bridge: ").append(toIndentedString(bridge)).append("\n");
    sb.append("    endpointID: ").append(toIndentedString(endpointID)).append("\n");
    sb.append("    gateway: ").append(toIndentedString(gateway)).append("\n");
    sb.append("    globalIPv6Address: ").append(toIndentedString(globalIPv6Address)).append("\n");
    sb.append("    globalIPv6PrefixLen: ").append(toIndentedString(globalIPv6PrefixLen)).append("\n");
    sb.append("    hairpinMode: ").append(toIndentedString(hairpinMode)).append("\n");
    sb.append("    ipAddress: ").append(toIndentedString(ipAddress)).append("\n");
    sb.append("    ipPrefixLen: ").append(toIndentedString(ipPrefixLen)).append("\n");
    sb.append("    ipv6Gateway: ").append(toIndentedString(ipv6Gateway)).append("\n");
    sb.append("    linkLocalIPv6Address: ").append(toIndentedString(linkLocalIPv6Address)).append("\n");
    sb.append("    linkLocalIPv6PrefixLen: ").append(toIndentedString(linkLocalIPv6PrefixLen)).append("\n");
    sb.append("    macAddress: ").append(toIndentedString(macAddress)).append("\n");
    sb.append("    networks: ").append(toIndentedString(networks)).append("\n");
    sb.append("    ports: ").append(toIndentedString(ports)).append("\n");
    sb.append("    sandboxID: ").append(toIndentedString(sandboxID)).append("\n");
    sb.append("    sandboxKey: ").append(toIndentedString(sandboxKey)).append("\n");
    sb.append("    secondaryIPAddresses: ").append(toIndentedString(secondaryIPAddresses)).append("\n");
    sb.append("    secondaryIPv6Addresses: ").append(toIndentedString(secondaryIPv6Addresses)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `Bridge` to the URL query string
    if (getBridge() != null) {
      joiner.add(String.format("%sBridge%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getBridge()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `EndpointID` to the URL query string
    if (getEndpointID() != null) {
      joiner.add(String.format("%sEndpointID%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getEndpointID()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `Gateway` to the URL query string
    if (getGateway() != null) {
      joiner.add(String.format("%sGateway%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getGateway()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `GlobalIPv6Address` to the URL query string
    if (getGlobalIPv6Address() != null) {
      joiner.add(String.format("%sGlobalIPv6Address%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getGlobalIPv6Address()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `GlobalIPv6PrefixLen` to the URL query string
    if (getGlobalIPv6PrefixLen() != null) {
      joiner.add(String.format("%sGlobalIPv6PrefixLen%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getGlobalIPv6PrefixLen()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `HairpinMode` to the URL query string
    if (getHairpinMode() != null) {
      joiner.add(String.format("%sHairpinMode%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getHairpinMode()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `IPAddress` to the URL query string
    if (getIpAddress() != null) {
      joiner.add(String.format("%sIPAddress%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getIpAddress()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `IPPrefixLen` to the URL query string
    if (getIpPrefixLen() != null) {
      joiner.add(String.format("%sIPPrefixLen%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getIpPrefixLen()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `IPv6Gateway` to the URL query string
    if (getIpv6Gateway() != null) {
      joiner.add(String.format("%sIPv6Gateway%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getIpv6Gateway()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `LinkLocalIPv6Address` to the URL query string
    if (getLinkLocalIPv6Address() != null) {
      joiner.add(String.format("%sLinkLocalIPv6Address%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getLinkLocalIPv6Address()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `LinkLocalIPv6PrefixLen` to the URL query string
    if (getLinkLocalIPv6PrefixLen() != null) {
      joiner.add(String.format("%sLinkLocalIPv6PrefixLen%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getLinkLocalIPv6PrefixLen()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `MacAddress` to the URL query string
    if (getMacAddress() != null) {
      joiner.add(String.format("%sMacAddress%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getMacAddress()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `Networks` to the URL query string
    if (getNetworks() != null) {
      for (String _key : getNetworks().keySet()) {
        if (getNetworks().get(_key) != null) {
          joiner.add(getNetworks().get(_key).toUrlQueryString(String.format("%sNetworks%s%s", prefix, suffix,
              "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, _key, containerSuffix))));
        }
      }
    }

    // add `Ports` to the URL query string
    if (getPorts() != null) {
      for (String _key : getPorts().keySet()) {
        joiner.add(String.format("%sPorts%s%s=%s", prefix, suffix,
            "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, _key, containerSuffix),
            getPorts().get(_key), URLEncoder.encode(ApiClient.valueToString(getPorts().get(_key)), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
      }
    }

    // add `SandboxID` to the URL query string
    if (getSandboxID() != null) {
      joiner.add(String.format("%sSandboxID%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getSandboxID()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `SandboxKey` to the URL query string
    if (getSandboxKey() != null) {
      joiner.add(String.format("%sSandboxKey%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getSandboxKey()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `SecondaryIPAddresses` to the URL query string
    if (getSecondaryIPAddresses() != null) {
      for (int i = 0; i < getSecondaryIPAddresses().size(); i++) {
        if (getSecondaryIPAddresses().get(i) != null) {
          joiner.add(getSecondaryIPAddresses().get(i).toUrlQueryString(String.format("%sSecondaryIPAddresses%s%s", prefix, suffix,
          "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix))));
        }
      }
    }

    // add `SecondaryIPv6Addresses` to the URL query string
    if (getSecondaryIPv6Addresses() != null) {
      for (int i = 0; i < getSecondaryIPv6Addresses().size(); i++) {
        if (getSecondaryIPv6Addresses().get(i) != null) {
          joiner.add(getSecondaryIPv6Addresses().get(i).toUrlQueryString(String.format("%sSecondaryIPv6Addresses%s%s", prefix, suffix,
          "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix))));
        }
      }
    }

    return joiner.toString();
  }
}

