/*
 * supports a RESTful API for the Libpod library
 * This documentation describes the Podman v2.x+ RESTful API. It consists of a Docker-compatible API and a Libpod API providing support for Podmanâ€™s unique features such as pods.  To start the service and keep it running for 5,000 seconds (-t 0 runs forever):  podman system service -t 5000 &  You can then use cURL on the socket using requests documented below.  NOTE: if you install the package podman-docker, it will create a symbolic link for /run/docker.sock to /run/podman/podman.sock  NOTE: Some fields in the API response JSON are encoded as omitempty, which means that if said field has a zero value, they will not be encoded in the API response. This is a feature to help reduce the size of the JSON responses returned via the API.  NOTE: Due to the limitations of [go-swagger](https://github.com/go-swagger/go-swagger), some field values that have a complex type show up as null in the docs as well as in the API responses. This is because the zero value for the field type is null. The field description in the docs will state what type the field is expected to be for such cases.  See podman-system-service(1) for more information.  Quick Examples:  'podman info'  curl --unix-socket /run/podman/podman.sock http://d/v5.0.0/libpod/info  'podman pull quay.io/containers/podman'  curl -XPOST --unix-socket /run/podman/podman.sock -v 'http://d/v5.0.0/images/create?fromImage=quay.io%2Fcontainers%2Fpodman'  'podman list images'  curl --unix-socket /run/podman/podman.sock -v 'http://d/v5.0.0/libpod/images/json' | jq
 *
 * The version of the OpenAPI document: 5.0.0
 * Contact: podman@lists.podman.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.github.alersrt.pod4j.openapi.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.github.alersrt.pod4j.openapi.model.PlayKubePod;
import io.github.alersrt.pod4j.openapi.model.PlayKubeVolume;
import io.github.alersrt.pod4j.openapi.model.PlaySecret;
import io.github.alersrt.pod4j.openapi.model.PodRmReport;
import io.github.alersrt.pod4j.openapi.model.PodStopReport;
import io.github.alersrt.pod4j.openapi.model.SecretRmReport;
import io.github.alersrt.pod4j.openapi.model.VolumeRmReport;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import jakarta.validation.constraints.*;
import jakarta.validation.Valid;


import io.github.alersrt.pod4j.openapi.ApiClient;
/**
 * PlayKubeReport
 */
@JsonPropertyOrder({
  PlayKubeReport.JSON_PROPERTY_EXIT_CODE,
  PlayKubeReport.JSON_PROPERTY_PODS,
  PlayKubeReport.JSON_PROPERTY_RM_REPORT,
  PlayKubeReport.JSON_PROPERTY_SECRET_RM_REPORT,
  PlayKubeReport.JSON_PROPERTY_SECRETS,
  PlayKubeReport.JSON_PROPERTY_SERVICE_CONTAINER_I_D,
  PlayKubeReport.JSON_PROPERTY_STOP_REPORT,
  PlayKubeReport.JSON_PROPERTY_VOLUME_RM_REPORT,
  PlayKubeReport.JSON_PROPERTY_VOLUMES
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-11-28T19:32:38.690938181+07:00[Asia/Barnaul]", comments = "Generator version: 7.7.0")
public class PlayKubeReport {
  public static final String JSON_PROPERTY_EXIT_CODE = "ExitCode";
  private Integer exitCode;

  public static final String JSON_PROPERTY_PODS = "Pods";
  private List<@Valid PlayKubePod> pods = new ArrayList<>();

  public static final String JSON_PROPERTY_RM_REPORT = "RmReport";
  private List<@Valid PodRmReport> rmReport = new ArrayList<>();

  public static final String JSON_PROPERTY_SECRET_RM_REPORT = "SecretRmReport";
  private List<@Valid SecretRmReport> secretRmReport = new ArrayList<>();

  public static final String JSON_PROPERTY_SECRETS = "Secrets";
  private List<@Valid PlaySecret> secrets = new ArrayList<>();

  public static final String JSON_PROPERTY_SERVICE_CONTAINER_I_D = "ServiceContainerID";
  private String serviceContainerID;

  public static final String JSON_PROPERTY_STOP_REPORT = "StopReport";
  private List<@Valid PodStopReport> stopReport = new ArrayList<>();

  public static final String JSON_PROPERTY_VOLUME_RM_REPORT = "VolumeRmReport";
  private List<@Valid VolumeRmReport> volumeRmReport = new ArrayList<>();

  public static final String JSON_PROPERTY_VOLUMES = "Volumes";
  private List<@Valid PlayKubeVolume> volumes = new ArrayList<>();

  public PlayKubeReport() { 
  }

  public PlayKubeReport exitCode(Integer exitCode) {
    this.exitCode = exitCode;
    return this;
  }

  /**
   * If set, exit with the specified exit code.
   * @return exitCode
   */
  @javax.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_EXIT_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Integer getExitCode() {
    return exitCode;
  }


  @JsonProperty(JSON_PROPERTY_EXIT_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExitCode(Integer exitCode) {
    this.exitCode = exitCode;
  }


  public PlayKubeReport pods(List<@Valid PlayKubePod> pods) {
    this.pods = pods;
    return this;
  }

  public PlayKubeReport addPodsItem(PlayKubePod podsItem) {
    if (this.pods == null) {
      this.pods = new ArrayList<>();
    }
    this.pods.add(podsItem);
    return this;
  }

  /**
   * Pods - pods created by play kube.
   * @return pods
   */
  @javax.annotation.Nullable
  @Valid

  @JsonProperty(JSON_PROPERTY_PODS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public List<@Valid PlayKubePod> getPods() {
    return pods;
  }


  @JsonProperty(JSON_PROPERTY_PODS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPods(List<@Valid PlayKubePod> pods) {
    this.pods = pods;
  }


  public PlayKubeReport rmReport(List<@Valid PodRmReport> rmReport) {
    this.rmReport = rmReport;
    return this;
  }

  public PlayKubeReport addRmReportItem(PodRmReport rmReportItem) {
    if (this.rmReport == null) {
      this.rmReport = new ArrayList<>();
    }
    this.rmReport.add(rmReportItem);
    return this;
  }

  /**
   * Get rmReport
   * @return rmReport
   */
  @javax.annotation.Nullable
  @Valid

  @JsonProperty(JSON_PROPERTY_RM_REPORT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public List<@Valid PodRmReport> getRmReport() {
    return rmReport;
  }


  @JsonProperty(JSON_PROPERTY_RM_REPORT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRmReport(List<@Valid PodRmReport> rmReport) {
    this.rmReport = rmReport;
  }


  public PlayKubeReport secretRmReport(List<@Valid SecretRmReport> secretRmReport) {
    this.secretRmReport = secretRmReport;
    return this;
  }

  public PlayKubeReport addSecretRmReportItem(SecretRmReport secretRmReportItem) {
    if (this.secretRmReport == null) {
      this.secretRmReport = new ArrayList<>();
    }
    this.secretRmReport.add(secretRmReportItem);
    return this;
  }

  /**
   * Get secretRmReport
   * @return secretRmReport
   */
  @javax.annotation.Nullable
  @Valid

  @JsonProperty(JSON_PROPERTY_SECRET_RM_REPORT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public List<@Valid SecretRmReport> getSecretRmReport() {
    return secretRmReport;
  }


  @JsonProperty(JSON_PROPERTY_SECRET_RM_REPORT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSecretRmReport(List<@Valid SecretRmReport> secretRmReport) {
    this.secretRmReport = secretRmReport;
  }


  public PlayKubeReport secrets(List<@Valid PlaySecret> secrets) {
    this.secrets = secrets;
    return this;
  }

  public PlayKubeReport addSecretsItem(PlaySecret secretsItem) {
    if (this.secrets == null) {
      this.secrets = new ArrayList<>();
    }
    this.secrets.add(secretsItem);
    return this;
  }

  /**
   * Secrets - secrets created by play kube
   * @return secrets
   */
  @javax.annotation.Nullable
  @Valid

  @JsonProperty(JSON_PROPERTY_SECRETS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public List<@Valid PlaySecret> getSecrets() {
    return secrets;
  }


  @JsonProperty(JSON_PROPERTY_SECRETS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSecrets(List<@Valid PlaySecret> secrets) {
    this.secrets = secrets;
  }


  public PlayKubeReport serviceContainerID(String serviceContainerID) {
    this.serviceContainerID = serviceContainerID;
    return this;
  }

  /**
   * ServiceContainerID - ID of the service container if one is created
   * @return serviceContainerID
   */
  @javax.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_SERVICE_CONTAINER_I_D)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getServiceContainerID() {
    return serviceContainerID;
  }


  @JsonProperty(JSON_PROPERTY_SERVICE_CONTAINER_I_D)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setServiceContainerID(String serviceContainerID) {
    this.serviceContainerID = serviceContainerID;
  }


  public PlayKubeReport stopReport(List<@Valid PodStopReport> stopReport) {
    this.stopReport = stopReport;
    return this;
  }

  public PlayKubeReport addStopReportItem(PodStopReport stopReportItem) {
    if (this.stopReport == null) {
      this.stopReport = new ArrayList<>();
    }
    this.stopReport.add(stopReportItem);
    return this;
  }

  /**
   * Get stopReport
   * @return stopReport
   */
  @javax.annotation.Nullable
  @Valid

  @JsonProperty(JSON_PROPERTY_STOP_REPORT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public List<@Valid PodStopReport> getStopReport() {
    return stopReport;
  }


  @JsonProperty(JSON_PROPERTY_STOP_REPORT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStopReport(List<@Valid PodStopReport> stopReport) {
    this.stopReport = stopReport;
  }


  public PlayKubeReport volumeRmReport(List<@Valid VolumeRmReport> volumeRmReport) {
    this.volumeRmReport = volumeRmReport;
    return this;
  }

  public PlayKubeReport addVolumeRmReportItem(VolumeRmReport volumeRmReportItem) {
    if (this.volumeRmReport == null) {
      this.volumeRmReport = new ArrayList<>();
    }
    this.volumeRmReport.add(volumeRmReportItem);
    return this;
  }

  /**
   * Get volumeRmReport
   * @return volumeRmReport
   */
  @javax.annotation.Nullable
  @Valid

  @JsonProperty(JSON_PROPERTY_VOLUME_RM_REPORT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public List<@Valid VolumeRmReport> getVolumeRmReport() {
    return volumeRmReport;
  }


  @JsonProperty(JSON_PROPERTY_VOLUME_RM_REPORT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setVolumeRmReport(List<@Valid VolumeRmReport> volumeRmReport) {
    this.volumeRmReport = volumeRmReport;
  }


  public PlayKubeReport volumes(List<@Valid PlayKubeVolume> volumes) {
    this.volumes = volumes;
    return this;
  }

  public PlayKubeReport addVolumesItem(PlayKubeVolume volumesItem) {
    if (this.volumes == null) {
      this.volumes = new ArrayList<>();
    }
    this.volumes.add(volumesItem);
    return this;
  }

  /**
   * Volumes - volumes created by play kube.
   * @return volumes
   */
  @javax.annotation.Nullable
  @Valid

  @JsonProperty(JSON_PROPERTY_VOLUMES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public List<@Valid PlayKubeVolume> getVolumes() {
    return volumes;
  }


  @JsonProperty(JSON_PROPERTY_VOLUMES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setVolumes(List<@Valid PlayKubeVolume> volumes) {
    this.volumes = volumes;
  }


  /**
   * Return true if this PlayKubeReport object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PlayKubeReport playKubeReport = (PlayKubeReport) o;
    return Objects.equals(this.exitCode, playKubeReport.exitCode) &&
        Objects.equals(this.pods, playKubeReport.pods) &&
        Objects.equals(this.rmReport, playKubeReport.rmReport) &&
        Objects.equals(this.secretRmReport, playKubeReport.secretRmReport) &&
        Objects.equals(this.secrets, playKubeReport.secrets) &&
        Objects.equals(this.serviceContainerID, playKubeReport.serviceContainerID) &&
        Objects.equals(this.stopReport, playKubeReport.stopReport) &&
        Objects.equals(this.volumeRmReport, playKubeReport.volumeRmReport) &&
        Objects.equals(this.volumes, playKubeReport.volumes);
  }

  @Override
  public int hashCode() {
    return Objects.hash(exitCode, pods, rmReport, secretRmReport, secrets, serviceContainerID, stopReport, volumeRmReport, volumes);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PlayKubeReport {\n");
    sb.append("    exitCode: ").append(toIndentedString(exitCode)).append("\n");
    sb.append("    pods: ").append(toIndentedString(pods)).append("\n");
    sb.append("    rmReport: ").append(toIndentedString(rmReport)).append("\n");
    sb.append("    secretRmReport: ").append(toIndentedString(secretRmReport)).append("\n");
    sb.append("    secrets: ").append(toIndentedString(secrets)).append("\n");
    sb.append("    serviceContainerID: ").append(toIndentedString(serviceContainerID)).append("\n");
    sb.append("    stopReport: ").append(toIndentedString(stopReport)).append("\n");
    sb.append("    volumeRmReport: ").append(toIndentedString(volumeRmReport)).append("\n");
    sb.append("    volumes: ").append(toIndentedString(volumes)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `ExitCode` to the URL query string
    if (getExitCode() != null) {
      joiner.add(String.format("%sExitCode%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getExitCode()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `Pods` to the URL query string
    if (getPods() != null) {
      for (int i = 0; i < getPods().size(); i++) {
        if (getPods().get(i) != null) {
          joiner.add(getPods().get(i).toUrlQueryString(String.format("%sPods%s%s", prefix, suffix,
          "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix))));
        }
      }
    }

    // add `RmReport` to the URL query string
    if (getRmReport() != null) {
      for (int i = 0; i < getRmReport().size(); i++) {
        if (getRmReport().get(i) != null) {
          joiner.add(getRmReport().get(i).toUrlQueryString(String.format("%sRmReport%s%s", prefix, suffix,
          "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix))));
        }
      }
    }

    // add `SecretRmReport` to the URL query string
    if (getSecretRmReport() != null) {
      for (int i = 0; i < getSecretRmReport().size(); i++) {
        if (getSecretRmReport().get(i) != null) {
          joiner.add(getSecretRmReport().get(i).toUrlQueryString(String.format("%sSecretRmReport%s%s", prefix, suffix,
          "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix))));
        }
      }
    }

    // add `Secrets` to the URL query string
    if (getSecrets() != null) {
      for (int i = 0; i < getSecrets().size(); i++) {
        if (getSecrets().get(i) != null) {
          joiner.add(getSecrets().get(i).toUrlQueryString(String.format("%sSecrets%s%s", prefix, suffix,
          "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix))));
        }
      }
    }

    // add `ServiceContainerID` to the URL query string
    if (getServiceContainerID() != null) {
      joiner.add(String.format("%sServiceContainerID%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getServiceContainerID()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `StopReport` to the URL query string
    if (getStopReport() != null) {
      for (int i = 0; i < getStopReport().size(); i++) {
        if (getStopReport().get(i) != null) {
          joiner.add(getStopReport().get(i).toUrlQueryString(String.format("%sStopReport%s%s", prefix, suffix,
          "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix))));
        }
      }
    }

    // add `VolumeRmReport` to the URL query string
    if (getVolumeRmReport() != null) {
      for (int i = 0; i < getVolumeRmReport().size(); i++) {
        if (getVolumeRmReport().get(i) != null) {
          joiner.add(getVolumeRmReport().get(i).toUrlQueryString(String.format("%sVolumeRmReport%s%s", prefix, suffix,
          "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix))));
        }
      }
    }

    // add `Volumes` to the URL query string
    if (getVolumes() != null) {
      for (int i = 0; i < getVolumes().size(); i++) {
        if (getVolumes().get(i) != null) {
          joiner.add(getVolumes().get(i).toUrlQueryString(String.format("%sVolumes%s%s", prefix, suffix,
          "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix))));
        }
      }
    }

    return joiner.toString();
  }
}

