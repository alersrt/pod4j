/*
 * supports a RESTful API for the Libpod library
 * This documentation describes the Podman v2.x+ RESTful API. It consists of a Docker-compatible API and a Libpod API providing support for Podmanâ€™s unique features such as pods.  To start the service and keep it running for 5,000 seconds (-t 0 runs forever):  podman system service -t 5000 &  You can then use cURL on the socket using requests documented below.  NOTE: if you install the package podman-docker, it will create a symbolic link for /run/docker.sock to /run/podman/podman.sock  NOTE: Some fields in the API response JSON are encoded as omitempty, which means that if said field has a zero value, they will not be encoded in the API response. This is a feature to help reduce the size of the JSON responses returned via the API.  NOTE: Due to the limitations of [go-swagger](https://github.com/go-swagger/go-swagger), some field values that have a complex type show up as null in the docs as well as in the API responses. This is because the zero value for the field type is null. The field description in the docs will state what type the field is expected to be for such cases.  See podman-system-service(1) for more information.  Quick Examples:  'podman info'  curl --unix-socket /run/podman/podman.sock http://d/v5.0.0/libpod/info  'podman pull quay.io/containers/podman'  curl -XPOST --unix-socket /run/podman/podman.sock -v 'http://d/v5.0.0/images/create?fromImage=quay.io%2Fcontainers%2Fpodman'  'podman list images'  curl --unix-socket /run/podman/podman.sock -v 'http://d/v5.0.0/libpod/images/json' | jq
 *
 * The version of the OpenAPI document: 5.0.0
 * Contact: podman@lists.podman.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.github.alersrt.pod4j.openapi.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.github.alersrt.pod4j.openapi.model.NetOptions;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import jakarta.validation.constraints.*;
import jakarta.validation.Valid;


import io.github.alersrt.pod4j.openapi.ApiClient;
/**
 * The JSON tags below are made to match the respective field in ContainerCreateOptions for the purpose of mapping.
 */
@JsonPropertyOrder({
  PodCreateOptions.JSON_PROPERTY_CGROUP_PARENT,
  PodCreateOptions.JSON_PROPERTY_CONTAINER_COMMAND,
  PodCreateOptions.JSON_PROPERTY_CONTAINER_CONMON_PIDFILE,
  PodCreateOptions.JSON_PROPERTY_CONTAINER_NAME,
  PodCreateOptions.JSON_PROPERTY_CPUS,
  PodCreateOptions.JSON_PROPERTY_CPUSET_CPUS,
  PodCreateOptions.JSON_PROPERTY_CREATE_COMMAND,
  PodCreateOptions.JSON_PROPERTY_DEVICE_READ_BPS,
  PodCreateOptions.JSON_PROPERTY_DEVICES,
  PodCreateOptions.JSON_PROPERTY_EXIT_POLICY,
  PodCreateOptions.JSON_PROPERTY_HOSTNAME,
  PodCreateOptions.JSON_PROPERTY_INFRA,
  PodCreateOptions.JSON_PROPERTY_INFRA_IMAGE,
  PodCreateOptions.JSON_PROPERTY_IPC,
  PodCreateOptions.JSON_PROPERTY_LABELS,
  PodCreateOptions.JSON_PROPERTY_NAME,
  PodCreateOptions.JSON_PROPERTY_NET,
  PodCreateOptions.JSON_PROPERTY_PID,
  PodCreateOptions.JSON_PROPERTY_RESTART,
  PodCreateOptions.JSON_PROPERTY_SECURITY_OPT,
  PodCreateOptions.JSON_PROPERTY_SHARE,
  PodCreateOptions.JSON_PROPERTY_SHARE_PARENT,
  PodCreateOptions.JSON_PROPERTY_SYSCTL,
  PodCreateOptions.JSON_PROPERTY_UTS,
  PodCreateOptions.JSON_PROPERTY_VOLUME,
  PodCreateOptions.JSON_PROPERTY_VOLUMES_FROM
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-11-28T19:32:38.690938181+07:00[Asia/Barnaul]", comments = "Generator version: 7.7.0")
public class PodCreateOptions {
  public static final String JSON_PROPERTY_CGROUP_PARENT = "cgroup_parent";
  private String cgroupParent;

  public static final String JSON_PROPERTY_CONTAINER_COMMAND = "container_command";
  private String containerCommand;

  public static final String JSON_PROPERTY_CONTAINER_CONMON_PIDFILE = "container_conmon_pidfile";
  private String containerConmonPidfile;

  public static final String JSON_PROPERTY_CONTAINER_NAME = "container_name";
  private String containerName;

  public static final String JSON_PROPERTY_CPUS = "cpus";
  private Double cpus;

  public static final String JSON_PROPERTY_CPUSET_CPUS = "cpuset_cpus";
  private String cpusetCpus;

  public static final String JSON_PROPERTY_CREATE_COMMAND = "create_command";
  private List<String> createCommand = new ArrayList<>();

  public static final String JSON_PROPERTY_DEVICE_READ_BPS = "device_read_bps";
  private List<String> deviceReadBps = new ArrayList<>();

  public static final String JSON_PROPERTY_DEVICES = "devices";
  private List<String> devices = new ArrayList<>();

  public static final String JSON_PROPERTY_EXIT_POLICY = "exit_policy";
  private String exitPolicy;

  public static final String JSON_PROPERTY_HOSTNAME = "hostname";
  private String hostname;

  public static final String JSON_PROPERTY_INFRA = "infra";
  private Boolean infra;

  public static final String JSON_PROPERTY_INFRA_IMAGE = "infra_image";
  private String infraImage;

  public static final String JSON_PROPERTY_IPC = "ipc";
  private String ipc;

  public static final String JSON_PROPERTY_LABELS = "labels";
  private Map<String, String> labels = new HashMap<>();

  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_NET = "net";
  private NetOptions net;

  public static final String JSON_PROPERTY_PID = "pid";
  private String pid;

  public static final String JSON_PROPERTY_RESTART = "restart";
  private String restart;

  public static final String JSON_PROPERTY_SECURITY_OPT = "security_opt";
  private List<String> securityOpt = new ArrayList<>();

  public static final String JSON_PROPERTY_SHARE = "share";
  private List<String> share = new ArrayList<>();

  public static final String JSON_PROPERTY_SHARE_PARENT = "share_parent";
  private Boolean shareParent;

  public static final String JSON_PROPERTY_SYSCTL = "sysctl";
  private List<String> sysctl = new ArrayList<>();

  public static final String JSON_PROPERTY_UTS = "uts";
  private String uts;

  public static final String JSON_PROPERTY_VOLUME = "volume";
  private List<String> volume = new ArrayList<>();

  public static final String JSON_PROPERTY_VOLUMES_FROM = "volumes_from";
  private List<String> volumesFrom = new ArrayList<>();

  public PodCreateOptions() { 
  }

  public PodCreateOptions cgroupParent(String cgroupParent) {
    this.cgroupParent = cgroupParent;
    return this;
  }

  /**
   * Get cgroupParent
   * @return cgroupParent
   */
  @javax.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_CGROUP_PARENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getCgroupParent() {
    return cgroupParent;
  }


  @JsonProperty(JSON_PROPERTY_CGROUP_PARENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCgroupParent(String cgroupParent) {
    this.cgroupParent = cgroupParent;
  }


  public PodCreateOptions containerCommand(String containerCommand) {
    this.containerCommand = containerCommand;
    return this;
  }

  /**
   * Get containerCommand
   * @return containerCommand
   */
  @javax.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_CONTAINER_COMMAND)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getContainerCommand() {
    return containerCommand;
  }


  @JsonProperty(JSON_PROPERTY_CONTAINER_COMMAND)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setContainerCommand(String containerCommand) {
    this.containerCommand = containerCommand;
  }


  public PodCreateOptions containerConmonPidfile(String containerConmonPidfile) {
    this.containerConmonPidfile = containerConmonPidfile;
    return this;
  }

  /**
   * Get containerConmonPidfile
   * @return containerConmonPidfile
   */
  @javax.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_CONTAINER_CONMON_PIDFILE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getContainerConmonPidfile() {
    return containerConmonPidfile;
  }


  @JsonProperty(JSON_PROPERTY_CONTAINER_CONMON_PIDFILE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setContainerConmonPidfile(String containerConmonPidfile) {
    this.containerConmonPidfile = containerConmonPidfile;
  }


  public PodCreateOptions containerName(String containerName) {
    this.containerName = containerName;
    return this;
  }

  /**
   * Get containerName
   * @return containerName
   */
  @javax.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_CONTAINER_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getContainerName() {
    return containerName;
  }


  @JsonProperty(JSON_PROPERTY_CONTAINER_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setContainerName(String containerName) {
    this.containerName = containerName;
  }


  public PodCreateOptions cpus(Double cpus) {
    this.cpus = cpus;
    return this;
  }

  /**
   * Get cpus
   * @return cpus
   */
  @javax.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_CPUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Double getCpus() {
    return cpus;
  }


  @JsonProperty(JSON_PROPERTY_CPUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCpus(Double cpus) {
    this.cpus = cpus;
  }


  public PodCreateOptions cpusetCpus(String cpusetCpus) {
    this.cpusetCpus = cpusetCpus;
    return this;
  }

  /**
   * Get cpusetCpus
   * @return cpusetCpus
   */
  @javax.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_CPUSET_CPUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getCpusetCpus() {
    return cpusetCpus;
  }


  @JsonProperty(JSON_PROPERTY_CPUSET_CPUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCpusetCpus(String cpusetCpus) {
    this.cpusetCpus = cpusetCpus;
  }


  public PodCreateOptions createCommand(List<String> createCommand) {
    this.createCommand = createCommand;
    return this;
  }

  public PodCreateOptions addCreateCommandItem(String createCommandItem) {
    if (this.createCommand == null) {
      this.createCommand = new ArrayList<>();
    }
    this.createCommand.add(createCommandItem);
    return this;
  }

  /**
   * Get createCommand
   * @return createCommand
   */
  @javax.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_CREATE_COMMAND)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public List<String> getCreateCommand() {
    return createCommand;
  }


  @JsonProperty(JSON_PROPERTY_CREATE_COMMAND)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreateCommand(List<String> createCommand) {
    this.createCommand = createCommand;
  }


  public PodCreateOptions deviceReadBps(List<String> deviceReadBps) {
    this.deviceReadBps = deviceReadBps;
    return this;
  }

  public PodCreateOptions addDeviceReadBpsItem(String deviceReadBpsItem) {
    if (this.deviceReadBps == null) {
      this.deviceReadBps = new ArrayList<>();
    }
    this.deviceReadBps.add(deviceReadBpsItem);
    return this;
  }

  /**
   * Get deviceReadBps
   * @return deviceReadBps
   */
  @javax.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_DEVICE_READ_BPS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public List<String> getDeviceReadBps() {
    return deviceReadBps;
  }


  @JsonProperty(JSON_PROPERTY_DEVICE_READ_BPS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDeviceReadBps(List<String> deviceReadBps) {
    this.deviceReadBps = deviceReadBps;
  }


  public PodCreateOptions devices(List<String> devices) {
    this.devices = devices;
    return this;
  }

  public PodCreateOptions addDevicesItem(String devicesItem) {
    if (this.devices == null) {
      this.devices = new ArrayList<>();
    }
    this.devices.add(devicesItem);
    return this;
  }

  /**
   * Get devices
   * @return devices
   */
  @javax.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_DEVICES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public List<String> getDevices() {
    return devices;
  }


  @JsonProperty(JSON_PROPERTY_DEVICES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDevices(List<String> devices) {
    this.devices = devices;
  }


  public PodCreateOptions exitPolicy(String exitPolicy) {
    this.exitPolicy = exitPolicy;
    return this;
  }

  /**
   * Get exitPolicy
   * @return exitPolicy
   */
  @javax.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_EXIT_POLICY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getExitPolicy() {
    return exitPolicy;
  }


  @JsonProperty(JSON_PROPERTY_EXIT_POLICY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExitPolicy(String exitPolicy) {
    this.exitPolicy = exitPolicy;
  }


  public PodCreateOptions hostname(String hostname) {
    this.hostname = hostname;
    return this;
  }

  /**
   * Get hostname
   * @return hostname
   */
  @javax.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_HOSTNAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getHostname() {
    return hostname;
  }


  @JsonProperty(JSON_PROPERTY_HOSTNAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setHostname(String hostname) {
    this.hostname = hostname;
  }


  public PodCreateOptions infra(Boolean infra) {
    this.infra = infra;
    return this;
  }

  /**
   * Get infra
   * @return infra
   */
  @javax.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_INFRA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Boolean getInfra() {
    return infra;
  }


  @JsonProperty(JSON_PROPERTY_INFRA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setInfra(Boolean infra) {
    this.infra = infra;
  }


  public PodCreateOptions infraImage(String infraImage) {
    this.infraImage = infraImage;
    return this;
  }

  /**
   * Get infraImage
   * @return infraImage
   */
  @javax.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_INFRA_IMAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getInfraImage() {
    return infraImage;
  }


  @JsonProperty(JSON_PROPERTY_INFRA_IMAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setInfraImage(String infraImage) {
    this.infraImage = infraImage;
  }


  public PodCreateOptions ipc(String ipc) {
    this.ipc = ipc;
    return this;
  }

  /**
   * Get ipc
   * @return ipc
   */
  @javax.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_IPC)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getIpc() {
    return ipc;
  }


  @JsonProperty(JSON_PROPERTY_IPC)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIpc(String ipc) {
    this.ipc = ipc;
  }


  public PodCreateOptions labels(Map<String, String> labels) {
    this.labels = labels;
    return this;
  }

  public PodCreateOptions putLabelsItem(String key, String labelsItem) {
    if (this.labels == null) {
      this.labels = new HashMap<>();
    }
    this.labels.put(key, labelsItem);
    return this;
  }

  /**
   * Get labels
   * @return labels
   */
  @javax.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_LABELS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Map<String, String> getLabels() {
    return labels;
  }


  @JsonProperty(JSON_PROPERTY_LABELS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLabels(Map<String, String> labels) {
    this.labels = labels;
  }


  public PodCreateOptions name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Get name
   * @return name
   */
  @javax.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setName(String name) {
    this.name = name;
  }


  public PodCreateOptions net(NetOptions net) {
    this.net = net;
    return this;
  }

  /**
   * Get net
   * @return net
   */
  @javax.annotation.Nullable
  @Valid

  @JsonProperty(JSON_PROPERTY_NET)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public NetOptions getNet() {
    return net;
  }


  @JsonProperty(JSON_PROPERTY_NET)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNet(NetOptions net) {
    this.net = net;
  }


  public PodCreateOptions pid(String pid) {
    this.pid = pid;
    return this;
  }

  /**
   * Get pid
   * @return pid
   */
  @javax.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_PID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getPid() {
    return pid;
  }


  @JsonProperty(JSON_PROPERTY_PID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPid(String pid) {
    this.pid = pid;
  }


  public PodCreateOptions restart(String restart) {
    this.restart = restart;
    return this;
  }

  /**
   * Get restart
   * @return restart
   */
  @javax.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_RESTART)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getRestart() {
    return restart;
  }


  @JsonProperty(JSON_PROPERTY_RESTART)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRestart(String restart) {
    this.restart = restart;
  }


  public PodCreateOptions securityOpt(List<String> securityOpt) {
    this.securityOpt = securityOpt;
    return this;
  }

  public PodCreateOptions addSecurityOptItem(String securityOptItem) {
    if (this.securityOpt == null) {
      this.securityOpt = new ArrayList<>();
    }
    this.securityOpt.add(securityOptItem);
    return this;
  }

  /**
   * Get securityOpt
   * @return securityOpt
   */
  @javax.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_SECURITY_OPT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public List<String> getSecurityOpt() {
    return securityOpt;
  }


  @JsonProperty(JSON_PROPERTY_SECURITY_OPT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSecurityOpt(List<String> securityOpt) {
    this.securityOpt = securityOpt;
  }


  public PodCreateOptions share(List<String> share) {
    this.share = share;
    return this;
  }

  public PodCreateOptions addShareItem(String shareItem) {
    if (this.share == null) {
      this.share = new ArrayList<>();
    }
    this.share.add(shareItem);
    return this;
  }

  /**
   * Get share
   * @return share
   */
  @javax.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_SHARE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public List<String> getShare() {
    return share;
  }


  @JsonProperty(JSON_PROPERTY_SHARE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setShare(List<String> share) {
    this.share = share;
  }


  public PodCreateOptions shareParent(Boolean shareParent) {
    this.shareParent = shareParent;
    return this;
  }

  /**
   * Get shareParent
   * @return shareParent
   */
  @javax.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_SHARE_PARENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Boolean getShareParent() {
    return shareParent;
  }


  @JsonProperty(JSON_PROPERTY_SHARE_PARENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setShareParent(Boolean shareParent) {
    this.shareParent = shareParent;
  }


  public PodCreateOptions sysctl(List<String> sysctl) {
    this.sysctl = sysctl;
    return this;
  }

  public PodCreateOptions addSysctlItem(String sysctlItem) {
    if (this.sysctl == null) {
      this.sysctl = new ArrayList<>();
    }
    this.sysctl.add(sysctlItem);
    return this;
  }

  /**
   * Get sysctl
   * @return sysctl
   */
  @javax.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_SYSCTL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public List<String> getSysctl() {
    return sysctl;
  }


  @JsonProperty(JSON_PROPERTY_SYSCTL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSysctl(List<String> sysctl) {
    this.sysctl = sysctl;
  }


  public PodCreateOptions uts(String uts) {
    this.uts = uts;
    return this;
  }

  /**
   * Get uts
   * @return uts
   */
  @javax.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_UTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getUts() {
    return uts;
  }


  @JsonProperty(JSON_PROPERTY_UTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUts(String uts) {
    this.uts = uts;
  }


  public PodCreateOptions volume(List<String> volume) {
    this.volume = volume;
    return this;
  }

  public PodCreateOptions addVolumeItem(String volumeItem) {
    if (this.volume == null) {
      this.volume = new ArrayList<>();
    }
    this.volume.add(volumeItem);
    return this;
  }

  /**
   * Get volume
   * @return volume
   */
  @javax.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_VOLUME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public List<String> getVolume() {
    return volume;
  }


  @JsonProperty(JSON_PROPERTY_VOLUME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setVolume(List<String> volume) {
    this.volume = volume;
  }


  public PodCreateOptions volumesFrom(List<String> volumesFrom) {
    this.volumesFrom = volumesFrom;
    return this;
  }

  public PodCreateOptions addVolumesFromItem(String volumesFromItem) {
    if (this.volumesFrom == null) {
      this.volumesFrom = new ArrayList<>();
    }
    this.volumesFrom.add(volumesFromItem);
    return this;
  }

  /**
   * Get volumesFrom
   * @return volumesFrom
   */
  @javax.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_VOLUMES_FROM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public List<String> getVolumesFrom() {
    return volumesFrom;
  }


  @JsonProperty(JSON_PROPERTY_VOLUMES_FROM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setVolumesFrom(List<String> volumesFrom) {
    this.volumesFrom = volumesFrom;
  }


  /**
   * Return true if this PodCreateOptions object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PodCreateOptions podCreateOptions = (PodCreateOptions) o;
    return Objects.equals(this.cgroupParent, podCreateOptions.cgroupParent) &&
        Objects.equals(this.containerCommand, podCreateOptions.containerCommand) &&
        Objects.equals(this.containerConmonPidfile, podCreateOptions.containerConmonPidfile) &&
        Objects.equals(this.containerName, podCreateOptions.containerName) &&
        Objects.equals(this.cpus, podCreateOptions.cpus) &&
        Objects.equals(this.cpusetCpus, podCreateOptions.cpusetCpus) &&
        Objects.equals(this.createCommand, podCreateOptions.createCommand) &&
        Objects.equals(this.deviceReadBps, podCreateOptions.deviceReadBps) &&
        Objects.equals(this.devices, podCreateOptions.devices) &&
        Objects.equals(this.exitPolicy, podCreateOptions.exitPolicy) &&
        Objects.equals(this.hostname, podCreateOptions.hostname) &&
        Objects.equals(this.infra, podCreateOptions.infra) &&
        Objects.equals(this.infraImage, podCreateOptions.infraImage) &&
        Objects.equals(this.ipc, podCreateOptions.ipc) &&
        Objects.equals(this.labels, podCreateOptions.labels) &&
        Objects.equals(this.name, podCreateOptions.name) &&
        Objects.equals(this.net, podCreateOptions.net) &&
        Objects.equals(this.pid, podCreateOptions.pid) &&
        Objects.equals(this.restart, podCreateOptions.restart) &&
        Objects.equals(this.securityOpt, podCreateOptions.securityOpt) &&
        Objects.equals(this.share, podCreateOptions.share) &&
        Objects.equals(this.shareParent, podCreateOptions.shareParent) &&
        Objects.equals(this.sysctl, podCreateOptions.sysctl) &&
        Objects.equals(this.uts, podCreateOptions.uts) &&
        Objects.equals(this.volume, podCreateOptions.volume) &&
        Objects.equals(this.volumesFrom, podCreateOptions.volumesFrom);
  }

  @Override
  public int hashCode() {
    return Objects.hash(cgroupParent, containerCommand, containerConmonPidfile, containerName, cpus, cpusetCpus, createCommand, deviceReadBps, devices, exitPolicy, hostname, infra, infraImage, ipc, labels, name, net, pid, restart, securityOpt, share, shareParent, sysctl, uts, volume, volumesFrom);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PodCreateOptions {\n");
    sb.append("    cgroupParent: ").append(toIndentedString(cgroupParent)).append("\n");
    sb.append("    containerCommand: ").append(toIndentedString(containerCommand)).append("\n");
    sb.append("    containerConmonPidfile: ").append(toIndentedString(containerConmonPidfile)).append("\n");
    sb.append("    containerName: ").append(toIndentedString(containerName)).append("\n");
    sb.append("    cpus: ").append(toIndentedString(cpus)).append("\n");
    sb.append("    cpusetCpus: ").append(toIndentedString(cpusetCpus)).append("\n");
    sb.append("    createCommand: ").append(toIndentedString(createCommand)).append("\n");
    sb.append("    deviceReadBps: ").append(toIndentedString(deviceReadBps)).append("\n");
    sb.append("    devices: ").append(toIndentedString(devices)).append("\n");
    sb.append("    exitPolicy: ").append(toIndentedString(exitPolicy)).append("\n");
    sb.append("    hostname: ").append(toIndentedString(hostname)).append("\n");
    sb.append("    infra: ").append(toIndentedString(infra)).append("\n");
    sb.append("    infraImage: ").append(toIndentedString(infraImage)).append("\n");
    sb.append("    ipc: ").append(toIndentedString(ipc)).append("\n");
    sb.append("    labels: ").append(toIndentedString(labels)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    net: ").append(toIndentedString(net)).append("\n");
    sb.append("    pid: ").append(toIndentedString(pid)).append("\n");
    sb.append("    restart: ").append(toIndentedString(restart)).append("\n");
    sb.append("    securityOpt: ").append(toIndentedString(securityOpt)).append("\n");
    sb.append("    share: ").append(toIndentedString(share)).append("\n");
    sb.append("    shareParent: ").append(toIndentedString(shareParent)).append("\n");
    sb.append("    sysctl: ").append(toIndentedString(sysctl)).append("\n");
    sb.append("    uts: ").append(toIndentedString(uts)).append("\n");
    sb.append("    volume: ").append(toIndentedString(volume)).append("\n");
    sb.append("    volumesFrom: ").append(toIndentedString(volumesFrom)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `cgroup_parent` to the URL query string
    if (getCgroupParent() != null) {
      joiner.add(String.format("%scgroup_parent%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getCgroupParent()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `container_command` to the URL query string
    if (getContainerCommand() != null) {
      joiner.add(String.format("%scontainer_command%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getContainerCommand()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `container_conmon_pidfile` to the URL query string
    if (getContainerConmonPidfile() != null) {
      joiner.add(String.format("%scontainer_conmon_pidfile%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getContainerConmonPidfile()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `container_name` to the URL query string
    if (getContainerName() != null) {
      joiner.add(String.format("%scontainer_name%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getContainerName()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `cpus` to the URL query string
    if (getCpus() != null) {
      joiner.add(String.format("%scpus%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getCpus()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `cpuset_cpus` to the URL query string
    if (getCpusetCpus() != null) {
      joiner.add(String.format("%scpuset_cpus%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getCpusetCpus()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `create_command` to the URL query string
    if (getCreateCommand() != null) {
      for (int i = 0; i < getCreateCommand().size(); i++) {
        joiner.add(String.format("%screate_command%s%s=%s", prefix, suffix,
            "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix),
            URLEncoder.encode(ApiClient.valueToString(getCreateCommand().get(i)), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
      }
    }

    // add `device_read_bps` to the URL query string
    if (getDeviceReadBps() != null) {
      for (int i = 0; i < getDeviceReadBps().size(); i++) {
        joiner.add(String.format("%sdevice_read_bps%s%s=%s", prefix, suffix,
            "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix),
            URLEncoder.encode(ApiClient.valueToString(getDeviceReadBps().get(i)), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
      }
    }

    // add `devices` to the URL query string
    if (getDevices() != null) {
      for (int i = 0; i < getDevices().size(); i++) {
        joiner.add(String.format("%sdevices%s%s=%s", prefix, suffix,
            "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix),
            URLEncoder.encode(ApiClient.valueToString(getDevices().get(i)), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
      }
    }

    // add `exit_policy` to the URL query string
    if (getExitPolicy() != null) {
      joiner.add(String.format("%sexit_policy%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getExitPolicy()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `hostname` to the URL query string
    if (getHostname() != null) {
      joiner.add(String.format("%shostname%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getHostname()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `infra` to the URL query string
    if (getInfra() != null) {
      joiner.add(String.format("%sinfra%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getInfra()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `infra_image` to the URL query string
    if (getInfraImage() != null) {
      joiner.add(String.format("%sinfra_image%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getInfraImage()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `ipc` to the URL query string
    if (getIpc() != null) {
      joiner.add(String.format("%sipc%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getIpc()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `labels` to the URL query string
    if (getLabels() != null) {
      for (String _key : getLabels().keySet()) {
        joiner.add(String.format("%slabels%s%s=%s", prefix, suffix,
            "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, _key, containerSuffix),
            getLabels().get(_key), URLEncoder.encode(ApiClient.valueToString(getLabels().get(_key)), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
      }
    }

    // add `name` to the URL query string
    if (getName() != null) {
      joiner.add(String.format("%sname%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getName()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `net` to the URL query string
    if (getNet() != null) {
      joiner.add(getNet().toUrlQueryString(prefix + "net" + suffix));
    }

    // add `pid` to the URL query string
    if (getPid() != null) {
      joiner.add(String.format("%spid%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getPid()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `restart` to the URL query string
    if (getRestart() != null) {
      joiner.add(String.format("%srestart%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getRestart()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `security_opt` to the URL query string
    if (getSecurityOpt() != null) {
      for (int i = 0; i < getSecurityOpt().size(); i++) {
        joiner.add(String.format("%ssecurity_opt%s%s=%s", prefix, suffix,
            "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix),
            URLEncoder.encode(ApiClient.valueToString(getSecurityOpt().get(i)), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
      }
    }

    // add `share` to the URL query string
    if (getShare() != null) {
      for (int i = 0; i < getShare().size(); i++) {
        joiner.add(String.format("%sshare%s%s=%s", prefix, suffix,
            "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix),
            URLEncoder.encode(ApiClient.valueToString(getShare().get(i)), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
      }
    }

    // add `share_parent` to the URL query string
    if (getShareParent() != null) {
      joiner.add(String.format("%sshare_parent%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getShareParent()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `sysctl` to the URL query string
    if (getSysctl() != null) {
      for (int i = 0; i < getSysctl().size(); i++) {
        joiner.add(String.format("%ssysctl%s%s=%s", prefix, suffix,
            "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix),
            URLEncoder.encode(ApiClient.valueToString(getSysctl().get(i)), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
      }
    }

    // add `uts` to the URL query string
    if (getUts() != null) {
      joiner.add(String.format("%suts%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getUts()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `volume` to the URL query string
    if (getVolume() != null) {
      for (int i = 0; i < getVolume().size(); i++) {
        joiner.add(String.format("%svolume%s%s=%s", prefix, suffix,
            "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix),
            URLEncoder.encode(ApiClient.valueToString(getVolume().get(i)), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
      }
    }

    // add `volumes_from` to the URL query string
    if (getVolumesFrom() != null) {
      for (int i = 0; i < getVolumesFrom().size(); i++) {
        joiner.add(String.format("%svolumes_from%s%s=%s", prefix, suffix,
            "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix),
            URLEncoder.encode(ApiClient.valueToString(getVolumesFrom().get(i)), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
      }
    }

    return joiner.toString();
  }
}

