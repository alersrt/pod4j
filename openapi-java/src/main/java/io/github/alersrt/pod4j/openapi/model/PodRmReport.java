/*
 * supports a RESTful API for the Libpod library
 * This documentation describes the Podman v2.x+ RESTful API. It consists of a Docker-compatible API and a Libpod API providing support for Podmanâ€™s unique features such as pods.  To start the service and keep it running for 5,000 seconds (-t 0 runs forever):  podman system service -t 5000 &  You can then use cURL on the socket using requests documented below.  NOTE: if you install the package podman-docker, it will create a symbolic link for /run/docker.sock to /run/podman/podman.sock  NOTE: Some fields in the API response JSON are encoded as omitempty, which means that if said field has a zero value, they will not be encoded in the API response. This is a feature to help reduce the size of the JSON responses returned via the API.  NOTE: Due to the limitations of [go-swagger](https://github.com/go-swagger/go-swagger), some field values that have a complex type show up as null in the docs as well as in the API responses. This is because the zero value for the field type is null. The field description in the docs will state what type the field is expected to be for such cases.  See podman-system-service(1) for more information.  Quick Examples:  'podman info'  curl --unix-socket /run/podman/podman.sock http://d/v5.0.0/libpod/info  'podman pull quay.io/containers/podman'  curl -XPOST --unix-socket /run/podman/podman.sock -v 'http://d/v5.0.0/images/create?fromImage=quay.io%2Fcontainers%2Fpodman'  'podman list images'  curl --unix-socket /run/podman/podman.sock -v 'http://d/v5.0.0/libpod/images/json' | jq
 *
 * The version of the OpenAPI document: 5.0.0
 * Contact: podman@lists.podman.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.github.alersrt.pod4j.openapi.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import jakarta.validation.constraints.*;
import jakarta.validation.Valid;


import io.github.alersrt.pod4j.openapi.ApiClient;
/**
 * PodRmReport
 */
@JsonPropertyOrder({
  PodRmReport.JSON_PROPERTY_ERR,
  PodRmReport.JSON_PROPERTY_ID,
  PodRmReport.JSON_PROPERTY_REMOVED_CTRS
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-11-28T19:32:38.690938181+07:00[Asia/Barnaul]", comments = "Generator version: 7.7.0")
public class PodRmReport {
  public static final String JSON_PROPERTY_ERR = "Err";
  private String err;

  public static final String JSON_PROPERTY_ID = "Id";
  private String id;

  public static final String JSON_PROPERTY_REMOVED_CTRS = "RemovedCtrs";
  private Map<String, String> removedCtrs = new HashMap<>();

  public PodRmReport() { 
  }

  public PodRmReport err(String err) {
    this.err = err;
    return this;
  }

  /**
   * Get err
   * @return err
   */
  @javax.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_ERR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getErr() {
    return err;
  }


  @JsonProperty(JSON_PROPERTY_ERR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setErr(String err) {
    this.err = err;
  }


  public PodRmReport id(String id) {
    this.id = id;
    return this;
  }

  /**
   * Get id
   * @return id
   */
  @javax.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(String id) {
    this.id = id;
  }


  public PodRmReport removedCtrs(Map<String, String> removedCtrs) {
    this.removedCtrs = removedCtrs;
    return this;
  }

  public PodRmReport putRemovedCtrsItem(String key, String removedCtrsItem) {
    if (this.removedCtrs == null) {
      this.removedCtrs = new HashMap<>();
    }
    this.removedCtrs.put(key, removedCtrsItem);
    return this;
  }

  /**
   * Get removedCtrs
   * @return removedCtrs
   */
  @javax.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_REMOVED_CTRS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Map<String, String> getRemovedCtrs() {
    return removedCtrs;
  }


  @JsonProperty(JSON_PROPERTY_REMOVED_CTRS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRemovedCtrs(Map<String, String> removedCtrs) {
    this.removedCtrs = removedCtrs;
  }


  /**
   * Return true if this PodRmReport object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PodRmReport podRmReport = (PodRmReport) o;
    return Objects.equals(this.err, podRmReport.err) &&
        Objects.equals(this.id, podRmReport.id) &&
        Objects.equals(this.removedCtrs, podRmReport.removedCtrs);
  }

  @Override
  public int hashCode() {
    return Objects.hash(err, id, removedCtrs);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PodRmReport {\n");
    sb.append("    err: ").append(toIndentedString(err)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    removedCtrs: ").append(toIndentedString(removedCtrs)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `Err` to the URL query string
    if (getErr() != null) {
      joiner.add(String.format("%sErr%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getErr()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `Id` to the URL query string
    if (getId() != null) {
      joiner.add(String.format("%sId%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getId()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `RemovedCtrs` to the URL query string
    if (getRemovedCtrs() != null) {
      for (String _key : getRemovedCtrs().keySet()) {
        joiner.add(String.format("%sRemovedCtrs%s%s=%s", prefix, suffix,
            "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, _key, containerSuffix),
            getRemovedCtrs().get(_key), URLEncoder.encode(ApiClient.valueToString(getRemovedCtrs().get(_key)), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
      }
    }

    return joiner.toString();
  }
}

