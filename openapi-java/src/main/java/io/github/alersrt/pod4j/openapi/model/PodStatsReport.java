/*
 * supports a RESTful API for the Libpod library
 * This documentation describes the Podman v2.x+ RESTful API. It consists of a Docker-compatible API and a Libpod API providing support for Podmanâ€™s unique features such as pods.  To start the service and keep it running for 5,000 seconds (-t 0 runs forever):  podman system service -t 5000 &  You can then use cURL on the socket using requests documented below.  NOTE: if you install the package podman-docker, it will create a symbolic link for /run/docker.sock to /run/podman/podman.sock  NOTE: Some fields in the API response JSON are encoded as omitempty, which means that if said field has a zero value, they will not be encoded in the API response. This is a feature to help reduce the size of the JSON responses returned via the API.  NOTE: Due to the limitations of [go-swagger](https://github.com/go-swagger/go-swagger), some field values that have a complex type show up as null in the docs as well as in the API responses. This is because the zero value for the field type is null. The field description in the docs will state what type the field is expected to be for such cases.  See podman-system-service(1) for more information.  Quick Examples:  'podman info'  curl --unix-socket /run/podman/podman.sock http://d/v5.0.0/libpod/info  'podman pull quay.io/containers/podman'  curl -XPOST --unix-socket /run/podman/podman.sock -v 'http://d/v5.0.0/images/create?fromImage=quay.io%2Fcontainers%2Fpodman'  'podman list images'  curl --unix-socket /run/podman/podman.sock -v 'http://d/v5.0.0/libpod/images/json' | jq
 *
 * The version of the OpenAPI document: 5.0.0
 * Contact: podman@lists.podman.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.github.alersrt.pod4j.openapi.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import jakarta.validation.constraints.*;
import jakarta.validation.Valid;


import io.github.alersrt.pod4j.openapi.ApiClient;
/**
 * PodStatsReport
 */
@JsonPropertyOrder({
  PodStatsReport.JSON_PROPERTY_BLOCK_I_O,
  PodStatsReport.JSON_PROPERTY_C_I_D,
  PodStatsReport.JSON_PROPERTY_C_P_U,
  PodStatsReport.JSON_PROPERTY_MEM,
  PodStatsReport.JSON_PROPERTY_MEM_USAGE,
  PodStatsReport.JSON_PROPERTY_MEM_USAGE_BYTES,
  PodStatsReport.JSON_PROPERTY_NAME,
  PodStatsReport.JSON_PROPERTY_NET_I_O,
  PodStatsReport.JSON_PROPERTY_P_I_D_S,
  PodStatsReport.JSON_PROPERTY_POD
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-11-28T19:32:38.690938181+07:00[Asia/Barnaul]", comments = "Generator version: 7.7.0")
public class PodStatsReport {
  public static final String JSON_PROPERTY_BLOCK_I_O = "BlockIO";
  private String blockIO;

  public static final String JSON_PROPERTY_C_I_D = "CID";
  private String CID;

  public static final String JSON_PROPERTY_C_P_U = "CPU";
  private String CPU;

  public static final String JSON_PROPERTY_MEM = "Mem";
  private String mem;

  public static final String JSON_PROPERTY_MEM_USAGE = "MemUsage";
  private String memUsage;

  public static final String JSON_PROPERTY_MEM_USAGE_BYTES = "MemUsageBytes";
  private String memUsageBytes;

  public static final String JSON_PROPERTY_NAME = "Name";
  private String name;

  public static final String JSON_PROPERTY_NET_I_O = "NetIO";
  private String netIO;

  public static final String JSON_PROPERTY_P_I_D_S = "PIDS";
  private String PIDS;

  public static final String JSON_PROPERTY_POD = "Pod";
  private String pod;

  public PodStatsReport() { 
  }

  public PodStatsReport blockIO(String blockIO) {
    this.blockIO = blockIO;
    return this;
  }

  /**
   * Humanized disk usage read + write
   * @return blockIO
   */
  @javax.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_BLOCK_I_O)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getBlockIO() {
    return blockIO;
  }


  @JsonProperty(JSON_PROPERTY_BLOCK_I_O)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBlockIO(String blockIO) {
    this.blockIO = blockIO;
  }


  public PodStatsReport CID(String CID) {
    this.CID = CID;
    return this;
  }

  /**
   * Container ID
   * @return CID
   */
  @javax.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_C_I_D)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getCID() {
    return CID;
  }


  @JsonProperty(JSON_PROPERTY_C_I_D)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCID(String CID) {
    this.CID = CID;
  }


  public PodStatsReport CPU(String CPU) {
    this.CPU = CPU;
    return this;
  }

  /**
   * Percentage of CPU utilized by pod
   * @return CPU
   */
  @javax.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_C_P_U)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getCPU() {
    return CPU;
  }


  @JsonProperty(JSON_PROPERTY_C_P_U)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCPU(String CPU) {
    this.CPU = CPU;
  }


  public PodStatsReport mem(String mem) {
    this.mem = mem;
    return this;
  }

  /**
   * Percentage of Memory utilized by pod
   * @return mem
   */
  @javax.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_MEM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getMem() {
    return mem;
  }


  @JsonProperty(JSON_PROPERTY_MEM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMem(String mem) {
    this.mem = mem;
  }


  public PodStatsReport memUsage(String memUsage) {
    this.memUsage = memUsage;
    return this;
  }

  /**
   * Humanized Memory usage and maximum
   * @return memUsage
   */
  @javax.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_MEM_USAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getMemUsage() {
    return memUsage;
  }


  @JsonProperty(JSON_PROPERTY_MEM_USAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMemUsage(String memUsage) {
    this.memUsage = memUsage;
  }


  public PodStatsReport memUsageBytes(String memUsageBytes) {
    this.memUsageBytes = memUsageBytes;
    return this;
  }

  /**
   * Memory usage and maximum in bytes
   * @return memUsageBytes
   */
  @javax.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_MEM_USAGE_BYTES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getMemUsageBytes() {
    return memUsageBytes;
  }


  @JsonProperty(JSON_PROPERTY_MEM_USAGE_BYTES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMemUsageBytes(String memUsageBytes) {
    this.memUsageBytes = memUsageBytes;
  }


  public PodStatsReport name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Pod Name
   * @return name
   */
  @javax.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setName(String name) {
    this.name = name;
  }


  public PodStatsReport netIO(String netIO) {
    this.netIO = netIO;
    return this;
  }

  /**
   * Network usage inbound + outbound
   * @return netIO
   */
  @javax.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_NET_I_O)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getNetIO() {
    return netIO;
  }


  @JsonProperty(JSON_PROPERTY_NET_I_O)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNetIO(String netIO) {
    this.netIO = netIO;
  }


  public PodStatsReport PIDS(String PIDS) {
    this.PIDS = PIDS;
    return this;
  }

  /**
   * Container PID
   * @return PIDS
   */
  @javax.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_P_I_D_S)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getPIDS() {
    return PIDS;
  }


  @JsonProperty(JSON_PROPERTY_P_I_D_S)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPIDS(String PIDS) {
    this.PIDS = PIDS;
  }


  public PodStatsReport pod(String pod) {
    this.pod = pod;
    return this;
  }

  /**
   * Pod ID
   * @return pod
   */
  @javax.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_POD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getPod() {
    return pod;
  }


  @JsonProperty(JSON_PROPERTY_POD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPod(String pod) {
    this.pod = pod;
  }


  /**
   * Return true if this PodStatsReport object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PodStatsReport podStatsReport = (PodStatsReport) o;
    return Objects.equals(this.blockIO, podStatsReport.blockIO) &&
        Objects.equals(this.CID, podStatsReport.CID) &&
        Objects.equals(this.CPU, podStatsReport.CPU) &&
        Objects.equals(this.mem, podStatsReport.mem) &&
        Objects.equals(this.memUsage, podStatsReport.memUsage) &&
        Objects.equals(this.memUsageBytes, podStatsReport.memUsageBytes) &&
        Objects.equals(this.name, podStatsReport.name) &&
        Objects.equals(this.netIO, podStatsReport.netIO) &&
        Objects.equals(this.PIDS, podStatsReport.PIDS) &&
        Objects.equals(this.pod, podStatsReport.pod);
  }

  @Override
  public int hashCode() {
    return Objects.hash(blockIO, CID, CPU, mem, memUsage, memUsageBytes, name, netIO, PIDS, pod);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PodStatsReport {\n");
    sb.append("    blockIO: ").append(toIndentedString(blockIO)).append("\n");
    sb.append("    CID: ").append(toIndentedString(CID)).append("\n");
    sb.append("    CPU: ").append(toIndentedString(CPU)).append("\n");
    sb.append("    mem: ").append(toIndentedString(mem)).append("\n");
    sb.append("    memUsage: ").append(toIndentedString(memUsage)).append("\n");
    sb.append("    memUsageBytes: ").append(toIndentedString(memUsageBytes)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    netIO: ").append(toIndentedString(netIO)).append("\n");
    sb.append("    PIDS: ").append(toIndentedString(PIDS)).append("\n");
    sb.append("    pod: ").append(toIndentedString(pod)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `BlockIO` to the URL query string
    if (getBlockIO() != null) {
      joiner.add(String.format("%sBlockIO%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getBlockIO()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `CID` to the URL query string
    if (getCID() != null) {
      joiner.add(String.format("%sCID%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getCID()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `CPU` to the URL query string
    if (getCPU() != null) {
      joiner.add(String.format("%sCPU%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getCPU()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `Mem` to the URL query string
    if (getMem() != null) {
      joiner.add(String.format("%sMem%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getMem()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `MemUsage` to the URL query string
    if (getMemUsage() != null) {
      joiner.add(String.format("%sMemUsage%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getMemUsage()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `MemUsageBytes` to the URL query string
    if (getMemUsageBytes() != null) {
      joiner.add(String.format("%sMemUsageBytes%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getMemUsageBytes()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `Name` to the URL query string
    if (getName() != null) {
      joiner.add(String.format("%sName%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getName()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `NetIO` to the URL query string
    if (getNetIO() != null) {
      joiner.add(String.format("%sNetIO%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getNetIO()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `PIDS` to the URL query string
    if (getPIDS() != null) {
      joiner.add(String.format("%sPIDS%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getPIDS()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `Pod` to the URL query string
    if (getPod() != null) {
      joiner.add(String.format("%sPod%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getPod()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    return joiner.toString();
  }
}

