/*
 * supports a RESTful API for the Libpod library
 * This documentation describes the Podman v2.x+ RESTful API. It consists of a Docker-compatible API and a Libpod API providing support for Podmanâ€™s unique features such as pods.  To start the service and keep it running for 5,000 seconds (-t 0 runs forever):  podman system service -t 5000 &  You can then use cURL on the socket using requests documented below.  NOTE: if you install the package podman-docker, it will create a symbolic link for /run/docker.sock to /run/podman/podman.sock  NOTE: Some fields in the API response JSON are encoded as omitempty, which means that if said field has a zero value, they will not be encoded in the API response. This is a feature to help reduce the size of the JSON responses returned via the API.  NOTE: Due to the limitations of [go-swagger](https://github.com/go-swagger/go-swagger), some field values that have a complex type show up as null in the docs as well as in the API responses. This is because the zero value for the field type is null. The field description in the docs will state what type the field is expected to be for such cases.  See podman-system-service(1) for more information.  Quick Examples:  'podman info'  curl --unix-socket /run/podman/podman.sock http://d/v5.0.0/libpod/info  'podman pull quay.io/containers/podman'  curl -XPOST --unix-socket /run/podman/podman.sock -v 'http://d/v5.0.0/images/create?fromImage=quay.io%2Fcontainers%2Fpodman'  'podman list images'  curl --unix-socket /run/podman/podman.sock -v 'http://d/v5.0.0/libpod/images/json' | jq
 *
 * The version of the OpenAPI document: 5.0.0
 * Contact: podman@lists.podman.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.github.alersrt.pod4j.openapi.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.github.alersrt.pod4j.openapi.model.DeviceMapping;
import io.github.alersrt.pod4j.openapi.model.DeviceRequest;
import io.github.alersrt.pod4j.openapi.model.ThrottleDevice;
import io.github.alersrt.pod4j.openapi.model.Ulimit;
import io.github.alersrt.pod4j.openapi.model.WeightDevice;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import jakarta.validation.constraints.*;
import jakarta.validation.Valid;


import io.github.alersrt.pod4j.openapi.ApiClient;
/**
 * Resources contains container&#39;s resources (cgroups config, ulimits...)
 */
@JsonPropertyOrder({
  Resources.JSON_PROPERTY_BLKIO_DEVICE_READ_BPS,
  Resources.JSON_PROPERTY_BLKIO_DEVICE_READ_I_OPS,
  Resources.JSON_PROPERTY_BLKIO_DEVICE_WRITE_BPS,
  Resources.JSON_PROPERTY_BLKIO_DEVICE_WRITE_I_OPS,
  Resources.JSON_PROPERTY_BLKIO_WEIGHT,
  Resources.JSON_PROPERTY_BLKIO_WEIGHT_DEVICE,
  Resources.JSON_PROPERTY_CGROUP_PARENT,
  Resources.JSON_PROPERTY_CPU_COUNT,
  Resources.JSON_PROPERTY_CPU_PERCENT,
  Resources.JSON_PROPERTY_CPU_PERIOD,
  Resources.JSON_PROPERTY_CPU_QUOTA,
  Resources.JSON_PROPERTY_CPU_REALTIME_PERIOD,
  Resources.JSON_PROPERTY_CPU_REALTIME_RUNTIME,
  Resources.JSON_PROPERTY_CPU_SHARES,
  Resources.JSON_PROPERTY_CPUSET_CPUS,
  Resources.JSON_PROPERTY_CPUSET_MEMS,
  Resources.JSON_PROPERTY_DEVICE_CGROUP_RULES,
  Resources.JSON_PROPERTY_DEVICE_REQUESTS,
  Resources.JSON_PROPERTY_DEVICES,
  Resources.JSON_PROPERTY_IO_MAXIMUM_BANDWIDTH,
  Resources.JSON_PROPERTY_IO_MAXIMUM_I_OPS,
  Resources.JSON_PROPERTY_KERNEL_MEMORY,
  Resources.JSON_PROPERTY_KERNEL_MEMORY_T_C_P,
  Resources.JSON_PROPERTY_MEMORY,
  Resources.JSON_PROPERTY_MEMORY_RESERVATION,
  Resources.JSON_PROPERTY_MEMORY_SWAP,
  Resources.JSON_PROPERTY_MEMORY_SWAPPINESS,
  Resources.JSON_PROPERTY_NANO_CPUS,
  Resources.JSON_PROPERTY_OOM_KILL_DISABLE,
  Resources.JSON_PROPERTY_PIDS_LIMIT,
  Resources.JSON_PROPERTY_ULIMITS
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-11-28T20:49:08.759389952+07:00[Asia/Barnaul]", comments = "Generator version: 7.7.0")
public class Resources {
  public static final String JSON_PROPERTY_BLKIO_DEVICE_READ_BPS = "BlkioDeviceReadBps";
  private List<@Valid ThrottleDevice> blkioDeviceReadBps = new ArrayList<>();

  public static final String JSON_PROPERTY_BLKIO_DEVICE_READ_I_OPS = "BlkioDeviceReadIOps";
  private List<@Valid ThrottleDevice> blkioDeviceReadIOps = new ArrayList<>();

  public static final String JSON_PROPERTY_BLKIO_DEVICE_WRITE_BPS = "BlkioDeviceWriteBps";
  private List<@Valid ThrottleDevice> blkioDeviceWriteBps = new ArrayList<>();

  public static final String JSON_PROPERTY_BLKIO_DEVICE_WRITE_I_OPS = "BlkioDeviceWriteIOps";
  private List<@Valid ThrottleDevice> blkioDeviceWriteIOps = new ArrayList<>();

  public static final String JSON_PROPERTY_BLKIO_WEIGHT = "BlkioWeight";
  private Integer blkioWeight;

  public static final String JSON_PROPERTY_BLKIO_WEIGHT_DEVICE = "BlkioWeightDevice";
  private List<@Valid WeightDevice> blkioWeightDevice = new ArrayList<>();

  public static final String JSON_PROPERTY_CGROUP_PARENT = "CgroupParent";
  private String cgroupParent;

  public static final String JSON_PROPERTY_CPU_COUNT = "CpuCount";
  private Long cpuCount;

  public static final String JSON_PROPERTY_CPU_PERCENT = "CpuPercent";
  private Long cpuPercent;

  public static final String JSON_PROPERTY_CPU_PERIOD = "CpuPeriod";
  private Long cpuPeriod;

  public static final String JSON_PROPERTY_CPU_QUOTA = "CpuQuota";
  private Long cpuQuota;

  public static final String JSON_PROPERTY_CPU_REALTIME_PERIOD = "CpuRealtimePeriod";
  private Long cpuRealtimePeriod;

  public static final String JSON_PROPERTY_CPU_REALTIME_RUNTIME = "CpuRealtimeRuntime";
  private Long cpuRealtimeRuntime;

  public static final String JSON_PROPERTY_CPU_SHARES = "CpuShares";
  private Long cpuShares;

  public static final String JSON_PROPERTY_CPUSET_CPUS = "CpusetCpus";
  private String cpusetCpus;

  public static final String JSON_PROPERTY_CPUSET_MEMS = "CpusetMems";
  private String cpusetMems;

  public static final String JSON_PROPERTY_DEVICE_CGROUP_RULES = "DeviceCgroupRules";
  private List<String> deviceCgroupRules = new ArrayList<>();

  public static final String JSON_PROPERTY_DEVICE_REQUESTS = "DeviceRequests";
  private List<@Valid DeviceRequest> deviceRequests = new ArrayList<>();

  public static final String JSON_PROPERTY_DEVICES = "Devices";
  private List<@Valid DeviceMapping> devices = new ArrayList<>();

  public static final String JSON_PROPERTY_IO_MAXIMUM_BANDWIDTH = "IOMaximumBandwidth";
  private Integer ioMaximumBandwidth;

  public static final String JSON_PROPERTY_IO_MAXIMUM_I_OPS = "IOMaximumIOps";
  private Integer ioMaximumIOps;

  public static final String JSON_PROPERTY_KERNEL_MEMORY = "KernelMemory";
  private Long kernelMemory;

  public static final String JSON_PROPERTY_KERNEL_MEMORY_T_C_P = "KernelMemoryTCP";
  private Long kernelMemoryTCP;

  public static final String JSON_PROPERTY_MEMORY = "Memory";
  private Long memory;

  public static final String JSON_PROPERTY_MEMORY_RESERVATION = "MemoryReservation";
  private Long memoryReservation;

  public static final String JSON_PROPERTY_MEMORY_SWAP = "MemorySwap";
  private Long memorySwap;

  public static final String JSON_PROPERTY_MEMORY_SWAPPINESS = "MemorySwappiness";
  private Long memorySwappiness;

  public static final String JSON_PROPERTY_NANO_CPUS = "NanoCpus";
  private Long nanoCpus;

  public static final String JSON_PROPERTY_OOM_KILL_DISABLE = "OomKillDisable";
  private Boolean oomKillDisable;

  public static final String JSON_PROPERTY_PIDS_LIMIT = "PidsLimit";
  private Long pidsLimit;

  public static final String JSON_PROPERTY_ULIMITS = "Ulimits";
  private List<@Valid Ulimit> ulimits = new ArrayList<>();

  public Resources() { 
  }

  public Resources blkioDeviceReadBps(List<@Valid ThrottleDevice> blkioDeviceReadBps) {
    this.blkioDeviceReadBps = blkioDeviceReadBps;
    return this;
  }

  public Resources addBlkioDeviceReadBpsItem(ThrottleDevice blkioDeviceReadBpsItem) {
    if (this.blkioDeviceReadBps == null) {
      this.blkioDeviceReadBps = new ArrayList<>();
    }
    this.blkioDeviceReadBps.add(blkioDeviceReadBpsItem);
    return this;
  }

  /**
   * Get blkioDeviceReadBps
   * @return blkioDeviceReadBps
   */
  @jakarta.annotation.Nullable
  @Valid

  @JsonProperty(JSON_PROPERTY_BLKIO_DEVICE_READ_BPS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public List<@Valid ThrottleDevice> getBlkioDeviceReadBps() {
    return blkioDeviceReadBps;
  }


  @JsonProperty(JSON_PROPERTY_BLKIO_DEVICE_READ_BPS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBlkioDeviceReadBps(List<@Valid ThrottleDevice> blkioDeviceReadBps) {
    this.blkioDeviceReadBps = blkioDeviceReadBps;
  }


  public Resources blkioDeviceReadIOps(List<@Valid ThrottleDevice> blkioDeviceReadIOps) {
    this.blkioDeviceReadIOps = blkioDeviceReadIOps;
    return this;
  }

  public Resources addBlkioDeviceReadIOpsItem(ThrottleDevice blkioDeviceReadIOpsItem) {
    if (this.blkioDeviceReadIOps == null) {
      this.blkioDeviceReadIOps = new ArrayList<>();
    }
    this.blkioDeviceReadIOps.add(blkioDeviceReadIOpsItem);
    return this;
  }

  /**
   * Get blkioDeviceReadIOps
   * @return blkioDeviceReadIOps
   */
  @jakarta.annotation.Nullable
  @Valid

  @JsonProperty(JSON_PROPERTY_BLKIO_DEVICE_READ_I_OPS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public List<@Valid ThrottleDevice> getBlkioDeviceReadIOps() {
    return blkioDeviceReadIOps;
  }


  @JsonProperty(JSON_PROPERTY_BLKIO_DEVICE_READ_I_OPS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBlkioDeviceReadIOps(List<@Valid ThrottleDevice> blkioDeviceReadIOps) {
    this.blkioDeviceReadIOps = blkioDeviceReadIOps;
  }


  public Resources blkioDeviceWriteBps(List<@Valid ThrottleDevice> blkioDeviceWriteBps) {
    this.blkioDeviceWriteBps = blkioDeviceWriteBps;
    return this;
  }

  public Resources addBlkioDeviceWriteBpsItem(ThrottleDevice blkioDeviceWriteBpsItem) {
    if (this.blkioDeviceWriteBps == null) {
      this.blkioDeviceWriteBps = new ArrayList<>();
    }
    this.blkioDeviceWriteBps.add(blkioDeviceWriteBpsItem);
    return this;
  }

  /**
   * Get blkioDeviceWriteBps
   * @return blkioDeviceWriteBps
   */
  @jakarta.annotation.Nullable
  @Valid

  @JsonProperty(JSON_PROPERTY_BLKIO_DEVICE_WRITE_BPS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public List<@Valid ThrottleDevice> getBlkioDeviceWriteBps() {
    return blkioDeviceWriteBps;
  }


  @JsonProperty(JSON_PROPERTY_BLKIO_DEVICE_WRITE_BPS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBlkioDeviceWriteBps(List<@Valid ThrottleDevice> blkioDeviceWriteBps) {
    this.blkioDeviceWriteBps = blkioDeviceWriteBps;
  }


  public Resources blkioDeviceWriteIOps(List<@Valid ThrottleDevice> blkioDeviceWriteIOps) {
    this.blkioDeviceWriteIOps = blkioDeviceWriteIOps;
    return this;
  }

  public Resources addBlkioDeviceWriteIOpsItem(ThrottleDevice blkioDeviceWriteIOpsItem) {
    if (this.blkioDeviceWriteIOps == null) {
      this.blkioDeviceWriteIOps = new ArrayList<>();
    }
    this.blkioDeviceWriteIOps.add(blkioDeviceWriteIOpsItem);
    return this;
  }

  /**
   * Get blkioDeviceWriteIOps
   * @return blkioDeviceWriteIOps
   */
  @jakarta.annotation.Nullable
  @Valid

  @JsonProperty(JSON_PROPERTY_BLKIO_DEVICE_WRITE_I_OPS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public List<@Valid ThrottleDevice> getBlkioDeviceWriteIOps() {
    return blkioDeviceWriteIOps;
  }


  @JsonProperty(JSON_PROPERTY_BLKIO_DEVICE_WRITE_I_OPS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBlkioDeviceWriteIOps(List<@Valid ThrottleDevice> blkioDeviceWriteIOps) {
    this.blkioDeviceWriteIOps = blkioDeviceWriteIOps;
  }


  public Resources blkioWeight(Integer blkioWeight) {
    this.blkioWeight = blkioWeight;
    return this;
  }

  /**
   * Get blkioWeight
   * @return blkioWeight
   */
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_BLKIO_WEIGHT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Integer getBlkioWeight() {
    return blkioWeight;
  }


  @JsonProperty(JSON_PROPERTY_BLKIO_WEIGHT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBlkioWeight(Integer blkioWeight) {
    this.blkioWeight = blkioWeight;
  }


  public Resources blkioWeightDevice(List<@Valid WeightDevice> blkioWeightDevice) {
    this.blkioWeightDevice = blkioWeightDevice;
    return this;
  }

  public Resources addBlkioWeightDeviceItem(WeightDevice blkioWeightDeviceItem) {
    if (this.blkioWeightDevice == null) {
      this.blkioWeightDevice = new ArrayList<>();
    }
    this.blkioWeightDevice.add(blkioWeightDeviceItem);
    return this;
  }

  /**
   * Get blkioWeightDevice
   * @return blkioWeightDevice
   */
  @jakarta.annotation.Nullable
  @Valid

  @JsonProperty(JSON_PROPERTY_BLKIO_WEIGHT_DEVICE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public List<@Valid WeightDevice> getBlkioWeightDevice() {
    return blkioWeightDevice;
  }


  @JsonProperty(JSON_PROPERTY_BLKIO_WEIGHT_DEVICE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBlkioWeightDevice(List<@Valid WeightDevice> blkioWeightDevice) {
    this.blkioWeightDevice = blkioWeightDevice;
  }


  public Resources cgroupParent(String cgroupParent) {
    this.cgroupParent = cgroupParent;
    return this;
  }

  /**
   * Applicable to UNIX platforms
   * @return cgroupParent
   */
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_CGROUP_PARENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getCgroupParent() {
    return cgroupParent;
  }


  @JsonProperty(JSON_PROPERTY_CGROUP_PARENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCgroupParent(String cgroupParent) {
    this.cgroupParent = cgroupParent;
  }


  public Resources cpuCount(Long cpuCount) {
    this.cpuCount = cpuCount;
    return this;
  }

  /**
   * Applicable to Windows
   * @return cpuCount
   */
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_CPU_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Long getCpuCount() {
    return cpuCount;
  }


  @JsonProperty(JSON_PROPERTY_CPU_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCpuCount(Long cpuCount) {
    this.cpuCount = cpuCount;
  }


  public Resources cpuPercent(Long cpuPercent) {
    this.cpuPercent = cpuPercent;
    return this;
  }

  /**
   * Get cpuPercent
   * @return cpuPercent
   */
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_CPU_PERCENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Long getCpuPercent() {
    return cpuPercent;
  }


  @JsonProperty(JSON_PROPERTY_CPU_PERCENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCpuPercent(Long cpuPercent) {
    this.cpuPercent = cpuPercent;
  }


  public Resources cpuPeriod(Long cpuPeriod) {
    this.cpuPeriod = cpuPeriod;
    return this;
  }

  /**
   * Get cpuPeriod
   * @return cpuPeriod
   */
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_CPU_PERIOD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Long getCpuPeriod() {
    return cpuPeriod;
  }


  @JsonProperty(JSON_PROPERTY_CPU_PERIOD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCpuPeriod(Long cpuPeriod) {
    this.cpuPeriod = cpuPeriod;
  }


  public Resources cpuQuota(Long cpuQuota) {
    this.cpuQuota = cpuQuota;
    return this;
  }

  /**
   * Get cpuQuota
   * @return cpuQuota
   */
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_CPU_QUOTA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Long getCpuQuota() {
    return cpuQuota;
  }


  @JsonProperty(JSON_PROPERTY_CPU_QUOTA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCpuQuota(Long cpuQuota) {
    this.cpuQuota = cpuQuota;
  }


  public Resources cpuRealtimePeriod(Long cpuRealtimePeriod) {
    this.cpuRealtimePeriod = cpuRealtimePeriod;
    return this;
  }

  /**
   * Get cpuRealtimePeriod
   * @return cpuRealtimePeriod
   */
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_CPU_REALTIME_PERIOD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Long getCpuRealtimePeriod() {
    return cpuRealtimePeriod;
  }


  @JsonProperty(JSON_PROPERTY_CPU_REALTIME_PERIOD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCpuRealtimePeriod(Long cpuRealtimePeriod) {
    this.cpuRealtimePeriod = cpuRealtimePeriod;
  }


  public Resources cpuRealtimeRuntime(Long cpuRealtimeRuntime) {
    this.cpuRealtimeRuntime = cpuRealtimeRuntime;
    return this;
  }

  /**
   * Get cpuRealtimeRuntime
   * @return cpuRealtimeRuntime
   */
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_CPU_REALTIME_RUNTIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Long getCpuRealtimeRuntime() {
    return cpuRealtimeRuntime;
  }


  @JsonProperty(JSON_PROPERTY_CPU_REALTIME_RUNTIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCpuRealtimeRuntime(Long cpuRealtimeRuntime) {
    this.cpuRealtimeRuntime = cpuRealtimeRuntime;
  }


  public Resources cpuShares(Long cpuShares) {
    this.cpuShares = cpuShares;
    return this;
  }

  /**
   * Applicable to all platforms
   * @return cpuShares
   */
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_CPU_SHARES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Long getCpuShares() {
    return cpuShares;
  }


  @JsonProperty(JSON_PROPERTY_CPU_SHARES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCpuShares(Long cpuShares) {
    this.cpuShares = cpuShares;
  }


  public Resources cpusetCpus(String cpusetCpus) {
    this.cpusetCpus = cpusetCpus;
    return this;
  }

  /**
   * Get cpusetCpus
   * @return cpusetCpus
   */
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_CPUSET_CPUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getCpusetCpus() {
    return cpusetCpus;
  }


  @JsonProperty(JSON_PROPERTY_CPUSET_CPUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCpusetCpus(String cpusetCpus) {
    this.cpusetCpus = cpusetCpus;
  }


  public Resources cpusetMems(String cpusetMems) {
    this.cpusetMems = cpusetMems;
    return this;
  }

  /**
   * Get cpusetMems
   * @return cpusetMems
   */
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_CPUSET_MEMS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getCpusetMems() {
    return cpusetMems;
  }


  @JsonProperty(JSON_PROPERTY_CPUSET_MEMS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCpusetMems(String cpusetMems) {
    this.cpusetMems = cpusetMems;
  }


  public Resources deviceCgroupRules(List<String> deviceCgroupRules) {
    this.deviceCgroupRules = deviceCgroupRules;
    return this;
  }

  public Resources addDeviceCgroupRulesItem(String deviceCgroupRulesItem) {
    if (this.deviceCgroupRules == null) {
      this.deviceCgroupRules = new ArrayList<>();
    }
    this.deviceCgroupRules.add(deviceCgroupRulesItem);
    return this;
  }

  /**
   * Get deviceCgroupRules
   * @return deviceCgroupRules
   */
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_DEVICE_CGROUP_RULES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public List<String> getDeviceCgroupRules() {
    return deviceCgroupRules;
  }


  @JsonProperty(JSON_PROPERTY_DEVICE_CGROUP_RULES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDeviceCgroupRules(List<String> deviceCgroupRules) {
    this.deviceCgroupRules = deviceCgroupRules;
  }


  public Resources deviceRequests(List<@Valid DeviceRequest> deviceRequests) {
    this.deviceRequests = deviceRequests;
    return this;
  }

  public Resources addDeviceRequestsItem(DeviceRequest deviceRequestsItem) {
    if (this.deviceRequests == null) {
      this.deviceRequests = new ArrayList<>();
    }
    this.deviceRequests.add(deviceRequestsItem);
    return this;
  }

  /**
   * Get deviceRequests
   * @return deviceRequests
   */
  @jakarta.annotation.Nullable
  @Valid

  @JsonProperty(JSON_PROPERTY_DEVICE_REQUESTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public List<@Valid DeviceRequest> getDeviceRequests() {
    return deviceRequests;
  }


  @JsonProperty(JSON_PROPERTY_DEVICE_REQUESTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDeviceRequests(List<@Valid DeviceRequest> deviceRequests) {
    this.deviceRequests = deviceRequests;
  }


  public Resources devices(List<@Valid DeviceMapping> devices) {
    this.devices = devices;
    return this;
  }

  public Resources addDevicesItem(DeviceMapping devicesItem) {
    if (this.devices == null) {
      this.devices = new ArrayList<>();
    }
    this.devices.add(devicesItem);
    return this;
  }

  /**
   * Get devices
   * @return devices
   */
  @jakarta.annotation.Nullable
  @Valid

  @JsonProperty(JSON_PROPERTY_DEVICES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public List<@Valid DeviceMapping> getDevices() {
    return devices;
  }


  @JsonProperty(JSON_PROPERTY_DEVICES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDevices(List<@Valid DeviceMapping> devices) {
    this.devices = devices;
  }


  public Resources ioMaximumBandwidth(Integer ioMaximumBandwidth) {
    this.ioMaximumBandwidth = ioMaximumBandwidth;
    return this;
  }

  /**
   * Get ioMaximumBandwidth
   * @return ioMaximumBandwidth
   */
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_IO_MAXIMUM_BANDWIDTH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Integer getIoMaximumBandwidth() {
    return ioMaximumBandwidth;
  }


  @JsonProperty(JSON_PROPERTY_IO_MAXIMUM_BANDWIDTH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIoMaximumBandwidth(Integer ioMaximumBandwidth) {
    this.ioMaximumBandwidth = ioMaximumBandwidth;
  }


  public Resources ioMaximumIOps(Integer ioMaximumIOps) {
    this.ioMaximumIOps = ioMaximumIOps;
    return this;
  }

  /**
   * Get ioMaximumIOps
   * @return ioMaximumIOps
   */
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_IO_MAXIMUM_I_OPS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Integer getIoMaximumIOps() {
    return ioMaximumIOps;
  }


  @JsonProperty(JSON_PROPERTY_IO_MAXIMUM_I_OPS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIoMaximumIOps(Integer ioMaximumIOps) {
    this.ioMaximumIOps = ioMaximumIOps;
  }


  public Resources kernelMemory(Long kernelMemory) {
    this.kernelMemory = kernelMemory;
    return this;
  }

  /**
   * KernelMemory specifies the kernel memory limit (in bytes) for the container. Deprecated: kernel 5.4 deprecated kmem.limit_in_bytes.
   * @return kernelMemory
   */
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_KERNEL_MEMORY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Long getKernelMemory() {
    return kernelMemory;
  }


  @JsonProperty(JSON_PROPERTY_KERNEL_MEMORY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setKernelMemory(Long kernelMemory) {
    this.kernelMemory = kernelMemory;
  }


  public Resources kernelMemoryTCP(Long kernelMemoryTCP) {
    this.kernelMemoryTCP = kernelMemoryTCP;
    return this;
  }

  /**
   * Get kernelMemoryTCP
   * @return kernelMemoryTCP
   */
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_KERNEL_MEMORY_T_C_P)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Long getKernelMemoryTCP() {
    return kernelMemoryTCP;
  }


  @JsonProperty(JSON_PROPERTY_KERNEL_MEMORY_T_C_P)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setKernelMemoryTCP(Long kernelMemoryTCP) {
    this.kernelMemoryTCP = kernelMemoryTCP;
  }


  public Resources memory(Long memory) {
    this.memory = memory;
    return this;
  }

  /**
   * Get memory
   * @return memory
   */
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_MEMORY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Long getMemory() {
    return memory;
  }


  @JsonProperty(JSON_PROPERTY_MEMORY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMemory(Long memory) {
    this.memory = memory;
  }


  public Resources memoryReservation(Long memoryReservation) {
    this.memoryReservation = memoryReservation;
    return this;
  }

  /**
   * Get memoryReservation
   * @return memoryReservation
   */
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_MEMORY_RESERVATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Long getMemoryReservation() {
    return memoryReservation;
  }


  @JsonProperty(JSON_PROPERTY_MEMORY_RESERVATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMemoryReservation(Long memoryReservation) {
    this.memoryReservation = memoryReservation;
  }


  public Resources memorySwap(Long memorySwap) {
    this.memorySwap = memorySwap;
    return this;
  }

  /**
   * Get memorySwap
   * @return memorySwap
   */
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_MEMORY_SWAP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Long getMemorySwap() {
    return memorySwap;
  }


  @JsonProperty(JSON_PROPERTY_MEMORY_SWAP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMemorySwap(Long memorySwap) {
    this.memorySwap = memorySwap;
  }


  public Resources memorySwappiness(Long memorySwappiness) {
    this.memorySwappiness = memorySwappiness;
    return this;
  }

  /**
   * Get memorySwappiness
   * @return memorySwappiness
   */
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_MEMORY_SWAPPINESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Long getMemorySwappiness() {
    return memorySwappiness;
  }


  @JsonProperty(JSON_PROPERTY_MEMORY_SWAPPINESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMemorySwappiness(Long memorySwappiness) {
    this.memorySwappiness = memorySwappiness;
  }


  public Resources nanoCpus(Long nanoCpus) {
    this.nanoCpus = nanoCpus;
    return this;
  }

  /**
   * Get nanoCpus
   * @return nanoCpus
   */
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_NANO_CPUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Long getNanoCpus() {
    return nanoCpus;
  }


  @JsonProperty(JSON_PROPERTY_NANO_CPUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNanoCpus(Long nanoCpus) {
    this.nanoCpus = nanoCpus;
  }


  public Resources oomKillDisable(Boolean oomKillDisable) {
    this.oomKillDisable = oomKillDisable;
    return this;
  }

  /**
   * Get oomKillDisable
   * @return oomKillDisable
   */
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_OOM_KILL_DISABLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Boolean getOomKillDisable() {
    return oomKillDisable;
  }


  @JsonProperty(JSON_PROPERTY_OOM_KILL_DISABLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOomKillDisable(Boolean oomKillDisable) {
    this.oomKillDisable = oomKillDisable;
  }


  public Resources pidsLimit(Long pidsLimit) {
    this.pidsLimit = pidsLimit;
    return this;
  }

  /**
   * Get pidsLimit
   * @return pidsLimit
   */
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_PIDS_LIMIT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Long getPidsLimit() {
    return pidsLimit;
  }


  @JsonProperty(JSON_PROPERTY_PIDS_LIMIT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPidsLimit(Long pidsLimit) {
    this.pidsLimit = pidsLimit;
  }


  public Resources ulimits(List<@Valid Ulimit> ulimits) {
    this.ulimits = ulimits;
    return this;
  }

  public Resources addUlimitsItem(Ulimit ulimitsItem) {
    if (this.ulimits == null) {
      this.ulimits = new ArrayList<>();
    }
    this.ulimits.add(ulimitsItem);
    return this;
  }

  /**
   * Get ulimits
   * @return ulimits
   */
  @jakarta.annotation.Nullable
  @Valid

  @JsonProperty(JSON_PROPERTY_ULIMITS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public List<@Valid Ulimit> getUlimits() {
    return ulimits;
  }


  @JsonProperty(JSON_PROPERTY_ULIMITS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUlimits(List<@Valid Ulimit> ulimits) {
    this.ulimits = ulimits;
  }


  /**
   * Return true if this Resources object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Resources resources = (Resources) o;
    return Objects.equals(this.blkioDeviceReadBps, resources.blkioDeviceReadBps) &&
        Objects.equals(this.blkioDeviceReadIOps, resources.blkioDeviceReadIOps) &&
        Objects.equals(this.blkioDeviceWriteBps, resources.blkioDeviceWriteBps) &&
        Objects.equals(this.blkioDeviceWriteIOps, resources.blkioDeviceWriteIOps) &&
        Objects.equals(this.blkioWeight, resources.blkioWeight) &&
        Objects.equals(this.blkioWeightDevice, resources.blkioWeightDevice) &&
        Objects.equals(this.cgroupParent, resources.cgroupParent) &&
        Objects.equals(this.cpuCount, resources.cpuCount) &&
        Objects.equals(this.cpuPercent, resources.cpuPercent) &&
        Objects.equals(this.cpuPeriod, resources.cpuPeriod) &&
        Objects.equals(this.cpuQuota, resources.cpuQuota) &&
        Objects.equals(this.cpuRealtimePeriod, resources.cpuRealtimePeriod) &&
        Objects.equals(this.cpuRealtimeRuntime, resources.cpuRealtimeRuntime) &&
        Objects.equals(this.cpuShares, resources.cpuShares) &&
        Objects.equals(this.cpusetCpus, resources.cpusetCpus) &&
        Objects.equals(this.cpusetMems, resources.cpusetMems) &&
        Objects.equals(this.deviceCgroupRules, resources.deviceCgroupRules) &&
        Objects.equals(this.deviceRequests, resources.deviceRequests) &&
        Objects.equals(this.devices, resources.devices) &&
        Objects.equals(this.ioMaximumBandwidth, resources.ioMaximumBandwidth) &&
        Objects.equals(this.ioMaximumIOps, resources.ioMaximumIOps) &&
        Objects.equals(this.kernelMemory, resources.kernelMemory) &&
        Objects.equals(this.kernelMemoryTCP, resources.kernelMemoryTCP) &&
        Objects.equals(this.memory, resources.memory) &&
        Objects.equals(this.memoryReservation, resources.memoryReservation) &&
        Objects.equals(this.memorySwap, resources.memorySwap) &&
        Objects.equals(this.memorySwappiness, resources.memorySwappiness) &&
        Objects.equals(this.nanoCpus, resources.nanoCpus) &&
        Objects.equals(this.oomKillDisable, resources.oomKillDisable) &&
        Objects.equals(this.pidsLimit, resources.pidsLimit) &&
        Objects.equals(this.ulimits, resources.ulimits);
  }

  @Override
  public int hashCode() {
    return Objects.hash(blkioDeviceReadBps, blkioDeviceReadIOps, blkioDeviceWriteBps, blkioDeviceWriteIOps, blkioWeight, blkioWeightDevice, cgroupParent, cpuCount, cpuPercent, cpuPeriod, cpuQuota, cpuRealtimePeriod, cpuRealtimeRuntime, cpuShares, cpusetCpus, cpusetMems, deviceCgroupRules, deviceRequests, devices, ioMaximumBandwidth, ioMaximumIOps, kernelMemory, kernelMemoryTCP, memory, memoryReservation, memorySwap, memorySwappiness, nanoCpus, oomKillDisable, pidsLimit, ulimits);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Resources {\n");
    sb.append("    blkioDeviceReadBps: ").append(toIndentedString(blkioDeviceReadBps)).append("\n");
    sb.append("    blkioDeviceReadIOps: ").append(toIndentedString(blkioDeviceReadIOps)).append("\n");
    sb.append("    blkioDeviceWriteBps: ").append(toIndentedString(blkioDeviceWriteBps)).append("\n");
    sb.append("    blkioDeviceWriteIOps: ").append(toIndentedString(blkioDeviceWriteIOps)).append("\n");
    sb.append("    blkioWeight: ").append(toIndentedString(blkioWeight)).append("\n");
    sb.append("    blkioWeightDevice: ").append(toIndentedString(blkioWeightDevice)).append("\n");
    sb.append("    cgroupParent: ").append(toIndentedString(cgroupParent)).append("\n");
    sb.append("    cpuCount: ").append(toIndentedString(cpuCount)).append("\n");
    sb.append("    cpuPercent: ").append(toIndentedString(cpuPercent)).append("\n");
    sb.append("    cpuPeriod: ").append(toIndentedString(cpuPeriod)).append("\n");
    sb.append("    cpuQuota: ").append(toIndentedString(cpuQuota)).append("\n");
    sb.append("    cpuRealtimePeriod: ").append(toIndentedString(cpuRealtimePeriod)).append("\n");
    sb.append("    cpuRealtimeRuntime: ").append(toIndentedString(cpuRealtimeRuntime)).append("\n");
    sb.append("    cpuShares: ").append(toIndentedString(cpuShares)).append("\n");
    sb.append("    cpusetCpus: ").append(toIndentedString(cpusetCpus)).append("\n");
    sb.append("    cpusetMems: ").append(toIndentedString(cpusetMems)).append("\n");
    sb.append("    deviceCgroupRules: ").append(toIndentedString(deviceCgroupRules)).append("\n");
    sb.append("    deviceRequests: ").append(toIndentedString(deviceRequests)).append("\n");
    sb.append("    devices: ").append(toIndentedString(devices)).append("\n");
    sb.append("    ioMaximumBandwidth: ").append(toIndentedString(ioMaximumBandwidth)).append("\n");
    sb.append("    ioMaximumIOps: ").append(toIndentedString(ioMaximumIOps)).append("\n");
    sb.append("    kernelMemory: ").append(toIndentedString(kernelMemory)).append("\n");
    sb.append("    kernelMemoryTCP: ").append(toIndentedString(kernelMemoryTCP)).append("\n");
    sb.append("    memory: ").append(toIndentedString(memory)).append("\n");
    sb.append("    memoryReservation: ").append(toIndentedString(memoryReservation)).append("\n");
    sb.append("    memorySwap: ").append(toIndentedString(memorySwap)).append("\n");
    sb.append("    memorySwappiness: ").append(toIndentedString(memorySwappiness)).append("\n");
    sb.append("    nanoCpus: ").append(toIndentedString(nanoCpus)).append("\n");
    sb.append("    oomKillDisable: ").append(toIndentedString(oomKillDisable)).append("\n");
    sb.append("    pidsLimit: ").append(toIndentedString(pidsLimit)).append("\n");
    sb.append("    ulimits: ").append(toIndentedString(ulimits)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `BlkioDeviceReadBps` to the URL query string
    if (getBlkioDeviceReadBps() != null) {
      for (int i = 0; i < getBlkioDeviceReadBps().size(); i++) {
        if (getBlkioDeviceReadBps().get(i) != null) {
          joiner.add(getBlkioDeviceReadBps().get(i).toUrlQueryString(String.format("%sBlkioDeviceReadBps%s%s", prefix, suffix,
          "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix))));
        }
      }
    }

    // add `BlkioDeviceReadIOps` to the URL query string
    if (getBlkioDeviceReadIOps() != null) {
      for (int i = 0; i < getBlkioDeviceReadIOps().size(); i++) {
        if (getBlkioDeviceReadIOps().get(i) != null) {
          joiner.add(getBlkioDeviceReadIOps().get(i).toUrlQueryString(String.format("%sBlkioDeviceReadIOps%s%s", prefix, suffix,
          "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix))));
        }
      }
    }

    // add `BlkioDeviceWriteBps` to the URL query string
    if (getBlkioDeviceWriteBps() != null) {
      for (int i = 0; i < getBlkioDeviceWriteBps().size(); i++) {
        if (getBlkioDeviceWriteBps().get(i) != null) {
          joiner.add(getBlkioDeviceWriteBps().get(i).toUrlQueryString(String.format("%sBlkioDeviceWriteBps%s%s", prefix, suffix,
          "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix))));
        }
      }
    }

    // add `BlkioDeviceWriteIOps` to the URL query string
    if (getBlkioDeviceWriteIOps() != null) {
      for (int i = 0; i < getBlkioDeviceWriteIOps().size(); i++) {
        if (getBlkioDeviceWriteIOps().get(i) != null) {
          joiner.add(getBlkioDeviceWriteIOps().get(i).toUrlQueryString(String.format("%sBlkioDeviceWriteIOps%s%s", prefix, suffix,
          "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix))));
        }
      }
    }

    // add `BlkioWeight` to the URL query string
    if (getBlkioWeight() != null) {
      joiner.add(String.format("%sBlkioWeight%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getBlkioWeight()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `BlkioWeightDevice` to the URL query string
    if (getBlkioWeightDevice() != null) {
      for (int i = 0; i < getBlkioWeightDevice().size(); i++) {
        if (getBlkioWeightDevice().get(i) != null) {
          joiner.add(getBlkioWeightDevice().get(i).toUrlQueryString(String.format("%sBlkioWeightDevice%s%s", prefix, suffix,
          "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix))));
        }
      }
    }

    // add `CgroupParent` to the URL query string
    if (getCgroupParent() != null) {
      joiner.add(String.format("%sCgroupParent%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getCgroupParent()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `CpuCount` to the URL query string
    if (getCpuCount() != null) {
      joiner.add(String.format("%sCpuCount%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getCpuCount()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `CpuPercent` to the URL query string
    if (getCpuPercent() != null) {
      joiner.add(String.format("%sCpuPercent%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getCpuPercent()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `CpuPeriod` to the URL query string
    if (getCpuPeriod() != null) {
      joiner.add(String.format("%sCpuPeriod%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getCpuPeriod()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `CpuQuota` to the URL query string
    if (getCpuQuota() != null) {
      joiner.add(String.format("%sCpuQuota%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getCpuQuota()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `CpuRealtimePeriod` to the URL query string
    if (getCpuRealtimePeriod() != null) {
      joiner.add(String.format("%sCpuRealtimePeriod%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getCpuRealtimePeriod()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `CpuRealtimeRuntime` to the URL query string
    if (getCpuRealtimeRuntime() != null) {
      joiner.add(String.format("%sCpuRealtimeRuntime%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getCpuRealtimeRuntime()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `CpuShares` to the URL query string
    if (getCpuShares() != null) {
      joiner.add(String.format("%sCpuShares%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getCpuShares()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `CpusetCpus` to the URL query string
    if (getCpusetCpus() != null) {
      joiner.add(String.format("%sCpusetCpus%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getCpusetCpus()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `CpusetMems` to the URL query string
    if (getCpusetMems() != null) {
      joiner.add(String.format("%sCpusetMems%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getCpusetMems()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `DeviceCgroupRules` to the URL query string
    if (getDeviceCgroupRules() != null) {
      for (int i = 0; i < getDeviceCgroupRules().size(); i++) {
        joiner.add(String.format("%sDeviceCgroupRules%s%s=%s", prefix, suffix,
            "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix),
            URLEncoder.encode(ApiClient.valueToString(getDeviceCgroupRules().get(i)), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
      }
    }

    // add `DeviceRequests` to the URL query string
    if (getDeviceRequests() != null) {
      for (int i = 0; i < getDeviceRequests().size(); i++) {
        if (getDeviceRequests().get(i) != null) {
          joiner.add(getDeviceRequests().get(i).toUrlQueryString(String.format("%sDeviceRequests%s%s", prefix, suffix,
          "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix))));
        }
      }
    }

    // add `Devices` to the URL query string
    if (getDevices() != null) {
      for (int i = 0; i < getDevices().size(); i++) {
        if (getDevices().get(i) != null) {
          joiner.add(getDevices().get(i).toUrlQueryString(String.format("%sDevices%s%s", prefix, suffix,
          "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix))));
        }
      }
    }

    // add `IOMaximumBandwidth` to the URL query string
    if (getIoMaximumBandwidth() != null) {
      joiner.add(String.format("%sIOMaximumBandwidth%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getIoMaximumBandwidth()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `IOMaximumIOps` to the URL query string
    if (getIoMaximumIOps() != null) {
      joiner.add(String.format("%sIOMaximumIOps%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getIoMaximumIOps()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `KernelMemory` to the URL query string
    if (getKernelMemory() != null) {
      joiner.add(String.format("%sKernelMemory%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getKernelMemory()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `KernelMemoryTCP` to the URL query string
    if (getKernelMemoryTCP() != null) {
      joiner.add(String.format("%sKernelMemoryTCP%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getKernelMemoryTCP()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `Memory` to the URL query string
    if (getMemory() != null) {
      joiner.add(String.format("%sMemory%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getMemory()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `MemoryReservation` to the URL query string
    if (getMemoryReservation() != null) {
      joiner.add(String.format("%sMemoryReservation%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getMemoryReservation()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `MemorySwap` to the URL query string
    if (getMemorySwap() != null) {
      joiner.add(String.format("%sMemorySwap%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getMemorySwap()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `MemorySwappiness` to the URL query string
    if (getMemorySwappiness() != null) {
      joiner.add(String.format("%sMemorySwappiness%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getMemorySwappiness()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `NanoCpus` to the URL query string
    if (getNanoCpus() != null) {
      joiner.add(String.format("%sNanoCpus%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getNanoCpus()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `OomKillDisable` to the URL query string
    if (getOomKillDisable() != null) {
      joiner.add(String.format("%sOomKillDisable%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getOomKillDisable()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `PidsLimit` to the URL query string
    if (getPidsLimit() != null) {
      joiner.add(String.format("%sPidsLimit%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getPidsLimit()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `Ulimits` to the URL query string
    if (getUlimits() != null) {
      for (int i = 0; i < getUlimits().size(); i++) {
        if (getUlimits().get(i) != null) {
          joiner.add(getUlimits().get(i).toUrlQueryString(String.format("%sUlimits%s%s", prefix, suffix,
          "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix))));
        }
      }
    }

    return joiner.toString();
  }
}

