/*
 * supports a RESTful API for the Libpod library
 * This documentation describes the Podman v2.x+ RESTful API. It consists of a Docker-compatible API and a Libpod API providing support for Podmanâ€™s unique features such as pods.  To start the service and keep it running for 5,000 seconds (-t 0 runs forever):  podman system service -t 5000 &  You can then use cURL on the socket using requests documented below.  NOTE: if you install the package podman-docker, it will create a symbolic link for /run/docker.sock to /run/podman/podman.sock  NOTE: Some fields in the API response JSON are encoded as omitempty, which means that if said field has a zero value, they will not be encoded in the API response. This is a feature to help reduce the size of the JSON responses returned via the API.  NOTE: Due to the limitations of [go-swagger](https://github.com/go-swagger/go-swagger), some field values that have a complex type show up as null in the docs as well as in the API responses. This is because the zero value for the field type is null. The field description in the docs will state what type the field is expected to be for such cases.  See podman-system-service(1) for more information.  Quick Examples:  'podman info'  curl --unix-socket /run/podman/podman.sock http://d/v5.0.0/libpod/info  'podman pull quay.io/containers/podman'  curl -XPOST --unix-socket /run/podman/podman.sock -v 'http://d/v5.0.0/images/create?fromImage=quay.io%2Fcontainers%2Fpodman'  'podman list images'  curl --unix-socket /run/podman/podman.sock -v 'http://d/v5.0.0/libpod/images/json' | jq
 *
 * The version of the OpenAPI document: 5.0.0
 * Contact: podman@lists.podman.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.github.alersrt.pod4j.openapi.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import jakarta.validation.constraints.*;
import jakarta.validation.Valid;


import io.github.alersrt.pod4j.openapi.ApiClient;
/**
 * SecurityInfo describes the libpod host
 */
@JsonPropertyOrder({
  SecurityInfo.JSON_PROPERTY_APPARMOR_ENABLED,
  SecurityInfo.JSON_PROPERTY_CAPABILITIES,
  SecurityInfo.JSON_PROPERTY_ROOTLESS,
  SecurityInfo.JSON_PROPERTY_SECCOMP_ENABLED,
  SecurityInfo.JSON_PROPERTY_SECCOMP_PROFILE_PATH,
  SecurityInfo.JSON_PROPERTY_SELINUX_ENABLED
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-11-28T20:49:08.759389952+07:00[Asia/Barnaul]", comments = "Generator version: 7.7.0")
public class SecurityInfo {
  public static final String JSON_PROPERTY_APPARMOR_ENABLED = "apparmorEnabled";
  private Boolean apparmorEnabled;

  public static final String JSON_PROPERTY_CAPABILITIES = "capabilities";
  private String capabilities;

  public static final String JSON_PROPERTY_ROOTLESS = "rootless";
  private Boolean rootless;

  public static final String JSON_PROPERTY_SECCOMP_ENABLED = "seccompEnabled";
  private Boolean seccompEnabled;

  public static final String JSON_PROPERTY_SECCOMP_PROFILE_PATH = "seccompProfilePath";
  private String seccompProfilePath;

  public static final String JSON_PROPERTY_SELINUX_ENABLED = "selinuxEnabled";
  private Boolean selinuxEnabled;

  public SecurityInfo() { 
  }

  public SecurityInfo apparmorEnabled(Boolean apparmorEnabled) {
    this.apparmorEnabled = apparmorEnabled;
    return this;
  }

  /**
   * Get apparmorEnabled
   * @return apparmorEnabled
   */
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_APPARMOR_ENABLED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Boolean getApparmorEnabled() {
    return apparmorEnabled;
  }


  @JsonProperty(JSON_PROPERTY_APPARMOR_ENABLED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setApparmorEnabled(Boolean apparmorEnabled) {
    this.apparmorEnabled = apparmorEnabled;
  }


  public SecurityInfo capabilities(String capabilities) {
    this.capabilities = capabilities;
    return this;
  }

  /**
   * Get capabilities
   * @return capabilities
   */
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_CAPABILITIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getCapabilities() {
    return capabilities;
  }


  @JsonProperty(JSON_PROPERTY_CAPABILITIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCapabilities(String capabilities) {
    this.capabilities = capabilities;
  }


  public SecurityInfo rootless(Boolean rootless) {
    this.rootless = rootless;
    return this;
  }

  /**
   * Get rootless
   * @return rootless
   */
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_ROOTLESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Boolean getRootless() {
    return rootless;
  }


  @JsonProperty(JSON_PROPERTY_ROOTLESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRootless(Boolean rootless) {
    this.rootless = rootless;
  }


  public SecurityInfo seccompEnabled(Boolean seccompEnabled) {
    this.seccompEnabled = seccompEnabled;
    return this;
  }

  /**
   * Get seccompEnabled
   * @return seccompEnabled
   */
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_SECCOMP_ENABLED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Boolean getSeccompEnabled() {
    return seccompEnabled;
  }


  @JsonProperty(JSON_PROPERTY_SECCOMP_ENABLED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSeccompEnabled(Boolean seccompEnabled) {
    this.seccompEnabled = seccompEnabled;
  }


  public SecurityInfo seccompProfilePath(String seccompProfilePath) {
    this.seccompProfilePath = seccompProfilePath;
    return this;
  }

  /**
   * Get seccompProfilePath
   * @return seccompProfilePath
   */
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_SECCOMP_PROFILE_PATH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getSeccompProfilePath() {
    return seccompProfilePath;
  }


  @JsonProperty(JSON_PROPERTY_SECCOMP_PROFILE_PATH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSeccompProfilePath(String seccompProfilePath) {
    this.seccompProfilePath = seccompProfilePath;
  }


  public SecurityInfo selinuxEnabled(Boolean selinuxEnabled) {
    this.selinuxEnabled = selinuxEnabled;
    return this;
  }

  /**
   * Get selinuxEnabled
   * @return selinuxEnabled
   */
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_SELINUX_ENABLED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Boolean getSelinuxEnabled() {
    return selinuxEnabled;
  }


  @JsonProperty(JSON_PROPERTY_SELINUX_ENABLED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSelinuxEnabled(Boolean selinuxEnabled) {
    this.selinuxEnabled = selinuxEnabled;
  }


  /**
   * Return true if this SecurityInfo object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SecurityInfo securityInfo = (SecurityInfo) o;
    return Objects.equals(this.apparmorEnabled, securityInfo.apparmorEnabled) &&
        Objects.equals(this.capabilities, securityInfo.capabilities) &&
        Objects.equals(this.rootless, securityInfo.rootless) &&
        Objects.equals(this.seccompEnabled, securityInfo.seccompEnabled) &&
        Objects.equals(this.seccompProfilePath, securityInfo.seccompProfilePath) &&
        Objects.equals(this.selinuxEnabled, securityInfo.selinuxEnabled);
  }

  @Override
  public int hashCode() {
    return Objects.hash(apparmorEnabled, capabilities, rootless, seccompEnabled, seccompProfilePath, selinuxEnabled);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SecurityInfo {\n");
    sb.append("    apparmorEnabled: ").append(toIndentedString(apparmorEnabled)).append("\n");
    sb.append("    capabilities: ").append(toIndentedString(capabilities)).append("\n");
    sb.append("    rootless: ").append(toIndentedString(rootless)).append("\n");
    sb.append("    seccompEnabled: ").append(toIndentedString(seccompEnabled)).append("\n");
    sb.append("    seccompProfilePath: ").append(toIndentedString(seccompProfilePath)).append("\n");
    sb.append("    selinuxEnabled: ").append(toIndentedString(selinuxEnabled)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `apparmorEnabled` to the URL query string
    if (getApparmorEnabled() != null) {
      joiner.add(String.format("%sapparmorEnabled%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getApparmorEnabled()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `capabilities` to the URL query string
    if (getCapabilities() != null) {
      joiner.add(String.format("%scapabilities%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getCapabilities()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `rootless` to the URL query string
    if (getRootless() != null) {
      joiner.add(String.format("%srootless%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getRootless()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `seccompEnabled` to the URL query string
    if (getSeccompEnabled() != null) {
      joiner.add(String.format("%sseccompEnabled%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getSeccompEnabled()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `seccompProfilePath` to the URL query string
    if (getSeccompProfilePath() != null) {
      joiner.add(String.format("%sseccompProfilePath%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getSeccompProfilePath()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `selinuxEnabled` to the URL query string
    if (getSelinuxEnabled() != null) {
      joiner.add(String.format("%sselinuxEnabled%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getSelinuxEnabled()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    return joiner.toString();
  }
}

