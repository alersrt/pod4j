/*
 * supports a RESTful API for the Libpod library
 * This documentation describes the Podman v2.x+ RESTful API. It consists of a Docker-compatible API and a Libpod API providing support for Podmanâ€™s unique features such as pods.  To start the service and keep it running for 5,000 seconds (-t 0 runs forever):  podman system service -t 5000 &  You can then use cURL on the socket using requests documented below.  NOTE: if you install the package podman-docker, it will create a symbolic link for /run/docker.sock to /run/podman/podman.sock  NOTE: Some fields in the API response JSON are encoded as omitempty, which means that if said field has a zero value, they will not be encoded in the API response. This is a feature to help reduce the size of the JSON responses returned via the API.  NOTE: Due to the limitations of [go-swagger](https://github.com/go-swagger/go-swagger), some field values that have a complex type show up as null in the docs as well as in the API responses. This is because the zero value for the field type is null. The field description in the docs will state what type the field is expected to be for such cases.  See podman-system-service(1) for more information.  Quick Examples:  'podman info'  curl --unix-socket /run/podman/podman.sock http://d/v5.0.0/libpod/info  'podman pull quay.io/containers/podman'  curl -XPOST --unix-socket /run/podman/podman.sock -v 'http://d/v5.0.0/images/create?fromImage=quay.io%2Fcontainers%2Fpodman'  'podman list images'  curl --unix-socket /run/podman/podman.sock -v 'http://d/v5.0.0/libpod/images/json' | jq
 *
 * The version of the OpenAPI document: 5.0.0
 * Contact: podman@lists.podman.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.github.alersrt.pod4j.openapi.model;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.github.alersrt.pod4j.openapi.model.Address;
import io.github.alersrt.pod4j.openapi.model.EndpointSettings;
import io.github.alersrt.pod4j.openapi.model.PortBinding;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for NetworkSettings
 */
class NetworkSettingsTest {
    private final NetworkSettings model = new NetworkSettings();

    /**
     * Model tests for NetworkSettings
     */
    @Test
    void testNetworkSettings() {
        // TODO: test NetworkSettings
    }

    /**
     * Test the property 'bridge'
     */
    @Test
    void bridgeTest() {
        // TODO: test bridge
    }

    /**
     * Test the property 'endpointID'
     */
    @Test
    void endpointIDTest() {
        // TODO: test endpointID
    }

    /**
     * Test the property 'gateway'
     */
    @Test
    void gatewayTest() {
        // TODO: test gateway
    }

    /**
     * Test the property 'globalIPv6Address'
     */
    @Test
    void globalIPv6AddressTest() {
        // TODO: test globalIPv6Address
    }

    /**
     * Test the property 'globalIPv6PrefixLen'
     */
    @Test
    void globalIPv6PrefixLenTest() {
        // TODO: test globalIPv6PrefixLen
    }

    /**
     * Test the property 'hairpinMode'
     */
    @Test
    void hairpinModeTest() {
        // TODO: test hairpinMode
    }

    /**
     * Test the property 'ipAddress'
     */
    @Test
    void ipAddressTest() {
        // TODO: test ipAddress
    }

    /**
     * Test the property 'ipPrefixLen'
     */
    @Test
    void ipPrefixLenTest() {
        // TODO: test ipPrefixLen
    }

    /**
     * Test the property 'ipv6Gateway'
     */
    @Test
    void ipv6GatewayTest() {
        // TODO: test ipv6Gateway
    }

    /**
     * Test the property 'linkLocalIPv6Address'
     */
    @Test
    void linkLocalIPv6AddressTest() {
        // TODO: test linkLocalIPv6Address
    }

    /**
     * Test the property 'linkLocalIPv6PrefixLen'
     */
    @Test
    void linkLocalIPv6PrefixLenTest() {
        // TODO: test linkLocalIPv6PrefixLen
    }

    /**
     * Test the property 'macAddress'
     */
    @Test
    void macAddressTest() {
        // TODO: test macAddress
    }

    /**
     * Test the property 'networks'
     */
    @Test
    void networksTest() {
        // TODO: test networks
    }

    /**
     * Test the property 'ports'
     */
    @Test
    void portsTest() {
        // TODO: test ports
    }

    /**
     * Test the property 'sandboxID'
     */
    @Test
    void sandboxIDTest() {
        // TODO: test sandboxID
    }

    /**
     * Test the property 'sandboxKey'
     */
    @Test
    void sandboxKeyTest() {
        // TODO: test sandboxKey
    }

    /**
     * Test the property 'secondaryIPAddresses'
     */
    @Test
    void secondaryIPAddressesTest() {
        // TODO: test secondaryIPAddresses
    }

    /**
     * Test the property 'secondaryIPv6Addresses'
     */
    @Test
    void secondaryIPv6AddressesTest() {
        // TODO: test secondaryIPv6Addresses
    }

}
