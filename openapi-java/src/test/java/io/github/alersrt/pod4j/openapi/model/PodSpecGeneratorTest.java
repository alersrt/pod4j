/*
 * supports a RESTful API for the Libpod library
 * This documentation describes the Podman v2.x+ RESTful API. It consists of a Docker-compatible API and a Libpod API providing support for Podmanâ€™s unique features such as pods.  To start the service and keep it running for 5,000 seconds (-t 0 runs forever):  podman system service -t 5000 &  You can then use cURL on the socket using requests documented below.  NOTE: if you install the package podman-docker, it will create a symbolic link for /run/docker.sock to /run/podman/podman.sock  NOTE: Some fields in the API response JSON are encoded as omitempty, which means that if said field has a zero value, they will not be encoded in the API response. This is a feature to help reduce the size of the JSON responses returned via the API.  NOTE: Due to the limitations of [go-swagger](https://github.com/go-swagger/go-swagger), some field values that have a complex type show up as null in the docs as well as in the API responses. This is because the zero value for the field type is null. The field description in the docs will state what type the field is expected to be for such cases.  See podman-system-service(1) for more information.  Quick Examples:  'podman info'  curl --unix-socket /run/podman/podman.sock http://d/v5.0.0/libpod/info  'podman pull quay.io/containers/podman'  curl -XPOST --unix-socket /run/podman/podman.sock -v 'http://d/v5.0.0/images/create?fromImage=quay.io%2Fcontainers%2Fpodman'  'podman list images'  curl --unix-socket /run/podman/podman.sock -v 'http://d/v5.0.0/libpod/images/json' | jq
 *
 * The version of the OpenAPI document: 5.0.0
 * Contact: podman@lists.podman.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.github.alersrt.pod4j.openapi.model;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.github.alersrt.pod4j.openapi.model.IDMappingOptions;
import io.github.alersrt.pod4j.openapi.model.ImageVolume;
import io.github.alersrt.pod4j.openapi.model.LinuxResources;
import io.github.alersrt.pod4j.openapi.model.LinuxThrottleDevice;
import io.github.alersrt.pod4j.openapi.model.Mount;
import io.github.alersrt.pod4j.openapi.model.NamedVolume;
import io.github.alersrt.pod4j.openapi.model.Namespace;
import io.github.alersrt.pod4j.openapi.model.OverlayVolume;
import io.github.alersrt.pod4j.openapi.model.PerNetworkOptions;
import io.github.alersrt.pod4j.openapi.model.PortMapping;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for PodSpecGenerator
 */
class PodSpecGeneratorTest {
    private final PodSpecGenerator model = new PodSpecGenerator();

    /**
     * Model tests for PodSpecGenerator
     */
    @Test
    void testPodSpecGenerator() {
        // TODO: test PodSpecGenerator
    }

    /**
     * Test the property 'networks'
     */
    @Test
    void networksTest() {
        // TODO: test networks
    }

    /**
     * Test the property 'cgroupParent'
     */
    @Test
    void cgroupParentTest() {
        // TODO: test cgroupParent
    }

    /**
     * Test the property 'cniNetworks'
     */
    @Test
    void cniNetworksTest() {
        // TODO: test cniNetworks
    }

    /**
     * Test the property 'cpuPeriod'
     */
    @Test
    void cpuPeriodTest() {
        // TODO: test cpuPeriod
    }

    /**
     * Test the property 'cpuQuota'
     */
    @Test
    void cpuQuotaTest() {
        // TODO: test cpuQuota
    }

    /**
     * Test the property 'dnsOption'
     */
    @Test
    void dnsOptionTest() {
        // TODO: test dnsOption
    }

    /**
     * Test the property 'dnsSearch'
     */
    @Test
    void dnsSearchTest() {
        // TODO: test dnsSearch
    }

    /**
     * Test the property 'dnsServer'
     */
    @Test
    void dnsServerTest() {
        // TODO: test dnsServer
    }

    /**
     * Test the property 'exitPolicy'
     */
    @Test
    void exitPolicyTest() {
        // TODO: test exitPolicy
    }

    /**
     * Test the property 'hostadd'
     */
    @Test
    void hostaddTest() {
        // TODO: test hostadd
    }

    /**
     * Test the property 'hostname'
     */
    @Test
    void hostnameTest() {
        // TODO: test hostname
    }

    /**
     * Test the property 'idmappings'
     */
    @Test
    void idmappingsTest() {
        // TODO: test idmappings
    }

    /**
     * Test the property 'imageVolumes'
     */
    @Test
    void imageVolumesTest() {
        // TODO: test imageVolumes
    }

    /**
     * Test the property 'infraCommand'
     */
    @Test
    void infraCommandTest() {
        // TODO: test infraCommand
    }

    /**
     * Test the property 'infraConmonPidFile'
     */
    @Test
    void infraConmonPidFileTest() {
        // TODO: test infraConmonPidFile
    }

    /**
     * Test the property 'infraImage'
     */
    @Test
    void infraImageTest() {
        // TODO: test infraImage
    }

    /**
     * Test the property 'infraName'
     */
    @Test
    void infraNameTest() {
        // TODO: test infraName
    }

    /**
     * Test the property 'ipcns'
     */
    @Test
    void ipcnsTest() {
        // TODO: test ipcns
    }

    /**
     * Test the property 'labels'
     */
    @Test
    void labelsTest() {
        // TODO: test labels
    }

    /**
     * Test the property 'mounts'
     */
    @Test
    void mountsTest() {
        // TODO: test mounts
    }

    /**
     * Test the property 'name'
     */
    @Test
    void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'netns'
     */
    @Test
    void netnsTest() {
        // TODO: test netns
    }

    /**
     * Test the property 'networkOptions'
     */
    @Test
    void networkOptionsTest() {
        // TODO: test networkOptions
    }

    /**
     * Test the property 'noInfra'
     */
    @Test
    void noInfraTest() {
        // TODO: test noInfra
    }

    /**
     * Test the property 'noManageHosts'
     */
    @Test
    void noManageHostsTest() {
        // TODO: test noManageHosts
    }

    /**
     * Test the property 'noManageResolvConf'
     */
    @Test
    void noManageResolvConfTest() {
        // TODO: test noManageResolvConf
    }

    /**
     * Test the property 'overlayVolumes'
     */
    @Test
    void overlayVolumesTest() {
        // TODO: test overlayVolumes
    }

    /**
     * Test the property 'pidns'
     */
    @Test
    void pidnsTest() {
        // TODO: test pidns
    }

    /**
     * Test the property 'podCreateCommand'
     */
    @Test
    void podCreateCommandTest() {
        // TODO: test podCreateCommand
    }

    /**
     * Test the property 'podDevices'
     */
    @Test
    void podDevicesTest() {
        // TODO: test podDevices
    }

    /**
     * Test the property 'portmappings'
     */
    @Test
    void portmappingsTest() {
        // TODO: test portmappings
    }

    /**
     * Test the property 'resourceLimits'
     */
    @Test
    void resourceLimitsTest() {
        // TODO: test resourceLimits
    }

    /**
     * Test the property 'restartPolicy'
     */
    @Test
    void restartPolicyTest() {
        // TODO: test restartPolicy
    }

    /**
     * Test the property 'restartTries'
     */
    @Test
    void restartTriesTest() {
        // TODO: test restartTries
    }

    /**
     * Test the property 'securityOpt'
     */
    @Test
    void securityOptTest() {
        // TODO: test securityOpt
    }

    /**
     * Test the property 'serviceContainerID'
     */
    @Test
    void serviceContainerIDTest() {
        // TODO: test serviceContainerID
    }

    /**
     * Test the property 'shareParent'
     */
    @Test
    void shareParentTest() {
        // TODO: test shareParent
    }

    /**
     * Test the property 'sharedNamespaces'
     */
    @Test
    void sharedNamespacesTest() {
        // TODO: test sharedNamespaces
    }

    /**
     * Test the property 'shmSize'
     */
    @Test
    void shmSizeTest() {
        // TODO: test shmSize
    }

    /**
     * Test the property 'shmSizeSystemd'
     */
    @Test
    void shmSizeSystemdTest() {
        // TODO: test shmSizeSystemd
    }

    /**
     * Test the property 'sysctl'
     */
    @Test
    void sysctlTest() {
        // TODO: test sysctl
    }

    /**
     * Test the property 'throttleReadBpsDevice'
     */
    @Test
    void throttleReadBpsDeviceTest() {
        // TODO: test throttleReadBpsDevice
    }

    /**
     * Test the property 'userns'
     */
    @Test
    void usernsTest() {
        // TODO: test userns
    }

    /**
     * Test the property 'utsns'
     */
    @Test
    void utsnsTest() {
        // TODO: test utsns
    }

    /**
     * Test the property 'volumes'
     */
    @Test
    void volumesTest() {
        // TODO: test volumes
    }

    /**
     * Test the property 'volumesFrom'
     */
    @Test
    void volumesFromTest() {
        // TODO: test volumesFrom
    }

}
