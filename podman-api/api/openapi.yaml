openapi: 3.0.1
info:
  contact:
    email: podman@lists.podman.io
    name: Podman
    url: https://podman.io/community/
  description: |-
    This documentation describes the Podman v2.x+ RESTful API. It consists of a Docker-compatible
    API and a Libpod API providing support for Podman’s unique features such as pods.

    To start the service and keep it running for 5,000 seconds (-t 0 runs forever):

    podman system service -t 5000 &

    You can then use cURL on the socket using requests documented below.

    NOTE: if you install the package podman-docker, it will create a symbolic
    link for /run/docker.sock to /run/podman/podman.sock

    NOTE: Some fields in the API response JSON are encoded as omitempty, which means that
    if said field has a zero value, they will not be encoded in the API response. This
    is a feature to help reduce the size of the JSON responses returned via the API.

    NOTE: Due to the limitations of [go-swagger](https://github.com/go-swagger/go-swagger),
    some field values that have a complex type show up as null in the docs as well as in the
    API responses. This is because the zero value for the field type is null. The field
    description in the docs will state what type the field is expected to be for such cases.

    See podman-system-service(1) for more information.

    Quick Examples:

    'podman info'

    curl --unix-socket /run/podman/podman.sock http://d/v5.0.0/libpod/info

    'podman pull quay.io/containers/podman'

    curl -XPOST --unix-socket /run/podman/podman.sock -v 'http://d/v5.0.0/images/create?fromImage=quay.io%2Fcontainers%2Fpodman'

    'podman list images'

    curl --unix-socket /run/podman/podman.sock -v 'http://d/v5.0.0/libpod/images/json' | jq
  license:
    name: Apache-2.0
    url: https://opensource.org/licenses/Apache-2.0
  termsOfService: https://github.com/containers/podman/blob/913caaa9b1de2b63692c9bae15120208194c9eb3/LICENSE
  title: supports a RESTful API for the Libpod library
  version: 5.0.0
  x-logo:
  - url: https://raw.githubusercontent.com/containers/libpod/main/logo/podman-logo.png
  - altText: Podman logo
servers:
- url: http://podman.io/
- url: https://podman.io/
tags:
- description: Actions related to containers
  name: containers
- description: Actions related to exec
  name: exec
- description: Actions related to images
  name: images
- description: Actions related to manifests
  name: manifests
- description: Actions related to networks
  name: networks
- description: Actions related to pods
  name: pods
- description: Actions related to volumes
  name: volumes
- description: Actions related to secrets
  name: secrets
- description: Actions related to Podman engine
  name: system
- description: Actions related to containers for the compatibility endpoints
  name: containers (compat)
- description: Actions related to exec for the compatibility endpoints
  name: exec (compat)
- description: Actions related to images for the compatibility endpoints
  name: images (compat)
- description: Actions related to networks for the compatibility endpoints
  name: networks (compat)
- description: Actions related to volumes for the compatibility endpoints
  name: volumes (compat)
- description: Actions related to secrets for the compatibility endpoints
  name: secrets (compat)
- description: Actions related to Podman and compatibility engines
  name: system (compat)
paths:
  /auth:
    post:
      operationId: SystemAuth
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AuthConfig"
          application/x-tar:
            schema:
              $ref: "#/components/schemas/AuthConfig"
        description: Authentication to check
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthReport"
          description: Auth response
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Internal server error
      summary: Check auth configuration
      tags:
      - system (compat)
      x-codegen-request-body-name: authConfig
      x-content-type: application/json
      x-accepts:
      - application/json
  /build:
    post:
      description: Build an image from the given Dockerfile(s)
      operationId: ImageBuild
      parameters:
      - in: header
        name: Content-Type
        schema:
          default: application/x-tar
          enum:
          - application/x-tar
          type: string
      - in: header
        name: X-Registry-Config
        schema:
          type: string
      - description: |
          Path within the build context to the `Dockerfile`.
          This is ignored if remote is specified and points to an external `Dockerfile`.
        in: query
        name: dockerfile
        schema:
          default: Dockerfile
          type: string
      - description: "A name and optional tag to apply to the image in the `name:tag`\
          \ format. If you omit the tag, the default latest value is assumed. You\
          \ can provide several t parameters."
        in: query
        name: t
        schema:
          default: latest
          type: string
      - description: |
          TBD Extra hosts to add to /etc/hosts
          (As of version 1.xx)
        in: query
        name: extrahosts
        schema:
          type: string
      - description: |
          A Git repository URI or HTTP/HTTPS context URI.
          If the URI points to a single text file, the file’s contents are placed
          into a file called Dockerfile and the image is built from that file. If
          the URI points to a tarball, the file is downloaded by the daemon and the
          contents therein used as the context for the build. If the URI points to a
          tarball and the dockerfile parameter is also specified, there must be a file
          with the corresponding path inside the tarball.
          (As of version 1.xx)
        in: query
        name: remote
        schema:
          type: string
      - description: |
          Number of times to retry in case of failure when performing push/pull.
        in: query
        name: retry
        schema:
          default: 3
          type: integer
      - description: |
          Delay between retries in case of push/pull failures.
        in: query
        name: retry-delay
        schema:
          default: 2s
          type: string
      - description: |
          Suppress verbose build output
        in: query
        name: q
        schema:
          default: false
          type: boolean
      - description: |
          Contents of base images to be modified on ADD or COPY only
          (As of Podman version v5.2)
        in: query
        name: compatvolumes
        schema:
          default: false
          type: boolean
      - description: |
          Do not use the cache when building the image
          (As of version 1.xx)
        in: query
        name: nocache
        schema:
          default: false
          type: boolean
      - description: |
          JSON array of images used to build cache resolution
          (As of version 1.xx)
        in: query
        name: cachefrom
        schema:
          type: string
      - description: |
          Attempt to pull the image even if an older image exists locally
          (As of version 1.xx)
        in: query
        name: pull
        schema:
          default: false
          type: boolean
      - description: |
          Remove intermediate containers after a successful build
          (As of version 1.xx)
        in: query
        name: rm
        schema:
          default: true
          type: boolean
      - description: |
          Always remove intermediate containers, even upon failure
          (As of version 1.xx)
        in: query
        name: forcerm
        schema:
          default: false
          type: boolean
      - description: |
          Memory is the upper limit (in bytes) on how much memory running containers can use
          (As of version 1.xx)
        in: query
        name: memory
        schema:
          type: integer
      - description: |
          MemorySwap limits the amount of memory and swap together
          (As of version 1.xx)
        in: query
        name: memswap
        schema:
          type: integer
      - description: |
          CPUShares (relative weight
          (As of version 1.xx)
        in: query
        name: cpushares
        schema:
          type: integer
      - description: |
          CPUSetCPUs in which to allow execution (0-3, 0,1)
          (As of version 1.xx)
        in: query
        name: cpusetcpus
        schema:
          type: string
      - description: |
          CPUPeriod limits the CPU CFS (Completely Fair Scheduler) period
          (As of version 1.xx)
        in: query
        name: cpuperiod
        schema:
          type: integer
      - description: |
          CPUQuota limits the CPU CFS (Completely Fair Scheduler) quota
          (As of version 1.xx)
        in: query
        name: cpuquota
        schema:
          type: integer
      - description: |
          JSON map of string pairs denoting build-time variables.
          For example, the build argument `Foo` with the value of `bar` would be encoded in JSON as `["Foo":"bar"]`.

          For example, buildargs={"Foo":"bar"}.

          Note(s):
          * This should not be used to pass secrets.
          * The value of buildargs should be URI component encoded before being passed to the API.

          (As of version 1.xx)
        in: query
        name: buildargs
        schema:
          type: string
      - description: |
          ShmSize is the "size" value to use when mounting an shmfs on the container's /dev/shm directory.
          Default is 64MB
          (As of version 1.xx)
        in: query
        name: shmsize
        schema:
          default: 67108864
          type: integer
      - description: |
          Silently ignored.
          Squash the resulting images layers into a single layer
          (As of version 1.xx)
        in: query
        name: squash
        schema:
          default: false
          type: boolean
      - description: |
          JSON map of key, value pairs to set as labels on the new image
          (As of version 1.xx)
        in: query
        name: labels
        schema:
          type: string
      - description: |
          Sets the networking mode for the run commands during build.
          Supported standard values are:
            * `bridge` limited to containers within a single host, port mapping required for external access
            * `host` no isolation between host and containers on this network
            * `none` disable all networking for this container
            * container:<nameOrID> share networking with given container
            ---All other values are assumed to be a custom network's name
          (As of version 1.xx)
        in: query
        name: networkmode
        schema:
          default: bridge
          type: string
      - description: |
          Platform format os[/arch[/variant]]
          Can be comma separated list for multi arch builds.
          (As of version 1.xx)
        in: query
        name: platform
        schema:
          type: string
      - description: |
          Target build stage
          (As of version 1.xx)
        in: query
        name: target
        schema:
          type: string
      - description: |
          output configuration TBD
          (As of version 1.xx)
        in: query
        name: outputs
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              format: binary
              type: string
          application/x-tar:
            schema:
              format: binary
              type: string
        description: |
          A tar archive compressed with one of the following algorithms:
          identity (no compression), gzip, bzip2, xz.
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ImageBuild_200_response"
          description: OK (As of version 1.xx)
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Bad parameter in request
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Internal server error
      summary: Create image
      tags:
      - images (compat)
      x-codegen-request-body-name: inputStream
      x-content-type: application/json
      x-accepts:
      - application/json
  /commit:
    post:
      description: Create a new image from a container
      operationId: ImageCommit
      parameters:
      - description: the name or ID of a container
        in: query
        name: container
        schema:
          type: string
      - description: the repository name for the created image
        in: query
        name: repo
        schema:
          type: string
      - description: tag name for the created image
        in: query
        name: tag
        schema:
          type: string
      - description: commit message
        in: query
        name: comment
        schema:
          type: string
      - description: author of the image
        in: query
        name: author
        schema:
          type: string
      - description: pause the container before committing it
        in: query
        name: pause
        schema:
          type: boolean
      - description: instructions to apply while committing in Dockerfile format
        in: query
        name: changes
        schema:
          type: string
      - description: squash newly built layers into a single new layer
        in: query
        name: squash
        schema:
          type: boolean
      responses:
        "201":
          content: {}
          description: no error
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: No such image
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Internal server error
      summary: New Image
      tags:
      - containers (compat)
      x-accepts:
      - application/json
  /containers/{name}:
    delete:
      operationId: ContainerDelete
      parameters:
      - description: the name or ID of the container
        in: path
        name: name
        required: true
        schema:
          type: string
      - description: "If the container is running, kill it before removing it."
        in: query
        name: force
        schema:
          default: false
          type: boolean
      - description: Remove the volumes associated with the container.
        in: query
        name: v
        schema:
          default: false
          type: boolean
      - description: not supported
        in: query
        name: link
        schema:
          type: boolean
      responses:
        "204":
          content: {}
          description: no error
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Bad parameter in request
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: No such container
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Conflict error in operation
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Internal server error
      summary: Remove a container
      tags:
      - containers (compat)
      x-accepts:
      - application/json
  /containers/{name}/archive:
    get:
      description: Get a tar archive of files from a container
      operationId: ContainerArchive
      parameters:
      - description: container name or id
        in: path
        name: name
        required: true
        schema:
          type: string
      - description: Path to a directory in the container to extract
        in: query
        name: path
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                format: binary
                type: string
          description: no error
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Bad parameter in request
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: No such container
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Internal server error
      summary: Get files from a container
      tags:
      - containers (compat)
      x-accepts:
      - application/json
    put:
      description: Put a tar archive of files into a container
      operationId: PutContainerArchive
      parameters:
      - description: container name or id
        in: path
        name: name
        required: true
        schema:
          type: string
      - description: Path to a directory in the container to extract
        in: query
        name: path
        required: true
        schema:
          type: string
      - description: if unpacking the given content would cause an existing directory
          to be replaced with a non-directory and vice versa (1 or true)
        in: query
        name: noOverwriteDirNonDir
        schema:
          type: string
      - description: copy UID/GID maps to the dest file or di (1 or true)
        in: query
        name: copyUIDGID
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: string
          application/x-tar:
            schema:
              type: string
        description: tarfile of files to copy into the container
        required: false
      responses:
        "200":
          content: {}
          description: no error
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Bad parameter in request
        "403":
          content: {}
          description: the container rootfs is read-only
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: No such container
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Internal server error
      summary: Put files into a container
      tags:
      - containers (compat)
      x-codegen-request-body-name: request
      x-content-type: application/json
      x-accepts:
      - application/json
  /containers/{name}/attach:
    post:
      description: |
        Attach to a container to read its output or send it input. You can attach
        to the same container multiple times and you can reattach to containers
        that have been detached.

        It uses the same stream format as docker, see the libpod attach endpoint for a description of the format.
      operationId: ContainerAttach
      parameters:
      - description: the name or ID of the container
        in: path
        name: name
        required: true
        schema:
          type: string
      - description: keys to use for detaching from the container
        in: query
        name: detachKeys
        schema:
          type: string
      - description: Stream all logs from the container across the connection. Happens
          before streaming attach (if requested). At least one of logs or stream must
          be set
        in: query
        name: logs
        schema:
          type: boolean
      - description: "Attach to the container. If unset, and logs is set, only the\
          \ container's logs will be sent. At least one of stream or logs must be\
          \ set"
        in: query
        name: stream
        schema:
          default: true
          type: boolean
      - description: Attach to container STDOUT
        in: query
        name: stdout
        schema:
          type: boolean
      - description: Attach to container STDERR
        in: query
        name: stderr
        schema:
          type: boolean
      - description: Attach to container STDIN
        in: query
        name: stdin
        schema:
          type: boolean
      responses:
        "101":
          content: {}
          description: "No error, connection has been hijacked for transporting streams."
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Bad parameter in request
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: No such container
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Internal server error
      summary: Attach to a container
      tags:
      - containers (compat)
      x-accepts:
      - application/json
  /containers/{name}/exec:
    post:
      description: Create an exec session to run a command inside a running container.
        Exec sessions will be automatically removed 5 minutes after they exit.
      operationId: ContainerExec
      parameters:
      - description: name of container
        in: path
        name: name
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ContainerExec_request"
          application/x-tar:
            schema:
              $ref: "#/components/schemas/ContainerExec_request"
        description: Attributes for create
        required: false
      responses:
        "201":
          content: {}
          description: no error
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: No such container
        "409":
          content: {}
          description: container is paused
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Internal server error
      summary: Create an exec instance
      tags:
      - exec (compat)
      x-codegen-request-body-name: control
      x-content-type: application/json
      x-accepts:
      - application/json
  /containers/{name}/export:
    get:
      description: Export the contents of a container as a tarball.
      operationId: ContainerExport
      parameters:
      - description: the name or ID of the container
        in: path
        name: name
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: tarball is returned in body
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: No such container
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Internal server error
      summary: Export a container
      tags:
      - containers (compat)
      x-accepts:
      - application/json
  /containers/{name}/json:
    get:
      description: Return low-level information about a container.
      operationId: ContainerInspect
      parameters:
      - description: the name or id of the container
        in: path
        name: name
        required: true
        schema:
          type: string
      - description: include the size of the container
        in: query
        name: size
        schema:
          default: false
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ContainerJSON"
          description: Inspect container
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: No such container
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Internal server error
      summary: Inspect container
      tags:
      - containers (compat)
      x-accepts:
      - application/json
  /containers/{name}/kill:
    post:
      description: Signal to send to the container as an integer or string (e.g. SIGINT)
      operationId: ContainerKill
      parameters:
      - description: the name or ID of the container
        in: path
        name: name
        required: true
        schema:
          type: string
      - description: Send kill signal to all containers
        in: query
        name: all
        schema:
          default: false
          type: boolean
      - description: signal to be sent to container
        in: query
        name: signal
        schema:
          default: SIGKILL
          type: string
      responses:
        "204":
          content: {}
          description: no error
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: No such container
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Conflict error in operation
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Internal server error
      summary: Kill container
      tags:
      - containers (compat)
      x-accepts:
      - application/json
  /containers/{name}/logs:
    get:
      description: Get stdout and stderr logs from a container.
      operationId: ContainerLogs
      parameters:
      - description: the name or ID of the container
        in: path
        name: name
        required: true
        schema:
          type: string
      - description: Keep connection after returning logs.
        in: query
        name: follow
        schema:
          type: boolean
      - description: Return logs from stdout
        in: query
        name: stdout
        schema:
          type: boolean
      - description: Return logs from stderr
        in: query
        name: stderr
        schema:
          type: boolean
      - description: "Only return logs since this time, as a UNIX timestamp"
        in: query
        name: since
        schema:
          type: string
      - description: "Only return logs before this time, as a UNIX timestamp"
        in: query
        name: until
        schema:
          type: string
      - description: Add timestamps to every log line
        in: query
        name: timestamps
        schema:
          default: false
          type: boolean
      - description: Only return this number of log lines from the end of the logs
        in: query
        name: tail
        schema:
          default: all
          type: string
      responses:
        "200":
          content: {}
          description: logs returned as a stream in response body.
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: No such container
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Internal server error
      summary: Get container logs
      tags:
      - containers (compat)
      x-accepts:
      - application/json
  /containers/{name}/pause:
    post:
      description: Use the cgroups freezer to suspend all processes in a container.
      operationId: ContainerPause
      parameters:
      - description: the name or ID of the container
        in: path
        name: name
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: no error
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: No such container
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Internal server error
      summary: Pause container
      tags:
      - containers (compat)
      x-accepts:
      - application/json
  /containers/{name}/rename:
    post:
      description: Change the name of an existing container.
      operationId: ContainerRename
      parameters:
      - description: Full or partial ID or full name of the container to rename
        in: path
        name: name
        required: true
        schema:
          type: string
      - description: New name for the container
        in: query
        name: name
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: no error
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: No such container
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Conflict error in operation
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Internal server error
      summary: Rename an existing container
      tags:
      - containers (compat)
      x-accepts:
      - application/json
  /containers/{name}/resize:
    post:
      description: Resize the terminal attached to a container (for use with Attach).
      operationId: ContainerResize
      parameters:
      - description: the name or ID of the container
        in: path
        name: name
        required: true
        schema:
          type: string
      - description: "Height to set for the terminal, in characters"
        in: query
        name: h
        schema:
          type: integer
      - description: "Width to set for the terminal, in characters"
        in: query
        name: w
        schema:
          type: integer
      - description: Ignore containers not running errors
        in: query
        name: running
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: Success
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: No such container
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Internal server error
      summary: Resize a container's TTY
      tags:
      - containers (compat)
      x-accepts:
      - application/json
  /containers/{name}/restart:
    post:
      operationId: ContainerRestart
      parameters:
      - description: the name or ID of the container
        in: path
        name: name
        required: true
        schema:
          type: string
      - description: timeout before sending kill signal to container
        in: query
        name: t
        schema:
          type: integer
      responses:
        "204":
          content: {}
          description: no error
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: No such container
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Internal server error
      summary: Restart container
      tags:
      - containers (compat)
      x-accepts:
      - application/json
  /containers/{name}/start:
    post:
      operationId: ContainerStart
      parameters:
      - description: the name or ID of the container
        in: path
        name: name
        required: true
        schema:
          type: string
      - description: "Override the key sequence for detaching a container. Format\
          \ is a single character [a-Z] or ctrl-<value> where <value> is one of: a-z,\
          \ @, ^, [, , or _."
        in: query
        name: detachKeys
        schema:
          default: "ctrl-p,ctrl-q"
          type: string
      responses:
        "204":
          content: {}
          description: no error
        "304":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Container already started
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: No such container
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Internal server error
      summary: Start a container
      tags:
      - containers (compat)
      x-accepts:
      - application/json
  /containers/{name}/stats:
    get:
      description: This returns a live stream of a container’s resource usage statistics.
      operationId: ContainerStats
      parameters:
      - description: the name or ID of the container
        in: path
        name: name
        required: true
        schema:
          type: string
      - description: Stream the output
        in: query
        name: stream
        schema:
          default: true
          type: boolean
      - description: "Provide a one-shot response in which preCPU stats are blank,\
          \ resulting in a single cycle return."
        in: query
        name: one-shot
        schema:
          default: false
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: no error
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: No such container
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Internal server error
      summary: Get stats for a container
      tags:
      - containers (compat)
      x-accepts:
      - application/json
  /containers/{name}/stop:
    post:
      description: Stop a container
      operationId: ContainerStop
      parameters:
      - description: the name or ID of the container
        in: path
        name: name
        required: true
        schema:
          type: string
      - description: number of seconds to wait before killing container
        in: query
        name: t
        schema:
          type: integer
      responses:
        "204":
          content: {}
          description: no error
        "304":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Container already stopped
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: No such container
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Internal server error
      summary: Stop a container
      tags:
      - containers (compat)
      x-accepts:
      - application/json
  /containers/{name}/top:
    get:
      operationId: ContainerTop
      parameters:
      - description: the name or ID of the container
        in: path
        name: name
        required: true
        schema:
          type: string
      - description: arguments to pass to ps such as aux.
        in: query
        name: ps_args
        schema:
          default: -ef
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ContainerTopOKBody"
          description: List processes in container
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: No such container
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Internal server error
      summary: List processes running inside a container
      tags:
      - containers (compat)
      x-accepts:
      - application/json
  /containers/{name}/unpause:
    post:
      description: Resume a paused container
      operationId: ContainerUnpause
      parameters:
      - description: the name or ID of the container
        in: path
        name: name
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: no error
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: No such container
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Internal server error
      summary: Unpause container
      tags:
      - containers (compat)
      x-accepts:
      - application/json
  /containers/{name}/update:
    post:
      description: Change configuration settings for an existing container without
        requiring recreation.
      operationId: ContainerUpdate
      parameters:
      - description: Full or partial ID or full name of the container to rename
        in: path
        name: name
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/containerUpdateRequest"
          application/x-tar:
            schema:
              $ref: "#/components/schemas/containerUpdateRequest"
        description: attributes for updating the container
        required: false
      responses:
        "200":
          content: {}
          description: no error
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: No such container
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Internal server error
      summary: Update configuration of an existing container
      tags:
      - containers (compat)
      x-codegen-request-body-name: resources
      x-content-type: application/json
      x-accepts:
      - application/json
  /containers/{name}/wait:
    post:
      description: Block until a container stops or given condition is met.
      operationId: ContainerWait
      parameters:
      - description: the name or ID of the container
        in: path
        name: name
        required: true
        schema:
          type: string
      - description: |
          wait until container is to a given condition. default is stopped. valid conditions are:
            - configured
            - created
            - exited
            - paused
            - running
            - stopped
        in: query
        name: condition
        schema:
          type: string
      - description: Time Interval to wait before polling for completion.
        in: query
        name: interval
        schema:
          default: 250ms
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ContainerWait_200_response"
          description: Wait container
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: No such container
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Internal server error
      summary: Wait on a container
      tags:
      - containers (compat)
      x-accepts:
      - application/json
  /containers/create:
    post:
      operationId: ContainerCreate
      parameters:
      - description: container name
        in: query
        name: name
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateContainerConfig"
          application/x-tar:
            schema:
              $ref: "#/components/schemas/CreateContainerConfig"
        description: Container to create
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ContainerCreateResponse"
          description: Create container
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Bad parameter in request
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: No such container
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Conflict error in operation
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Internal server error
      summary: Create a container
      tags:
      - containers (compat)
      x-codegen-request-body-name: body
      x-content-type: application/json
      x-accepts:
      - application/json
  /containers/json:
    get:
      description: Returns a list of containers
      operationId: ContainerList
      parameters:
      - description: "Return all containers. By default, only running containers are\
          \ shown"
        in: query
        name: all
        schema:
          default: false
          type: boolean
      - description: Return containers in storage not controlled by Podman
        in: query
        name: external
        schema:
          default: false
          type: boolean
      - description: "Return this number of most recently created containers, including\
          \ non-running ones."
        in: query
        name: limit
        schema:
          type: integer
      - description: Return the size of container as fields SizeRw and SizeRootFs.
        in: query
        name: size
        schema:
          default: false
          type: boolean
      - description: |
          A JSON encoded value of the filters (a `map[string][]string`) to process on the containers list. Available filters:
          - `ancestor`=(`<image-name>[:<tag>]`, `<image id>`, or `<image@digest>`)
          - `before`=(`<container id>` or `<container name>`)
          - `expose`=(`<port>[/<proto>]` or `<startport-endport>/[<proto>]`)
          - `exited=<int>` containers with exit code of `<int>`
          - `health`=(`starting`, `healthy`, `unhealthy` or `none`)
          - `id=<ID>` a container's ID
          - `is-task`=(`true` or `false`)
          - `label`=(`key` or `"key=value"`) of a container label
          - `name=<name>` a container's name
          - `network`=(`<network id>` or `<network name>`)
          - `publish`=(`<port>[/<proto>]` or `<startport-endport>/[<proto>]`)
          - `since`=(`<container id>` or `<container name>`)
          - `status`=(`created`, `restarting`, `running`, `removing`, `paused`, `exited` or `dead`)
          - `volume`=(`<volume name>` or `<mount point destination>`)
        in: query
        name: filters
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/Container"
                type: array
          description: List Containers
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Bad parameter in request
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Internal server error
      summary: List containers
      tags:
      - containers (compat)
      x-accepts:
      - application/json
  /containers/prune:
    post:
      description: Remove containers not in use
      operationId: ContainerPrune
      parameters:
      - description: |
          Filters to process on the prune list, encoded as JSON (a `map[string][]string`).  Available filters:
           - `until=<timestamp>` Prune containers created before this timestamp. The `<timestamp>` can be Unix timestamps, date formatted timestamps, or Go duration strings (e.g. `10m`, `1h30m`) computed relative to the daemon machine’s time.
           - `label` (`label=<key>`, `label=<key>=<value>`, `label!=<key>`, or `label!=<key>=<value>`) Prune containers with (or without, in case `label!=...` is used) the specified labels.
        in: query
        name: filters
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/ContainersPruneReport"
                type: array
          description: Prune Containers
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Internal server error
      summary: Delete stopped containers
      tags:
      - containers (compat)
      x-accepts:
      - application/json
  /events:
    get:
      description: Returns events filtered on query parameters
      operationId: SystemEvents
      parameters:
      - description: start streaming events from this time
        in: query
        name: since
        schema:
          type: string
      - description: stop streaming events later than this
        in: query
        name: until
        schema:
          type: string
      - description: "JSON encoded map[string][]string of constraints"
        in: query
        name: filters
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: returns a string of json data describing an event
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Internal server error
      summary: Get events
      tags:
      - system (compat)
      x-accepts:
      - application/json
  /exec/{id}/json:
    get:
      description: Return low-level information about an exec instance.
      operationId: ExecInspect
      parameters:
      - description: Exec instance ID
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InspectExecSession"
          description: Exec Session Inspect
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: No such exec instance
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Internal server error
      summary: Inspect an exec instance
      tags:
      - exec (compat)
      x-accepts:
      - application/json
  /exec/{id}/resize:
    post:
      description: |
        Resize the TTY session used by an exec instance. This endpoint only works if tty was specified as part of creating and starting the exec instance.
      operationId: ExecResize
      parameters:
      - description: Exec instance ID
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: Height of the TTY session in characters
        in: query
        name: h
        schema:
          type: integer
      - description: Width of the TTY session in characters
        in: query
        name: w
        schema:
          type: integer
      - description: Ignore containers not running errors
        in: query
        name: running
        schema:
          type: boolean
      responses:
        "201":
          content: {}
          description: no error
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: No such exec instance
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Internal server error
      summary: Resize an exec instance
      tags:
      - exec (compat)
      x-accepts:
      - application/json
  /exec/{id}/start:
    post:
      description: "Starts a previously set up exec instance. If detach is true, this\
        \ endpoint returns immediately after starting the command. Otherwise, it sets\
        \ up an interactive session with the command."
      operationId: ExecStart
      parameters:
      - description: Exec instance ID
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ExecStart_request"
          application/x-tar:
            schema:
              $ref: "#/components/schemas/ExecStart_request"
        description: Attributes for start
        required: false
      responses:
        "200":
          content: {}
          description: no error
        "404":
          content:
            application/octet-stream:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: No such exec instance
        "409":
          content: {}
          description: container is not running
        "500":
          content:
            application/octet-stream:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Internal server error
      summary: Start an exec instance
      tags:
      - exec (compat)
      x-codegen-request-body-name: control
      x-content-type: application/json
      x-accepts:
      - application/octet-stream
  /images/{name}:
    delete:
      description: Delete an image from local storage
      operationId: ImageDelete
      parameters:
      - description: name or ID of image to delete
        in: path
        name: name
        required: true
        schema:
          type: string
      - description: remove the image even if used by containers or has other tags
        in: query
        name: force
        schema:
          type: boolean
      - description: do not remove dangling parent images
        in: query
        name: noprune
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/ImageDelete_200_response_inner"
                type: array
          description: Image Delete
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: No such image
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Conflict error in operation
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Internal server error
      summary: Remove Image
      tags:
      - images (compat)
      x-accepts:
      - application/json
  /images/{name}/get:
    get:
      description: Export an image in tarball format
      operationId: ImageGet
      parameters:
      - description: the name or ID of the container
        in: path
        name: name
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/x-tar:
              schema:
                format: binary
                type: string
          description: no error
        "500":
          content:
            application/x-tar:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Internal server error
      summary: Export an image
      tags:
      - images (compat)
      x-accepts:
      - application/x-tar
  /images/{name}/history:
    get:
      description: Return parent layers of an image.
      operationId: ImageHistory
      parameters:
      - description: the name or ID of the container
        in: path
        name: name
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HistoryResponse"
          description: Image History
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: No such image
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Internal server error
      summary: History of an image
      tags:
      - images (compat)
      x-accepts:
      - application/json
  /images/{name}/json:
    get:
      description: Return low-level information about an image.
      operationId: ImageInspect
      parameters:
      - description: the name or ID of the container
        in: path
        name: name
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ImageInspect"
          description: Image Inspect
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: No such image
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Internal server error
      summary: Inspect an image
      tags:
      - images (compat)
      x-accepts:
      - application/json
  /images/{name}/push:
    post:
      description: Push an image to a container registry
      operationId: ImagePush
      parameters:
      - description: Name of image to push.
        in: path
        name: name
        required: true
        schema:
          type: string
      - description: The tag to associate with the image on the registry.
        in: query
        name: tag
        schema:
          type: string
      - description: All indicates whether to push all images related to the image
          list
        in: query
        name: all
        schema:
          type: boolean
      - description: Use compression on image.
        in: query
        name: compress
        schema:
          type: boolean
      - description: Allows for pushing the image to a different destination than
          the image refers to.
        in: query
        name: destination
        schema:
          type: string
      - description: "Manifest type (oci, v2s1, or v2s2) to use when pushing an image.\
          \ Default is manifest type of source, with fallbacks."
        in: query
        name: format
        schema:
          type: string
      - description: Require TLS verification.
        in: query
        name: tlsVerify
        schema:
          default: true
          type: boolean
      - description: A base64-encoded auth configuration.
        in: header
        name: X-Registry-Auth
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                format: binary
                type: string
          description: no error
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: No such image
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Internal server error
      summary: Push Image
      tags:
      - images (compat)
      x-accepts:
      - application/json
  /images/{name}/tag:
    post:
      description: Tag an image so that it becomes part of a repository.
      operationId: ImageTag
      parameters:
      - description: the name or ID of the container
        in: path
        name: name
        required: true
        schema:
          type: string
      - description: the repository to tag in
        in: query
        name: repo
        schema:
          type: string
      - description: the name of the new tag
        in: query
        name: tag
        schema:
          type: string
      responses:
        "201":
          content: {}
          description: no error
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Bad parameter in request
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: No such image
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Conflict error in operation
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Internal server error
      summary: Tag an image
      tags:
      - images (compat)
      x-accepts:
      - application/json
  /images/create:
    post:
      description: Create an image by either pulling it from a registry or importing
        it.
      operationId: ImageCreate
      parameters:
      - description: A base64-encoded auth configuration.
        in: header
        name: X-Registry-Auth
        schema:
          type: string
      - description: Name of the image to pull. The name may include a tag or digest.
          This parameter may only be used when pulling an image. The pull is cancelled
          if the HTTP connection is closed.
        in: query
        name: fromImage
        schema:
          type: string
      - description: Source to import. The value may be a URL from which the image
          can be retrieved or - to read the image from the request body. This parameter
          may only be used when importing an image
        in: query
        name: fromSrc
        schema:
          type: string
      - description: Repository name given to an image when it is imported. The repo
          may include a tag. This parameter may only be used when importing an image.
        in: query
        name: repo
        schema:
          type: string
      - description: "Tag or digest. If empty when pulling an image, this causes all\
          \ tags for the given image to be pulled."
        in: query
        name: tag
        schema:
          type: string
      - description: Set commit message for imported image.
        in: query
        name: message
        schema:
          type: string
      - description: "Platform in the format os[/arch[/variant]]"
        in: query
        name: platform
        schema:
          type: string
      requestBody:
        content:
          text/plain:
            schema:
              format: binary
              type: string
          application/octet-stream:
            schema:
              format: binary
              type: string
        description: Image content if fromSrc parameter was used
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                format: binary
                type: string
          description: no error
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: No such image
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Internal server error
      summary: Create an image
      tags:
      - images (compat)
      x-codegen-request-body-name: inputImage
      x-content-type: text/plain
      x-accepts:
      - application/json
  /images/get:
    get:
      description: Get a tarball containing all images and metadata for several image
        repositories
      operationId: ImageGetAll
      parameters:
      - description: one or more image names or IDs comma separated
        in: query
        name: names
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                format: binary
                type: string
          description: no error
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Internal server error
      summary: Export several images
      tags:
      - images (compat)
      x-accepts:
      - application/json
  /images/json:
    get:
      description: "Returns a list of images on the server. Note that it uses a different,\
        \ smaller representation of an image than inspecting a single image."
      operationId: ImageList
      parameters:
      - description: Show all images. Only images from a final layer (no children)
          are shown by default.
        in: query
        name: all
        schema:
          default: false
          type: boolean
      - description: |
          A JSON encoded value of the filters (a `map[string][]string`) to process on the images list. Available filters:
          - `before`=(`<image-name>[:<tag>]`,  `<image id>` or `<image@digest>`)
          - `dangling=true`
          - `label=key` or `label="key=value"` of an image label
          - `reference`=(`<image-name>[:<tag>]`)
          - `since`=(`<image-name>[:<tag>]`,  `<image id>` or `<image@digest>`)
        in: query
        name: filters
        schema:
          type: string
      - description: Not supported
        in: query
        name: digests
        schema:
          default: false
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/Summary"
                type: array
          description: Image summary for compat API
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Internal server error
      summary: List Images
      tags:
      - images (compat)
      x-accepts:
      - application/json
  /images/load:
    post:
      description: Load a set of images and tags into a repository.
      operationId: ImageLoad
      parameters:
      - description: not supported
        in: query
        name: quiet
        schema:
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              type: string
          application/x-tar:
            schema:
              type: string
        description: tarball of container image
        required: false
      responses:
        "200":
          content: {}
          description: no error
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Internal server error
      summary: Import image
      tags:
      - images (compat)
      x-codegen-request-body-name: request
      x-content-type: application/json
      x-accepts:
      - application/json
  /images/prune:
    post:
      description: Remove images from local storage that are not being used by a container
      operationId: ImagePrune
      parameters:
      - description: |
          filters to apply to image pruning, encoded as JSON (map[string][]string). Available filters:
            - `dangling=<boolean>` When set to `true` (or `1`), prune only
               unused *and* untagged images. When set to `false`
               (or `0`), all unused images are pruned.
            - `until=<string>` Prune images created before this timestamp. The `<timestamp>` can be Unix timestamps, date formatted timestamps, or Go duration strings (e.g. `10m`, `1h30m`) computed relative to the daemon machine’s time.
            - `label` (`label=<key>`, `label=<key>=<value>`, `label!=<key>`, or `label!=<key>=<value>`) Prune images with (or without, in case `label!=...` is used) the specified labels.
        in: query
        name: filters
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/ImageDelete_200_response_inner"
                type: array
          description: Image Delete
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Internal server error
      summary: Prune unused images
      tags:
      - images (compat)
      x-accepts:
      - application/json
  /images/search:
    get:
      description: Search registries for an image
      operationId: ImageSearch
      parameters:
      - description: term to search
        in: query
        name: term
        schema:
          type: string
      - description: maximum number of results
        in: query
        name: limit
        schema:
          default: 25
          type: integer
      - description: |
          A JSON encoded value of the filters (a `map[string][]string`) to process on the images list. Available filters:
          - `is-automated=(true|false)`
          - `is-official=(true|false)`
          - `stars=<number>` Matches images that have at least 'number' stars.
        in: query
        name: filters
        schema:
          type: string
      - description: Require HTTPS and verify signatures when contacting registries.
        in: query
        name: tlsVerify
        schema:
          default: true
          type: boolean
      - description: list the available tags in the repository
        in: query
        name: listTags
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ImageSearch_200_response"
          description: Registry Search
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Bad parameter in request
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Internal server error
      summary: Search images
      tags:
      - images (compat)
      x-accepts:
      - application/json
  /info:
    get:
      description: Returns information on the system and libpod configuration
      operationId: SystemInfo
      responses:
        "200":
          content: {}
          description: to be determined
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Internal server error
      summary: Get info
      tags:
      - system (compat)
      x-accepts:
      - application/json
  /libpod/_ping:
    get:
      description: |
        Return protocol information in response headers.
        `HEAD /libpod/_ping` is also supported.
        `/_ping` is available for compatibility with other engines.
        The '_ping' endpoints are not versioned.
      operationId: SystemPing
      responses:
        "200":
          content:
            text/plain:
              schema:
                description: OK
                example: OK
                type: string
          description: Success
          headers:
            Docker-Experimental:
              description: "If the server is running with experimental mode enabled,\
                \ always true"
              schema:
                type: boolean
            Cache-Control:
              description: always no-cache
              schema:
                type: string
            Libpod-Buildah-Version:
              description: |
                Default version of libpod image builder.
                  Available if service is backed by Podman, therefore may be used to
                  determine if talking to Podman engine or another engine
              schema:
                type: string
            Libpod-API-Version:
              description: |
                Max Podman API Version the server supports.
                Available if service is backed by Podman, therefore may be used to
                determine if talking to Podman engine or another engine
              schema:
                type: string
            BuildKit-Version:
              description: Default version of docker image builder
              schema:
                type: string
            Pragma:
              description: always no-cache
              schema:
                type: string
            API-Version:
              description: Max compatibility API Version the server supports
              schema:
                type: string
        "500":
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Internal server error
      summary: Ping service
      tags:
      - system (compat)
      - system
      x-accepts:
      - text/plain
  /libpod/build:
    post:
      description: Build an image from the given Dockerfile(s)
      operationId: ImageBuildLibpod
      parameters:
      - description: |
          Path within the build context to the `Dockerfile`.
          This is ignored if remote is specified and points to an external `Dockerfile`.
        in: query
        name: dockerfile
        schema:
          default: Dockerfile
          type: string
      - description: "A name and optional tag to apply to the image in the `name:tag`\
          \ format.  If you omit the tag, the default latest value is assumed. You\
          \ can provide several t parameters."
        in: query
        name: t
        schema:
          default: latest
          type: string
      - description: |
          Instead of building for a set of platforms specified using the platform option, inspect the build's base images,
          and build for all of the platforms that are available.  Stages that use *scratch* as a starting point can not be inspected,
          so at least one non-*scratch* stage must be present for detection to work usefully.
        in: query
        name: allplatforms
        schema:
          default: false
          type: boolean
      - description: |
          TBD Extra hosts to add to /etc/hosts
          (As of version 1.xx)
        in: query
        name: extrahosts
        schema:
          type: string
      - description: |
          A Git repository URI or HTTP/HTTPS context URI.
          If the URI points to a single text file, the file’s contents are placed
          into a file called Dockerfile and the image is built from that file. If
          the URI points to a tarball, the file is downloaded by the daemon and the
          contents therein used as the context for the build. If the URI points to a
          tarball and the dockerfile parameter is also specified, there must be a file
          with the corresponding path inside the tarball.
          (As of version 1.xx)
        in: query
        name: remote
        schema:
          type: string
      - description: |
          Suppress verbose build output
        in: query
        name: q
        schema:
          default: false
          type: boolean
      - description: |
          Contents of base images to be modified on ADD or COPY only
          (As of Podman version v5.2)
        in: query
        name: compatvolumes
        schema:
          default: false
          type: boolean
      - description: |
          Do not use the cache when building the image
          (As of version 1.xx)
        in: query
        name: nocache
        schema:
          default: false
          type: boolean
      - description: |
          JSON array of images used to build cache resolution
          (As of version 1.xx)
        in: query
        name: cachefrom
        schema:
          type: string
      - description: |
          Attempt to pull the image even if an older image exists locally
          (As of version 1.xx)
        in: query
        name: pull
        schema:
          default: false
          type: boolean
      - description: |
          Remove intermediate containers after a successful build
          (As of version 1.xx)
        in: query
        name: rm
        schema:
          default: true
          type: boolean
      - description: |
          Always remove intermediate containers, even upon failure
          (As of version 1.xx)
        in: query
        name: forcerm
        schema:
          default: false
          type: boolean
      - description: |
          Memory is the upper limit (in bytes) on how much memory running containers can use
          (As of version 1.xx)
        in: query
        name: memory
        schema:
          type: integer
      - description: |
          MemorySwap limits the amount of memory and swap together
          (As of version 1.xx)
        in: query
        name: memswap
        schema:
          type: integer
      - description: |
          CPUShares (relative weight
          (As of version 1.xx)
        in: query
        name: cpushares
        schema:
          type: integer
      - description: |
          CPUSetCPUs in which to allow execution (0-3, 0,1)
          (As of version 1.xx)
        in: query
        name: cpusetcpus
        schema:
          type: string
      - description: |
          CPUPeriod limits the CPU CFS (Completely Fair Scheduler) period
          (As of version 1.xx)
        in: query
        name: cpuperiod
        schema:
          type: integer
      - description: |
          CPUQuota limits the CPU CFS (Completely Fair Scheduler) quota
          (As of version 1.xx)
        in: query
        name: cpuquota
        schema:
          type: integer
      - description: |
          JSON map of string pairs denoting build-time variables.
          For example, the build argument `Foo` with the value of `bar` would be encoded in JSON as `["Foo":"bar"]`.

          For example, buildargs={"Foo":"bar"}.

          Note(s):
          * This should not be used to pass secrets.
          * The value of buildargs should be URI component encoded before being passed to the API.

          (As of version 1.xx)
        in: query
        name: buildargs
        schema:
          type: string
      - description: |
          ShmSize is the "size" value to use when mounting an shmfs on the container's /dev/shm directory.
          Default is 64MB
          (As of version 1.xx)
        in: query
        name: shmsize
        schema:
          default: 67108864
          type: integer
      - description: |
          Silently ignored.
          Squash the resulting images layers into a single layer
          (As of version 1.xx)
        in: query
        name: squash
        schema:
          default: false
          type: boolean
      - description: |
          JSON map of key, value pairs to set as labels on the new image
          (As of version 1.xx)
        in: query
        name: labels
        schema:
          type: string
      - description: Add an intermediate image *label* (e.g. label=*value*) to the
          intermediate image metadata.
        explode: false
        in: query
        name: layerLabel
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |
          Cache intermediate layers during build.
          (As of version 1.xx)
        in: query
        name: layers
        schema:
          default: true
          type: boolean
      - description: |
          Sets the networking mode for the run commands during build.
          Supported standard values are:
            * `bridge` limited to containers within a single host, port mapping required for external access
            * `host` no isolation between host and containers on this network
            * `none` disable all networking for this container
            * container:<nameOrID> share networking with given container
            ---All other values are assumed to be a custom network's name
          (As of version 1.xx)
        in: query
        name: networkmode
        schema:
          default: bridge
          type: string
      - description: |
          Platform format os[/arch[/variant]]
          (As of version 1.xx)
        in: query
        name: platform
        schema:
          type: string
      - description: |
          Target build stage
          (As of version 1.xx)
        in: query
        name: target
        schema:
          type: string
      - description: |
          output configuration TBD
          (As of version 1.xx)
        in: query
        name: outputs
        schema:
          type: string
      - description: |
          Inject http proxy environment variables into container
          (As of version 2.0.0)
        in: query
        name: httpproxy
        schema:
          type: boolean
      - description: Unset environment variables from the final image.
        explode: false
        in: query
        name: unsetenv
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Unset the image label, causing the label not to be inherited\
          \ from the base image."
        explode: false
        in: query
        name: unsetlabel
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Extra volumes that should be mounted in the build container.
        explode: false
        in: query
        name: volume
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ImageBuildLibpod_200_response"
          description: OK (As of version 1.xx)
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Bad parameter in request
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Internal server error
      summary: Create image
      tags:
      - images
      x-accepts:
      - application/json
  /libpod/commit:
    post:
      description: Create a new image from a container
      operationId: ImageCommitLibpod
      parameters:
      - description: the name or ID of a container
        in: query
        name: container
        required: true
        schema:
          type: string
      - description: author of the image
        in: query
        name: author
        schema:
          type: string
      - description: instructions to apply while committing in Dockerfile format (i.e.
          "CMD=/bin/foo")
        explode: false
        in: query
        name: changes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: commit message
        in: query
        name: comment
        schema:
          type: string
      - description: format of the image manifest and metadata (default "oci")
        in: query
        name: format
        schema:
          type: string
      - description: pause the container before committing it
        in: query
        name: pause
        schema:
          type: boolean
      - description: squash the container before committing it
        in: query
        name: squash
        schema:
          type: boolean
      - description: the repository name for the created image
        in: query
        name: repo
        schema:
          type: string
      - description: output from commit process
        in: query
        name: stream
        schema:
          type: boolean
      - description: tag name for the created image
        in: query
        name: tag
        schema:
          type: string
      responses:
        "201":
          content: {}
          description: no error
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: No such image
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Internal server error
      summary: Commit
      tags:
      - containers
      x-accepts:
      - application/json
  /libpod/containers/{name}:
    delete:
      description: Delete container
      operationId: ContainerDeleteLibpod
      parameters:
      - description: the name or ID of the container
        in: path
        name: name
        required: true
        schema:
          type: string
      - description: additionally remove containers that depend on the container to
          be removed
        in: query
        name: depend
        schema:
          type: boolean
      - description: force stop container if running
        in: query
        name: force
        schema:
          type: boolean
      - description: ignore errors when the container to be removed does not existxo
        in: query
        name: ignore
        schema:
          type: boolean
      - description: number of seconds to wait before killing container when force
          removing
        in: query
        name: timeout
        schema:
          default: 10
          type: integer
      - description: delete volumes
        in: query
        name: v
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/LibpodContainersRmReport"
                type: array
          description: Remove Containers
        "204":
          content: {}
          description: no error
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Bad parameter in request
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: No such container
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Conflict error in operation
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Internal server error
      summary: Delete container
      tags:
      - containers
      x-accepts:
      - application/json
  /libpod/containers/{name}/archive:
    get:
      description: Copy a tar archive of files from a container
      operationId: ContainerArchiveLibpod
      parameters:
      - description: container name or id
        in: path
        name: name
        required: true
        schema:
          type: string
      - description: Path to a directory in the container to extract
        in: query
        name: path
        required: true
        schema:
          type: string
      - description: "JSON encoded map[string]string to translate paths"
        in: query
        name: rename
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                format: binary
                type: string
          description: no error
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Bad parameter in request
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: No such container
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Internal server error
      summary: Copy files from a container
      tags:
      - containers (compat)
      x-accepts:
      - application/json
    put:
      description: Copy a tar archive of files into a container
      operationId: PutContainerArchiveLibpod
      parameters:
      - description: container name or id
        in: path
        name: name
        required: true
        schema:
          type: string
      - description: Path to a directory in the container to extract
        in: query
        name: path
        required: true
        schema:
          type: string
      - description: pause the container while copying (defaults to true)
        in: query
        name: pause
        schema:
          default: true
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              type: string
          application/x-tar:
            schema:
              type: string
        description: tarfile of files to copy into the container
        required: false
      responses:
        "200":
          content: {}
          description: no error
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Bad parameter in request
        "403":
          content: {}
          description: the container rootfs is read-only
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: No such container
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Internal server error
      summary: Copy files into a container
      tags:
      - containers
      x-codegen-request-body-name: request
      x-content-type: application/json
      x-accepts:
      - application/json
  /libpod/containers/{name}/attach:
    post:
      description: |
        Attach to a container to read its output or send it input. You can attach
        to the same container multiple times and you can reattach to containers
        that have been detached.

        ### Hijacking

        This endpoint hijacks the HTTP connection to transport `stdin`, `stdout`,
        and `stderr` on the same socket.

        This is the response from the service for an attach request:

        ```
        HTTP/1.1 200 OK
        Content-Type: application/vnd.docker.raw-stream

        [STREAM]
        ```

        After the headers and two new lines, the TCP connection can now be used
        for raw, bidirectional communication between the client and server.

        To inform potential proxies about connection hijacking, the client
        can also optionally send connection upgrade headers.

        For example, the client sends this request to upgrade the connection:

        ```
        POST /v4.6.0/libpod/containers/16253994b7c4/attach?stream=1&stdout=1 HTTP/1.1
        Upgrade: tcp
        Connection: Upgrade
        ```

        The service will respond with a `101 UPGRADED` response, and will
        similarly follow with the raw stream:

        ```
        HTTP/1.1 101 UPGRADED
        Content-Type: application/vnd.docker.raw-stream
        Connection: Upgrade
        Upgrade: tcp

        [STREAM]
        ```

        ### Stream format

        When the TTY setting is disabled for the container,
        the HTTP Content-Type header is set to application/vnd.docker.multiplexed-stream
        (starting with v4.7.0, previously application/vnd.docker.raw-stream was always used)
        and the stream over the hijacked connected is multiplexed to separate out
        `stdout` and `stderr`. The stream consists of a series of frames, each
        containing a header and a payload.

        The header contains the information about the output stream type and the size of
        the payload.
        It is encoded on the first eight bytes like this:

        ```go
        header := [8]byte{STREAM_TYPE, 0, 0, 0, SIZE1, SIZE2, SIZE3, SIZE4}
        ```

        `STREAM_TYPE` can be:

        - 0: `stdin` (is written on `stdout`)
        - 1: `stdout`
        - 2: `stderr`

        `SIZE1, SIZE2, SIZE3, SIZE4` are the four bytes of the `uint32` size
        encoded as big endian.

        Following the header is the payload, which contains the specified number of
        bytes as written in the size.

        The simplest way to implement this protocol is the following:

        1. Read 8 bytes.
        2. Choose `stdout` or `stderr` depending on the first byte.
        3. Extract the frame size from the last four bytes.
        4. Read the extracted size and output it on the correct output.
        5. Goto 1.

        ### Stream format when using a TTY

        When the TTY setting is enabled for the container,
        the stream is not multiplexed. The data exchanged over the hijacked
        connection is simply the raw data from the process PTY and client's
        `stdin`.
      operationId: ContainerAttachLibpod
      parameters:
      - description: the name or ID of the container
        in: path
        name: name
        required: true
        schema:
          type: string
      - description: keys to use for detaching from the container
        in: query
        name: detachKeys
        schema:
          type: string
      - description: Stream all logs from the container across the connection. Happens
          before streaming attach (if requested). At least one of logs or stream must
          be set
        in: query
        name: logs
        schema:
          type: boolean
      - description: "Attach to the container. If unset, and logs is set, only the\
          \ container's logs will be sent. At least one of stream or logs must be\
          \ set"
        in: query
        name: stream
        schema:
          default: true
          type: boolean
      - description: Attach to container STDOUT
        in: query
        name: stdout
        schema:
          type: boolean
      - description: Attach to container STDERR
        in: query
        name: stderr
        schema:
          type: boolean
      - description: Attach to container STDIN
        in: query
        name: stdin
        schema:
          type: boolean
      responses:
        "101":
          content: {}
          description: "No error, connection has been hijacked for transporting streams."
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Bad parameter in request
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: No such container
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Internal server error
      summary: Attach to a container
      tags:
      - containers
      x-accepts:
      - application/json
  /libpod/containers/{name}/changes:
    get:
      description: |
        Returns which files in a container's filesystem have been added, deleted, or modified. The Kind of modification can be one of:

        0: Modified
        1: Added
        2: Deleted
      operationId: ContainerChangesLibpod
      parameters:
      - description: the name or id of the container
        in: path
        name: name
        required: true
        schema:
          type: string
      - description: specify a second layer which is used to compare against it instead
          of the parent layer
        in: query
        name: parent
        schema:
          type: string
      - description: "select what you want to match, default is all"
        in: query
        name: diffType
        schema:
          enum:
          - all
          - container
          - image
          type: string
      responses:
        "200":
          content: {}
          description: Array of Changes
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
            application/octet-stream:
              schema:
                $ref: "#/components/schemas/ErrorModel"
            text/plain:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: No such container
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
            application/octet-stream:
              schema:
                $ref: "#/components/schemas/ErrorModel"
            text/plain:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Internal server error
      summary: "Report on changes to container's filesystem; adds, deletes or modifications."
      tags:
      - containers
      - containers (compat)
      x-accepts:
      - application/json
      - application/octet-stream
      - text/plain
  /libpod/containers/{name}/checkpoint:
    post:
      operationId: ContainerCheckpointLibpod
      parameters:
      - description: the name or ID of the container
        in: path
        name: name
        required: true
        schema:
          type: string
      - description: keep all temporary checkpoint files
        in: query
        name: keep
        schema:
          type: boolean
      - description: leave the container running after writing checkpoint to disk
        in: query
        name: leaveRunning
        schema:
          type: boolean
      - description: checkpoint a container with established TCP connections
        in: query
        name: tcpEstablished
        schema:
          type: boolean
      - description: export the checkpoint image to a tar.gz
        in: query
        name: export
        schema:
          type: boolean
      - description: do not include root file-system changes when exporting. can only
          be used with export
        in: query
        name: ignoreRootFS
        schema:
          type: boolean
      - description: do not include associated volumes. can only be used with export
        in: query
        name: ignoreVolumes
        schema:
          type: boolean
      - description: "dump the container's memory information only, leaving the container\
          \ running. only works on runc 1.0-rc or higher"
        in: query
        name: preCheckpoint
        schema:
          type: boolean
      - description: check out the container with previous criu image files in pre-dump.
          only works on runc 1.0-rc or higher
        in: query
        name: withPrevious
        schema:
          type: boolean
      - description: checkpoint a container with filelocks
        in: query
        name: fileLocks
        schema:
          type: boolean
      - description: add checkpoint statistics to the returned CheckpointReport
        in: query
        name: printStats
        schema:
          type: boolean
      responses:
        "200":
          content: {}
          description: tarball is returned in body if exported
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: No such container
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Internal server error
      summary: Checkpoint a container
      tags:
      - containers
      x-accepts:
      - application/json
  /libpod/containers/{name}/exec:
    post:
      description: Create an exec session to run a command inside a running container.
        Exec sessions will be automatically removed 5 minutes after they exit.
      operationId: ContainerExecLibpod
      parameters:
      - description: name of container
        in: path
        name: name
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ContainerExec_request"
          application/x-tar:
            schema:
              $ref: "#/components/schemas/ContainerExec_request"
        description: Attributes for create
        required: false
      responses:
        "201":
          content: {}
          description: no error
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: No such container
        "409":
          content: {}
          description: container is paused
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Internal server error
      summary: Create an exec instance
      tags:
      - exec
      x-codegen-request-body-name: control
      x-content-type: application/json
      x-accepts:
      - application/json
  /libpod/containers/{name}/exists:
    get:
      description: Quick way to determine if a container exists by name or ID
      operationId: ContainerExistsLibpod
      parameters:
      - description: the name or ID of the container
        in: path
        name: name
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: container exists
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: No such container
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Internal server error
      summary: Check if container exists
      tags:
      - containers
      x-accepts:
      - application/json
  /libpod/containers/{name}/export:
    get:
      description: Export the contents of a container as a tarball.
      operationId: ContainerExportLibpod
      parameters:
      - description: the name or ID of the container
        in: path
        name: name
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: tarball is returned in body
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: No such container
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Internal server error
      summary: Export a container
      tags:
      - containers
      x-accepts:
      - application/json
  /libpod/containers/{name}/healthcheck:
    get:
      description: Execute the defined healthcheck and return information about the
        results
      operationId: ContainerHealthcheckLibpod
      parameters:
      - description: the name or ID of the container
        in: path
        name: name
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HealthCheckResults"
          description: Healthcheck Results
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: No such container
        "409":
          content: {}
          description: container has no healthcheck or is not running
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Internal server error
      summary: Run a container's healthcheck
      tags:
      - containers
      x-accepts:
      - application/json
  /libpod/containers/{name}/init:
    post:
      description: Performs all tasks necessary for initializing the container but
        does not start the container.
      operationId: ContainerInitLibpod
      parameters:
      - description: the name or ID of the container
        in: path
        name: name
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: no error
        "304":
          content: {}
          description: container already initialized
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: No such container
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Internal server error
      summary: Initialize a container
      tags:
      - containers
      x-accepts:
      - application/json
  /libpod/containers/{name}/json:
    get:
      description: Return low-level information about a container.
      operationId: ContainerInspectLibpod
      parameters:
      - description: the name or ID of the container
        in: path
        name: name
        required: true
        schema:
          type: string
      - description: display filesystem usage
        in: query
        name: size
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InspectContainerData"
          description: Inspect container
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: No such container
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Internal server error
      summary: Inspect container
      tags:
      - containers
      x-accepts:
      - application/json
  /libpod/containers/{name}/kill:
    post:
      description: "send a signal to a container, defaults to killing the container"
      operationId: ContainerKillLibpod
      parameters:
      - description: the name or ID of the container
        in: path
        name: name
        required: true
        schema:
          type: string
      - description: "signal to be sent to container, either by integer or SIG_ name"
        in: query
        name: signal
        schema:
          default: SIGKILL
          type: string
      responses:
        "204":
          content: {}
          description: no error
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: No such container
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Conflict error in operation
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Internal server error
      summary: Kill container
      tags:
      - containers
      x-accepts:
      - application/json
  /libpod/containers/{name}/logs:
    get:
      description: |
        Get stdout and stderr logs from a container.

        The stream format is the same as described in the attach endpoint.
      operationId: ContainerLogsLibpod
      parameters:
      - description: the name or ID of the container
        in: path
        name: name
        required: true
        schema:
          type: string
      - description: Keep connection after returning logs.
        in: query
        name: follow
        schema:
          type: boolean
      - description: Return logs from stdout
        in: query
        name: stdout
        schema:
          type: boolean
      - description: Return logs from stderr
        in: query
        name: stderr
        schema:
          type: boolean
      - description: "Only return logs since this time, as a UNIX timestamp"
        in: query
        name: since
        schema:
          type: string
      - description: "Only return logs before this time, as a UNIX timestamp"
        in: query
        name: until
        schema:
          type: string
      - description: Add timestamps to every log line
        in: query
        name: timestamps
        schema:
          default: false
          type: boolean
      - description: Only return this number of log lines from the end of the logs
        in: query
        name: tail
        schema:
          default: all
          type: string
      responses:
        "200":
          content: {}
          description: logs returned as a stream in response body.
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: No such container
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Internal server error
      summary: Get container logs
      tags:
      - containers
      x-accepts:
      - application/json
  /libpod/containers/{name}/mount:
    post:
      description: Mount a container to the filesystem
      operationId: ContainerMountLibpod
      parameters:
      - description: the name or ID of the container
        in: path
        name: name
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                description: id
                example: /var/lib/containers/storage/overlay/f3f693bd88872a1e3193f4ebb925f4c282e8e73aadb8ab3e7492754dda3a02a4/merged
                type: string
          description: mounted container
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: No such container
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Internal server error
      summary: Mount a container
      tags:
      - containers
      x-accepts:
      - application/json
  /libpod/containers/{name}/pause:
    post:
      description: Use the cgroups freezer to suspend all processes in a container.
      operationId: ContainerPauseLibpod
      parameters:
      - description: the name or ID of the container
        in: path
        name: name
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: no error
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: No such container
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Internal server error
      summary: Pause a container
      tags:
      - containers
      x-accepts:
      - application/json
  /libpod/containers/{name}/rename:
    post:
      description: Change the name of an existing container.
      operationId: ContainerRenameLibpod
      parameters:
      - description: Full or partial ID or full name of the container to rename
        in: path
        name: name
        required: true
        schema:
          type: string
      - description: New name for the container
        in: query
        name: name
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: no error
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: No such container
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Conflict error in operation
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Internal server error
      summary: Rename an existing container
      tags:
      - containers
      x-accepts:
      - application/json
  /libpod/containers/{name}/resize:
    post:
      description: Resize the terminal attached to a container (for use with Attach).
      operationId: ContainerResizeLibpod
      parameters:
      - description: the name or ID of the container
        in: path
        name: name
        required: true
        schema:
          type: string
      - description: "Height to set for the terminal, in characters"
        in: query
        name: h
        schema:
          type: integer
      - description: "Width to set for the terminal, in characters"
        in: query
        name: w
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: Success
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: No such container
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Conflict error in operation
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Internal server error
      summary: Resize a container's TTY
      tags:
      - containers
      x-accepts:
      - application/json
  /libpod/containers/{name}/restart:
    post:
      operationId: ContainerRestartLibpod
      parameters:
      - description: the name or ID of the container
        in: path
        name: name
        required: true
        schema:
          type: string
      - description: number of seconds to wait before killing container
        in: query
        name: t
        schema:
          default: 10
          type: integer
      responses:
        "204":
          content: {}
          description: no error
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: No such container
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Internal server error
      summary: Restart a container
      tags:
      - containers
      x-accepts:
      - application/json
  /libpod/containers/{name}/restore:
    post:
      description: Restore a container from a checkpoint.
      operationId: ContainerRestoreLibpod
      parameters:
      - description: the name or id of the container
        in: path
        name: name
        required: true
        schema:
          type: string
      - description: the name of the container when restored from a tar. can only
          be used with import
        in: query
        name: name
        schema:
          type: string
      - description: keep all temporary checkpoint files
        in: query
        name: keep
        schema:
          type: boolean
      - description: checkpoint a container with established TCP connections
        in: query
        name: tcpEstablished
        schema:
          type: boolean
      - description: import the restore from a checkpoint tar.gz
        in: query
        name: import
        schema:
          type: boolean
      - description: do not include root file-system changes when exporting. can only
          be used with import
        in: query
        name: ignoreRootFS
        schema:
          type: boolean
      - description: do not restore associated volumes. can only be used with import
        in: query
        name: ignoreVolumes
        schema:
          type: boolean
      - description: ignore IP address if set statically
        in: query
        name: ignoreStaticIP
        schema:
          type: boolean
      - description: ignore MAC address if set statically
        in: query
        name: ignoreStaticMAC
        schema:
          type: boolean
      - description: restore a container with file locks
        in: query
        name: fileLocks
        schema:
          type: boolean
      - description: add restore statistics to the returned RestoreReport
        in: query
        name: printStats
        schema:
          type: boolean
      - description: pod to restore into
        in: query
        name: pod
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: tarball is returned in body if exported
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: No such container
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Internal server error
      summary: Restore a container
      tags:
      - containers
      x-accepts:
      - application/json
  /libpod/containers/{name}/start:
    post:
      operationId: ContainerStartLibpod
      parameters:
      - description: the name or ID of the container
        in: path
        name: name
        required: true
        schema:
          type: string
      - description: "Override the key sequence for detaching a container. Format\
          \ is a single character [a-Z] or ctrl-<value> where <value> is one of: a-z,\
          \ @, ^, [, , or _."
        in: query
        name: detachKeys
        schema:
          default: "ctrl-p,ctrl-q"
          type: string
      responses:
        "204":
          content: {}
          description: no error
        "304":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Container already started
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: No such container
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Internal server error
      summary: Start a container
      tags:
      - containers
      x-accepts:
      - application/json
  /libpod/containers/{name}/stats:
    get:
      description: DEPRECATED. This endpoint will be removed with the next major release.
        Please use /libpod/containers/stats instead.
      operationId: ContainerStatsLibpod
      parameters:
      - description: the name or ID of the container
        in: path
        name: name
        required: true
        schema:
          type: string
      - description: Stream the output
        in: query
        name: stream
        schema:
          default: true
          type: boolean
      responses:
        "200":
          content: {}
          description: no error
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: No such container
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Conflict error in operation
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Internal server error
      summary: Get stats for a container
      tags:
      - containers
      x-accepts:
      - application/json
  /libpod/containers/{name}/stop:
    post:
      operationId: ContainerStopLibpod
      parameters:
      - description: the name or ID of the container
        in: path
        name: name
        required: true
        schema:
          type: string
      - description: number of seconds to wait before killing container
        in: query
        name: timeout
        schema:
          default: 10
          type: integer
      - description: do not return error if container is already stopped
        in: query
        name: Ignore
        schema:
          default: false
          type: boolean
      responses:
        "204":
          content: {}
          description: no error
        "304":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Container already stopped
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: No such container
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Internal server error
      summary: Stop a container
      tags:
      - containers
      x-accepts:
      - application/json
  /libpod/containers/{name}/top:
    get:
      description: List processes running inside a container
      operationId: ContainerTopLibpod
      parameters:
      - description: Name of container to query for processes (As of version 1.xx)
        in: path
        name: name
        required: true
        schema:
          type: string
      - description: "when true, repeatedly stream the latest output (As of version\
          \ 4.0)"
        in: query
        name: stream
        schema:
          type: boolean
      - description: "if streaming, delay in seconds between updates. Must be >1.\
          \ (As of version 4.0)"
        in: query
        name: delay
        schema:
          default: 5
          type: integer
      - description: |
          arguments to pass to ps such as aux.
        explode: false
        in: query
        name: ps_args
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ContainerTopOKBody"
          description: List processes in container
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: No such container
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Internal server error
      summary: List processes
      tags:
      - containers
      x-accepts:
      - application/json
  /libpod/containers/{name}/unmount:
    post:
      description: Unmount a container from the filesystem
      operationId: ContainerUnmountLibpod
      parameters:
      - description: the name or ID of the container
        in: path
        name: name
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: ok
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: No such container
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Internal server error
      summary: Unmount a container
      tags:
      - containers
      x-accepts:
      - application/json
  /libpod/containers/{name}/unpause:
    post:
      operationId: ContainerUnpauseLibpod
      parameters:
      - description: the name or ID of the container
        in: path
        name: name
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: no error
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: No such container
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Internal server error
      summary: Unpause Container
      tags:
      - containers
      x-accepts:
      - application/json
  /libpod/containers/{name}/update:
    post:
      description: Update an existing containers cgroup configuration.
      operationId: ContainerUpdateLibpod
      parameters:
      - description: Full or partial ID or full name of the container to update
        in: path
        name: name
        required: true
        schema:
          type: string
      - description: New restart policy for the container.
        in: query
        name: restartPolicy
        schema:
          type: string
      - description: New amount of retries for the container's restart policy. Only
          allowed if restartPolicy is set to on-failure
        in: query
        name: restartRetries
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateEntities"
          application/x-tar:
            schema:
              $ref: "#/components/schemas/UpdateEntities"
        description: attributes for updating the container
        required: false
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Bad parameter in request
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: No such container
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Internal server error
      summary: Update an existing containers cgroup configuration
      tags:
      - containers
      x-codegen-request-body-name: config
      x-content-type: application/json
      x-accepts:
      - application/json
  /libpod/containers/{name}/wait:
    post:
      description: Wait on a container to meet a given condition
      operationId: ContainerWaitLibpod
      parameters:
      - description: the name or ID of the container
        in: path
        name: name
        required: true
        schema:
          type: string
      - description: Conditions to wait for. If no condition provided the 'exited'
          condition is assumed.
        explode: false
        in: query
        name: condition
        schema:
          items:
            enum:
            - configured
            - created
            - exited
            - healthy
            - initialized
            - paused
            - removing
            - running
            - stopped
            - stopping
            - unhealthy
            type: string
          type: array
        style: form
      - description: Time Interval to wait before polling for completion.
        in: query
        name: interval
        schema:
          default: 250ms
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                format: int32
                type: integer
            text/plain:
              example: 137
              schema:
                format: int32
                type: integer
          description: Status code
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
            text/plain:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: No such container
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
            text/plain:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Internal server error
      summary: Wait on a container
      tags:
      - containers
      x-accepts:
      - application/json
      - text/plain
  /libpod/containers/create:
    post:
      operationId: ContainerCreateLibpod
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SpecGenerator"
          application/x-tar:
            schema:
              $ref: "#/components/schemas/SpecGenerator"
        description: attributes for creating a container
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ContainerCreateResponse"
          description: Create container
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Bad parameter in request
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: No such container
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Conflict error in operation
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Internal server error
      summary: Create a container
      tags:
      - containers
      x-codegen-request-body-name: create
      x-content-type: application/json
      x-accepts:
      - application/json
  /libpod/containers/json:
    get:
      description: Returns a list of containers
      operationId: ContainerListLibpod
      parameters:
      - description: "Return all containers. By default, only running containers are\
          \ shown"
        in: query
        name: all
        schema:
          default: false
          type: boolean
      - description: "Return this number of most recently created containers, including\
          \ non-running ones."
        in: query
        name: limit
        schema:
          type: integer
      - description: Include namespace information
        in: query
        name: namespace
        schema:
          default: false
          type: boolean
      - description: Ignored. Previously included details on pod name and ID that
          are currently included by default.
        in: query
        name: pod
        schema:
          default: false
          type: boolean
      - description: Return the size of container as fields SizeRw and SizeRootFs.
        in: query
        name: size
        schema:
          default: false
          type: boolean
      - description: Sync container state with OCI runtime
        in: query
        name: sync
        schema:
          default: false
          type: boolean
      - description: |
          A JSON encoded value of the filters (a `map[string][]string`) to process on the containers list. Available filters:
          - `ancestor`=(`<image-name>[:<tag>]`, `<image id>`, or `<image@digest>`)
          - `before`=(`<container id>` or `<container name>`)
          - `expose`=(`<port>[/<proto>]` or `<startport-endport>/[<proto>]`)
          - `exited=<int>` containers with exit code of `<int>`
          - `health`=(`starting`, `healthy`, `unhealthy` or `none`)
          - `id=<ID>` a container's ID
          - `is-task`=(`true` or `false`)
          - `label`=(`key` or `"key=value"`) of a container label
          - `name=<name>` a container's name
          - `network`=(`<network id>` or `<network name>`)
          - `pod`=(`<pod id>` or `<pod name>`)
          - `publish`=(`<port>[/<proto>]` or `<startport-endport>/[<proto>]`)
          - `since`=(`<container id>` or `<container name>`)
          - `status`=(`created`, `restarting`, `running`, `removing`, `paused`, `exited` or `dead`)
          - `volume`=(`<volume name>` or `<mount point destination>`)
        in: query
        name: filters
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/ListContainer"
                type: array
          description: List Containers
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Bad parameter in request
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Internal server error
      summary: List containers
      tags:
      - containers
      x-accepts:
      - application/json
  /libpod/containers/prune:
    post:
      description: Remove containers not in use
      operationId: ContainerPruneLibpod
      parameters:
      - description: |
          Filters to process on the prune list, encoded as JSON (a `map[string][]string`).  Available filters:
           - `until=<timestamp>` Prune containers created before this timestamp. The `<timestamp>` can be Unix timestamps, date formatted timestamps, or Go duration strings (e.g. `10m`, `1h30m`) computed relative to the daemon machine’s time.
           - `label` (`label=<key>`, `label=<key>=<value>`, `label!=<key>`, or `label!=<key>=<value>`) Prune containers with (or without, in case `label!=...` is used) the specified labels.
        in: query
        name: filters
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/ContainersPruneReportLibpod"
                type: array
          description: Prune Containers
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Internal server error
      summary: Delete stopped containers
      tags:
      - containers
      x-accepts:
      - application/json
  /libpod/containers/showmounted:
    get:
      description: Lists all mounted containers mount points
      operationId: ContainerShowMountedLibpod
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: string
                type: object
          description: mounted containers
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Internal server error
      summary: Show mounted containers
      tags:
      - containers
      x-accepts:
      - application/json
  /libpod/containers/stats:
    get:
      description: "Return a live stream of resource usage statistics of one or more\
        \ container. If no container is specified, the statistics of all containers\
        \ are returned."
      operationId: ContainersStatsAllLibpod
      parameters:
      - description: names or IDs of containers
        explode: false
        in: query
        name: containers
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Stream the output
        in: query
        name: stream
        schema:
          default: true
          type: boolean
      - description: Time in seconds between stats reports
        in: query
        name: interval
        schema:
          default: 5
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ContainerStats"
          description: Get stats for one or more containers
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: No such container
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Internal server error
      summary: Get stats for one or more containers
      tags:
      - containers
      x-accepts:
      - application/json
  /libpod/events:
    get:
      description: Returns events filtered on query parameters
      operationId: SystemEventsLibpod
      parameters:
      - description: start streaming events from this time
        in: query
        name: since
        schema:
          type: string
      - description: stop streaming events later than this
        in: query
        name: until
        schema:
          type: string
      - description: "JSON encoded map[string][]string of constraints"
        in: query
        name: filters
        schema:
          type: string
      - description: "when false, do not follow events"
        in: query
        name: stream
        schema:
          default: true
          type: boolean
      responses:
        "200":
          content: {}
          description: returns a string of json data describing an event
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Internal server error
      summary: Get events
      tags:
      - system
      x-accepts:
      - application/json
  /libpod/exec/{id}/json:
    get:
      description: Return low-level information about an exec instance.
      operationId: ExecInspectLibpod
      parameters:
      - description: Exec instance ID
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: no error
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: No such exec instance
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Internal server error
      summary: Inspect an exec instance
      tags:
      - exec
      x-accepts:
      - application/json
  /libpod/exec/{id}/resize:
    post:
      description: |
        Resize the TTY session used by an exec instance. This endpoint only works if tty was specified as part of creating and starting the exec instance.
      operationId: ExecResizeLibpod
      parameters:
      - description: Exec instance ID
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: Height of the TTY session in characters
        in: query
        name: h
        schema:
          type: integer
      - description: Width of the TTY session in characters
        in: query
        name: w
        schema:
          type: integer
      responses:
        "201":
          content: {}
          description: no error
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: No such exec instance
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Internal server error
      summary: Resize an exec instance
      tags:
      - exec
      x-accepts:
      - application/json
  /libpod/exec/{id}/start:
    post:
      description: |
        Starts a previously set up exec instance. If detach is true, this endpoint returns immediately after starting the command.
        Otherwise, it sets up an interactive session with the command. The stream format is the same as the attach endpoint.
      operationId: ExecStartLibpod
      parameters:
      - description: Exec instance ID
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ExecStartLibpod_request"
          application/x-tar:
            schema:
              $ref: "#/components/schemas/ExecStartLibpod_request"
        description: Attributes for start
        required: false
      responses:
        "200":
          content: {}
          description: no error
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: No such exec instance
        "409":
          content: {}
          description: container is not running.
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Internal server error
      summary: Start an exec instance
      tags:
      - exec
      x-codegen-request-body-name: control
      x-content-type: application/json
      x-accepts:
      - application/json
  /libpod/generate/{name}/systemd:
    get:
      description: Generate Systemd Units based on a pod or container.
      operationId: GenerateSystemdLibpod
      parameters:
      - description: Name or ID of the container or pod.
        in: path
        name: name
        required: true
        schema:
          type: string
      - description: Use container/pod names instead of IDs.
        in: query
        name: useName
        schema:
          default: false
          type: boolean
      - description: Create a new container instead of starting an existing one.
        in: query
        name: new
        schema:
          default: false
          type: boolean
      - description: Do not generate the header including the Podman version and the
          timestamp.
        in: query
        name: noHeader
        schema:
          default: false
          type: boolean
      - description: Start timeout in seconds.
        in: query
        name: startTimeout
        schema:
          default: 0
          type: integer
      - description: Stop timeout in seconds.
        in: query
        name: stopTimeout
        schema:
          default: 10
          type: integer
      - description: Systemd restart-policy.
        in: query
        name: restartPolicy
        schema:
          default: on-failure
          enum:
          - "no"
          - on-success
          - on-failure
          - on-abnormal
          - on-watchdog
          - on-abort
          - always
          type: string
      - description: Systemd unit name prefix for containers.
        in: query
        name: containerPrefix
        schema:
          default: container
          type: string
      - description: Systemd unit name prefix for pods.
        in: query
        name: podPrefix
        schema:
          default: pod
          type: string
      - description: Systemd unit name separator between name/id and prefix.
        in: query
        name: separator
        schema:
          default: "-"
          type: string
      - description: Configures the time to sleep before restarting a service.
        in: query
        name: restartSec
        schema:
          default: 0
          type: integer
      - description: Systemd Wants list for the container or pods.
        explode: false
        in: query
        name: wants
        schema:
          default: "[]"
          items:
            type: string
          type: array
        style: form
      - description: Systemd After list for the container or pods.
        explode: false
        in: query
        name: after
        schema:
          default: "[]"
          items:
            type: string
          type: array
        style: form
      - description: Systemd Requires list for the container or pods.
        explode: false
        in: query
        name: requires
        schema:
          default: "[]"
          items:
            type: string
          type: array
        style: form
      - description: Set environment variables to the systemd unit files.
        explode: false
        in: query
        name: additionalEnvVariables
        schema:
          default: "[]"
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: string
                type: object
          description: no error
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Internal server error
      summary: Generate Systemd Units
      tags:
      - containers
      - pods
      x-accepts:
      - application/json
  /libpod/generate/kube:
    get:
      description: Generate Kubernetes YAML based on a pod or container.
      operationId: GenerateKubeLibpod
      parameters:
      - description: Name or ID of the container or pod.
        explode: false
        in: query
        name: names
        required: true
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Generate YAML for a Kubernetes service object.
        in: query
        name: service
        schema:
          default: false
          type: boolean
      - description: Generate YAML for the given Kubernetes kind.
        in: query
        name: type
        schema:
          default: pod
          type: string
      - description: Set the replica number for Deployment kind.
        in: query
        name: replicas
        schema:
          default: 0
          format: int32
          type: integer
      - description: don't truncate annotations to the Kubernetes maximum length of
          63 characters
        in: query
        name: noTrunc
        schema:
          default: false
          type: boolean
      - description: add podman-only reserved annotations in generated YAML file (cannot
          be used by Kubernetes)
        in: query
        name: podmanOnly
        schema:
          default: false
          type: boolean
      responses:
        "200":
          content:
            text/vnd.yaml:
              schema:
                format: binary
                type: string
            application/json:
              schema:
                format: binary
                type: string
          description: Kubernetes YAML file describing pod
        "500":
          content:
            text/vnd.yaml:
              schema:
                $ref: "#/components/schemas/ErrorModel"
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Internal server error
      summary: Generate a Kubernetes YAML file.
      tags:
      - containers
      - pods
      x-accepts:
      - application/json
      - text/vnd.yaml
  /libpod/images/{name}:
    delete:
      description: Remove an image from the local storage.
      operationId: ImageDeleteLibpod
      parameters:
      - description: name or ID of image to remove
        in: path
        name: name
        required: true
        schema:
          type: string
      - description: remove the image even if used by containers or has other tags
        in: query
        name: force
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LibpodImagesRemoveReport"
          description: Image Remove
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Bad parameter in request
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: No such image
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Conflict error in operation
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Internal server error
      summary: Remove an image from the local storage.
      tags:
      - images
      x-accepts:
      - application/json
  /libpod/images/{name}/changes:
    get:
      description: |
        Returns which files in an image's filesystem have been added, deleted, or modified. The Kind of modification can be one of:

        0: Modified
        1: Added
        2: Deleted
      operationId: ImageChangesLibpod
      parameters:
      - description: the name or id of the image
        in: path
        name: name
        required: true
        schema:
          type: string
      - description: specify a second layer which is used to compare against it instead
          of the parent layer
        in: query
        name: parent
        schema:
          type: string
      - description: "select what you want to match, default is all"
        in: query
        name: diffType
        schema:
          enum:
          - all
          - container
          - image
          type: string
      responses:
        "200":
          content: {}
          description: Array of Changes
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
            application/octet-stream:
              schema:
                $ref: "#/components/schemas/ErrorModel"
            text/plain:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: No such container
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
            application/octet-stream:
              schema:
                $ref: "#/components/schemas/ErrorModel"
            text/plain:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Internal server error
      summary: "Report on changes to images's filesystem; adds, deletes or modifications."
      tags:
      - images
      x-accepts:
      - application/json
      - application/octet-stream
      - text/plain
  /libpod/images/{name}/exists:
    get:
      description: Check if image exists in local store
      operationId: ImageExistsLibpod
      parameters:
      - description: the name or ID of the container
        in: path
        name: name
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: image exists
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: No such image
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Internal server error
      summary: Image exists
      tags:
      - images
      x-accepts:
      - application/json
  /libpod/images/{name}/get:
    get:
      description: Export an image
      operationId: ImageGetLibpod
      parameters:
      - description: the name or ID of the container
        in: path
        name: name
        required: true
        schema:
          type: string
      - description: format for exported image
        in: query
        name: format
        schema:
          type: string
      - description: use compression on image
        in: query
        name: compress
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/x-tar:
              schema:
                format: binary
                type: string
          description: no error
        "404":
          content:
            application/x-tar:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: No such image
        "500":
          content:
            application/x-tar:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Internal server error
      summary: Export an image
      tags:
      - images
      x-accepts:
      - application/x-tar
  /libpod/images/{name}/history:
    get:
      description: Return parent layers of an image.
      operationId: ImageHistoryLibpod
      parameters:
      - description: the name or ID of the container
        in: path
        name: name
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HistoryResponse"
          description: Image History
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: No such image
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Internal server error
      summary: History of an image
      tags:
      - images
      x-accepts:
      - application/json
  /libpod/images/{name}/json:
    get:
      description: Obtain low-level information about an image
      operationId: ImageInspectLibpod
      parameters:
      - description: the name or ID of the container
        in: path
        name: name
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ImageData"
          description: Inspect Image
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: No such image
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Internal server error
      summary: Inspect an image
      tags:
      - images
      x-accepts:
      - application/json
  /libpod/images/{name}/push:
    post:
      description: Push an image to a container registry
      operationId: ImagePushLibpod
      parameters:
      - description: Name of image to push.
        in: path
        name: name
        required: true
        schema:
          type: string
      - description: Allows for pushing the image to a different destination than
          the image refers to.
        in: query
        name: destination
        schema:
          type: string
      - description: Enforce compressing the layers with the specified --compression
          and do not reuse differently compressed blobs on the registry.
        in: query
        name: forceCompressionFormat
        schema:
          default: false
          type: boolean
      - description: Compression format used to compress image layers.
        in: query
        name: compressionFormat
        schema:
          type: string
      - description: Compression level used to compress image layers.
        in: query
        name: compressionLevel
        schema:
          type: integer
      - description: Require TLS verification.
        in: query
        name: tlsVerify
        schema:
          default: true
          type: boolean
      - description: Silences extra stream data on push.
        in: query
        name: quiet
        schema:
          default: true
          type: boolean
      - description: "Manifest type (oci, v2s1, or v2s2) to use when pushing an image.\
          \ Default is manifest type of source, with fallbacks."
        in: query
        name: format
        schema:
          type: string
      - description: All indicates whether to push all images related to the image
          list.
        in: query
        name: all
        schema:
          type: boolean
      - description: Discard any pre-existing signatures in the image.
        in: query
        name: removeSignatures
        schema:
          type: boolean
      - description: Number of times to retry push in case of failure.
        in: query
        name: retry
        schema:
          type: integer
      - description: "Delay between retries in case of push failures. Duration format\
          \ such as \"412ms\", or \"3.5h\"."
        in: query
        name: retryDelay
        schema:
          type: string
      - description: A base64-encoded auth configuration.
        in: header
        name: X-Registry-Auth
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                format: binary
                type: string
          description: no error
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: No such image
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Internal server error
      summary: Push Image
      tags:
      - images
      x-accepts:
      - application/json
  /libpod/images/{name}/resolve:
    get:
      description: Resolve the passed image name to a list of fully-qualified images
        referring to container registries.
      operationId: ImageResolveLibpod
      parameters:
      - description: the (short) name to resolve
        in: path
        name: name
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: resolved image names
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Bad parameter in request
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Internal server error
      summary: Resolve an image (short) name
      tags:
      - images
      x-accepts:
      - application/json
  /libpod/images/{name}/tag:
    post:
      description: Tag an image so that it becomes part of a repository.
      operationId: ImageTagLibpod
      parameters:
      - description: the name or ID of the container
        in: path
        name: name
        required: true
        schema:
          type: string
      - description: the repository to tag in
        in: query
        name: repo
        schema:
          type: string
      - description: the name of the new tag
        in: query
        name: tag
        schema:
          type: string
      responses:
        "201":
          content: {}
          description: no error
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Bad parameter in request
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: No such image
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Conflict error in operation
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Internal server error
      summary: Tag an image
      tags:
      - images
      x-accepts:
      - application/json
  /libpod/images/{name}/tree:
    get:
      description: Retrieve the image tree for the provided image name or ID
      operationId: ImageTreeLibpod
      parameters:
      - description: the name or ID of the container
        in: path
        name: name
        required: true
        schema:
          type: string
      - description: show all child images and layers of the specified image
        in: query
        name: whatrequires
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ImageTreeReport"
          description: Image Tree
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: No such image
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Internal server error
      summary: Image tree
      tags:
      - images
      x-accepts:
      - application/json
  /libpod/images/{name}/untag:
    post:
      description: "Untag an image. If not repo and tag are specified, all tags are\
        \ removed from the image."
      operationId: ImageUntagLibpod
      parameters:
      - description: the name or ID of the container
        in: path
        name: name
        required: true
        schema:
          type: string
      - description: the repository to untag
        in: query
        name: repo
        schema:
          type: string
      - description: the name of the tag to untag
        in: query
        name: tag
        schema:
          type: string
      responses:
        "201":
          content: {}
          description: no error
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Bad parameter in request
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: No such image
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Conflict error in operation
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Internal server error
      summary: Untag an image
      tags:
      - images
      x-accepts:
      - application/json
  /libpod/images/export:
    get:
      description: Export multiple images into a single object. Only `docker-archive`
        is currently supported.
      operationId: ImageExportLibpod
      parameters:
      - description: format for exported image (only docker-archive is supported)
        in: query
        name: format
        schema:
          type: string
      - description: references to images to export
        explode: false
        in: query
        name: references
        schema:
          items:
            type: string
          type: array
        style: form
      - description: use compression on image
        in: query
        name: compress
        schema:
          type: boolean
      - description: accept uncompressed layers when copying OCI images
        in: query
        name: ociAcceptUncompressedLayers
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                format: binary
                type: string
          description: no error
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: No such image
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Internal server error
      summary: Export multiple images
      tags:
      - images
      x-accepts:
      - application/json
  /libpod/images/import:
    post:
      description: Import a previously exported tarball as an image.
      operationId: ImageImportLibpod
      parameters:
      - in: header
        name: Content-Type
        schema:
          default: application/x-tar
          enum:
          - application/x-tar
          type: string
      - description: "Apply the following possible instructions to the created image:\
          \ CMD | ENTRYPOINT | ENV | EXPOSE | LABEL | STOPSIGNAL | USER | VOLUME |\
          \ WORKDIR.  JSON encoded string"
        explode: false
        in: query
        name: changes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Set commit message for imported image
        in: query
        name: message
        schema:
          type: string
      - description: "Optional Name[:TAG] for the image"
        in: query
        name: reference
        schema:
          type: string
      - description: Load image from the specified URL
        in: query
        name: url
        schema:
          type: string
      requestBody:
        content:
          application/x-tar:
            schema:
              format: binary
              type: string
        description: tarball for imported image
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ImageImportReport"
          description: Image Import
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Bad parameter in request
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Internal server error
      summary: Import image
      tags:
      - images
      x-codegen-request-body-name: upload
      x-content-type: application/x-tar
      x-accepts:
      - application/json
  /libpod/images/json:
    get:
      description: Returns a list of images on the server
      operationId: ImageListLibpod
      parameters:
      - description: Show all images. Only images from a final layer (no children)
          are shown by default.
        in: query
        name: all
        schema:
          default: false
          type: boolean
      - description: |
          A JSON encoded value of the filters (a `map[string][]string`) to process on the images list. Available filters:
          - `before`=(`<image-name>[:<tag>]`,  `<image id>` or `<image@digest>`)
          - `dangling=true`
          - `label=key` or `label="key=value"` of an image label
          - `reference`=(`<image-name>[:<tag>]`)
          - `id`=(`<image-id>`)
          - `since`=(`<image-name>[:<tag>]`,  `<image id>` or `<image@digest>`)
        in: query
        name: filters
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/LibpodImageSummary"
                type: array
          description: Image summary for libpod API
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Internal server error
      summary: List Images
      tags:
      - images
      x-accepts:
      - application/json
  /libpod/images/load:
    post:
      description: Load an image (oci-archive or docker-archive) stream.
      operationId: ImageLoadLibpod
      requestBody:
        content:
          application/x-tar:
            schema:
              type: string
        description: tarball of container image
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ImageLoadReport"
          description: Image Load
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Bad parameter in request
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Internal server error
      summary: Load image
      tags:
      - images
      x-codegen-request-body-name: upload
      x-content-type: application/x-tar
      x-accepts:
      - application/json
  /libpod/images/prune:
    post:
      description: Remove images that are not being used by a container
      operationId: ImagePruneLibpod
      parameters:
      - description: |
          Remove all images not in use by containers, not just dangling ones
        in: query
        name: all
        schema:
          default: false
          type: boolean
      - description: |
          Remove images even when they are used by external containers (e.g, by build containers)
        in: query
        name: external
        schema:
          default: false
          type: boolean
      - description: |
          Remove persistent build cache created by build instructions such as `--mount=type=cache`.
        in: query
        name: buildcache
        schema:
          default: false
          type: boolean
      - description: |
          filters to apply to image pruning, encoded as JSON (map[string][]string). Available filters:
            - `dangling=<boolean>` When set to `true` (or `1`), prune only
               unused *and* untagged images. When set to `false`
               (or `0`), all unused images are pruned.
            - `until=<string>` Prune images created before this timestamp. The `<timestamp>` can be Unix timestamps, date formatted timestamps, or Go duration strings (e.g. `10m`, `1h30m`) computed relative to the daemon machine’s time.
            - `label` (`label=<key>`, `label=<key>=<value>`, `label!=<key>`, or `label!=<key>=<value>`) Prune images with (or without, in case `label!=...` is used) the specified labels.
        in: query
        name: filters
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/PruneReport"
                type: array
          description: Image Prune
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Internal server error
      summary: Prune unused images
      tags:
      - images
      x-accepts:
      - application/json
  /libpod/images/pull:
    post:
      description: Pull one or more images from a container registry.
      operationId: ImagePullLibpod
      parameters:
      - description: "Mandatory reference to the image (e.g., quay.io/image/name:tag)"
        in: query
        name: reference
        schema:
          type: string
      - description: silences extra stream data on pull
        in: query
        name: quiet
        schema:
          default: false
          type: boolean
      - description: Return the same JSON payload as the Docker-compat endpoint.
        in: query
        name: compatMode
        schema:
          default: false
          type: boolean
      - description: Pull image for the specified architecture.
        in: query
        name: Arch
        schema:
          type: string
      - description: Pull image for the specified operating system.
        in: query
        name: OS
        schema:
          type: string
      - description: Pull image for the specified variant.
        in: query
        name: Variant
        schema:
          type: string
      - description: "Pull policy, \"always\" (default), \"missing\", \"newer\", \"\
          never\"."
        in: query
        name: policy
        schema:
          type: string
      - description: Require TLS verification.
        in: query
        name: tlsVerify
        schema:
          default: true
          type: boolean
      - description: Pull all tagged images in the repository.
        in: query
        name: allTags
        schema:
          type: boolean
      - description: "base-64 encoded auth config. Must include the following four\
          \ values: username, password, email and server address OR simply just an\
          \ identity token."
        in: header
        name: X-Registry-Auth
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LibpodImagesPullReport"
          description: Image Pull
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Bad parameter in request
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Internal server error
      summary: Pull images
      tags:
      - images
      x-accepts:
      - application/json
  /libpod/images/remove:
    delete:
      description: Remove one or more images from the storage.
      operationId: ImageDeleteAllLibpod
      parameters:
      - description: Images IDs or names to remove.
        explode: false
        in: query
        name: images
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Remove all images.
        in: query
        name: all
        schema:
          default: true
          type: boolean
      - description: Force image removal (including containers using the images).
        in: query
        name: force
        schema:
          type: boolean
      - description: Ignore if a specified image does not exist and do not throw an
          error.
        in: query
        name: ignore
        schema:
          type: boolean
      - description: Resolves to manifest list instead of image.
        in: query
        name: lookupManifest
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LibpodImagesRemoveReport"
          description: Image Remove
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Bad parameter in request
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Internal server error
      summary: Remove one or more images from the storage.
      tags:
      - images
      x-accepts:
      - application/json
  /libpod/images/scp/{name}:
    post:
      description: Copy an image from one host to another
      operationId: ImageScpLibpod
      parameters:
      - description: source connection/image
        in: path
        name: name
        required: true
        schema:
          type: string
      - description: dest connection/image
        in: query
        name: destination
        schema:
          type: string
      - description: quiet output
        in: query
        name: quiet
        schema:
          default: false
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ScpReport"
          description: Image Scp
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Bad parameter in request
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Internal server error
      summary: Copy an image from one host to another
      tags:
      - images
      x-accepts:
      - application/json
  /libpod/images/search:
    get:
      description: Search registries for images
      operationId: ImageSearchLibpod
      parameters:
      - description: term to search
        in: query
        name: term
        schema:
          type: string
      - description: maximum number of results
        in: query
        name: limit
        schema:
          default: 25
          type: integer
      - description: |
          A JSON encoded value of the filters (a `map[string][]string`) to process on the images list. Available filters:
          - `is-automated=(true|false)`
          - `is-official=(true|false)`
          - `stars=<number>` Matches images that have at least 'number' stars.
        in: query
        name: filters
        schema:
          type: string
      - description: Require HTTPS and verify signatures when contacting registries.
        in: query
        name: tlsVerify
        schema:
          default: true
          type: boolean
      - description: list the available tags in the repository
        in: query
        name: listTags
        schema:
          default: false
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ImageSearch_200_response"
          description: Registry Search
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Internal server error
      summary: Search images
      tags:
      - images
      x-accepts:
      - application/json
  /libpod/info:
    get:
      description: Returns information on the system and libpod configuration
      operationId: SystemInfoLibpod
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LibpodInfo"
          description: Info
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Internal server error
      summary: Get info
      tags:
      - system
      x-accepts:
      - application/json
  /libpod/kube/apply:
    post:
      description: "Deploy a podman container, pod, volume, or Kubernetes yaml to\
        \ a Kubernetes cluster."
      operationId: KubeApplyLibpod
      parameters:
      - description: Path to the CA cert file for the Kubernetes cluster.
        in: query
        name: caCertFile
        schema:
          type: string
      - description: Path to the kubeconfig file for the Kubernetes cluster.
        in: query
        name: kubeConfig
        schema:
          type: string
      - description: The namespace to deploy the workload to on the Kubernetes cluster.
        in: query
        name: namespace
        schema:
          type: string
      - description: Create a service object for the container being deployed.
        in: query
        name: service
        schema:
          type: boolean
      - description: Path to the Kubernetes yaml file to deploy.
        in: query
        name: file
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: string
          application/x-tar:
            schema:
              type: string
        description: Kubernetes YAML file.
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                format: binary
                type: string
          description: Kubernetes YAML file successfully deployed to cluster
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Internal server error
      summary: Apply a podman workload or Kubernetes YAML file.
      tags:
      - containers
      - pods
      x-codegen-request-body-name: request
      x-content-type: application/json
      x-accepts:
      - application/json
  /libpod/manifests/{name}:
    delete:
      description: |
        Delete named manifest list

        As of v4.0.0
      operationId: ManifestDeleteLibpod
      parameters:
      - description: The name or ID of the  list to be deleted
        in: path
        name: name
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LibpodImagesRemoveReport"
          description: Image Remove
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: No such manifest
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Internal server error
      summary: Delete manifest list
      tags:
      - manifests
      x-accepts:
      - application/json
    post:
      description: Create a manifest list
      operationId: ManifestCreateLibpod
      parameters:
      - description: manifest list or index name to create
        in: path
        name: name
        required: true
        schema:
          type: string
      - description: |
          One or more names of an image or a manifest list. Repeat parameter as needed.

          Support for multiple images, as of version 4.0.0
          Alias of `image` is support for compatibility with < 4.0.0
          Response status code is 200 with < 4.0.0 for compatibility
        in: query
        name: images
        required: true
        schema:
          type: string
      - description: add all contents if given list
        in: query
        name: all
        schema:
          type: boolean
      - description: modify an existing list if one with the desired name already
          exists
        in: query
        name: amend
        schema:
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ManifestModifyOptions"
          application/x-tar:
            schema:
              $ref: "#/components/schemas/ManifestModifyOptions"
        description: options for new manifest
        required: false
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IDResponse"
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Bad parameter in request
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: No such image
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Internal server error
      summary: Create
      tags:
      - manifests
      x-codegen-request-body-name: options
      x-content-type: application/json
      x-accepts:
      - application/json
    put:
      description: |
        Add/Remove an image(s) to a manifest list

        Note: operations are not atomic when multiple Images are provided.

        As of v4.0.0
      operationId: ManifestModifyLibpod
      parameters:
      - description: the name or ID of the manifest
        in: path
        name: name
        required: true
        schema:
          type: string
      - description: Require HTTPS and verify signatures when contacting registries.
        in: query
        name: tlsVerify
        schema:
          default: true
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ManifestModifyOptions"
          application/x-tar:
            schema:
              $ref: "#/components/schemas/ManifestModifyOptions"
        description: options for mutating a manifest
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ManifestModifyReport"
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Bad parameter in request
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: No such manifest
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ManifestModifyReport"
          description: "Operation had partial success, both Images and Errors may\
            \ have members"
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Internal server error
      summary: Modify manifest list
      tags:
      - manifests
      x-codegen-request-body-name: options
      x-content-type: application/json
      x-accepts:
      - application/json
  /libpod/manifests/{name}/add:
    post:
      description: |
        Add an image to a manifest list

        Deprecated: As of 4.0.0 use ManifestModifyLibpod instead
      operationId: ManifestAddLibpod
      parameters:
      - description: the name or ID of the manifest
        in: path
        name: name
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ManifestAddOptions"
          application/x-tar:
            schema:
              $ref: "#/components/schemas/ManifestAddOptions"
        description: options for creating a manifest
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IDResponse"
          description: ""
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: No such manifest
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Bad parameter in request
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Internal server error
      summary: Add image
      tags:
      - manifests
      x-codegen-request-body-name: options
      x-content-type: application/json
      x-accepts:
      - application/json
  /libpod/manifests/{name}/exists:
    get:
      description: |
        Check if manifest list exists

        Note: There is no contract that the manifest list will exist for a follow-on operation
      operationId: ManifestExistsLibpod
      parameters:
      - description: the name or ID of the manifest list
        in: path
        name: name
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: manifest list exists
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: No such manifest
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Internal server error
      summary: Exists
      tags:
      - manifests
      x-accepts:
      - application/json
  /libpod/manifests/{name}/json:
    get:
      description: Display attributes of given manifest list
      operationId: ManifestInspectLibpod
      parameters:
      - description: the name or ID of the manifest list
        in: path
        name: name
        required: true
        schema:
          type: string
      - description: Require HTTPS and verify signatures when contacting registries.
        in: query
        name: tlsVerify
        schema:
          default: true
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Schema2ListPublic"
          description: Inspect Manifest
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: No such manifest
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Internal server error
      summary: Inspect
      tags:
      - manifests
      x-accepts:
      - application/json
  /libpod/manifests/{name}/push:
    post:
      description: |
        Push a manifest list or image index to a registry

        Deprecated: As of 4.0.0 use ManifestPushLibpod instead
      operationId: ManifestPushV3Libpod
      parameters:
      - description: the name or ID of the manifest
        in: path
        name: name
        required: true
        schema:
          type: string
      - description: the destination for the manifest
        in: query
        name: destination
        required: true
        schema:
          type: string
      - description: push all images
        in: query
        name: all
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IDResponse"
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Bad parameter in request
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: No such manifest
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Internal server error
      summary: Push manifest to registry
      tags:
      - manifests
      x-accepts:
      - application/json
  /libpod/manifests/{name}/registry/{destination}:
    post:
      description: |
        Push a manifest list or image index to the named registry

        As of v4.0.0
      operationId: ManifestPushLibpod
      parameters:
      - description: the name or ID of the manifest list
        in: path
        name: name
        required: true
        schema:
          type: string
      - description: add existing instances with requested compression algorithms
          to manifest list
        explode: false
        in: query
        name: addCompression
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Enforce compressing the layers with the specified --compression
          and do not reuse differently compressed blobs on the registry.
        in: query
        name: forceCompressionFormat
        schema:
          default: false
          type: boolean
      - description: the registry for the manifest list
        in: path
        name: destination
        required: true
        schema:
          type: string
      - description: push all images
        in: query
        name: all
        schema:
          default: true
          type: boolean
      - description: Require HTTPS and verify signatures when contacting registries.
        in: query
        name: tlsVerify
        schema:
          default: true
          type: boolean
      - description: silences extra stream data on push
        in: query
        name: quiet
        schema:
          default: true
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IDResponse"
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Bad parameter in request
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: No such manifest
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Internal server error
      summary: Push manifest list to registry
      tags:
      - manifests
      x-accepts:
      - application/json
  /libpod/networks/{name}:
    delete:
      description: Remove a configured network
      operationId: NetworkDeleteLibpod
      parameters:
      - description: the name of the network
        in: path
        name: name
        required: true
        schema:
          type: string
      - description: remove containers associated with network
        in: query
        name: force
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/NetworkRmReport"
                type: array
          description: Network Delete
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: No such network
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Internal server error
      summary: Remove a network
      tags:
      - networks
      x-accepts:
      - application/json
  /libpod/networks/{name}/connect:
    post:
      description: Connect a container to a network.
      operationId: NetworkConnectLibpod
      parameters:
      - description: the name of the network
        in: path
        name: name
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/networkConnectRequestLibpod"
          application/x-tar:
            schema:
              $ref: "#/components/schemas/networkConnectRequestLibpod"
        description: attributes for connecting a container to a network
        required: false
      responses:
        "200":
          content: {}
          description: OK
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: No such network
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Internal server error
      summary: Connect container to network
      tags:
      - networks
      x-codegen-request-body-name: create
      x-content-type: application/json
      x-accepts:
      - application/json
  /libpod/networks/{name}/disconnect:
    post:
      description: Disconnect a container from a network.
      operationId: NetworkDisconnectLibpod
      parameters:
      - description: the name of the network
        in: path
        name: name
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/networkDisconnectRequest"
          application/x-tar:
            schema:
              $ref: "#/components/schemas/networkDisconnectRequest"
        description: attributes for disconnecting a container from a network
        required: false
      responses:
        "200":
          content: {}
          description: OK
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: No such network
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Internal server error
      summary: Disconnect container from network
      tags:
      - networks
      x-codegen-request-body-name: create
      x-content-type: application/json
      x-accepts:
      - application/json
  /libpod/networks/{name}/exists:
    get:
      description: Check if network exists
      operationId: NetworkExistsLibpod
      parameters:
      - description: the name or ID of the network
        in: path
        name: name
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: network exists
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: No such network
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Internal server error
      summary: Network exists
      tags:
      - networks
      x-accepts:
      - application/json
  /libpod/networks/{name}/json:
    get:
      description: |
        Display configuration for a network.
      operationId: NetworkInspectLibpod
      parameters:
      - description: the name of the network
        in: path
        name: name
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NetworkInspectReport"
          description: Network inspect
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: No such network
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Internal server error
      summary: Inspect a network
      tags:
      - networks
      x-accepts:
      - application/json
  /libpod/networks/{name}/update:
    post:
      description: Update existing podman network
      operationId: NetworkUpdateLibpod
      parameters:
      - description: the name or ID of the network
        in: path
        name: name
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/networkUpdateRequestLibpod"
          application/x-tar:
            schema:
              $ref: "#/components/schemas/networkUpdateRequestLibpod"
        description: attributes for updating a netavark network
        required: false
      responses:
        "200":
          content: {}
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Bad parameter in request
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Internal server error
      summary: Update existing podman network
      tags:
      - networks
      x-codegen-request-body-name: update
      x-content-type: application/json
      x-accepts:
      - application/json
  /libpod/networks/create:
    post:
      description: Create a new network configuration
      operationId: NetworkCreateLibpod
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/networkCreateLibpod"
          application/x-tar:
            schema:
              $ref: "#/components/schemas/networkCreateLibpod"
        description: attributes for creating a network
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Network"
          description: Network create
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Bad parameter in request
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Conflict error in operation
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Internal server error
      summary: Create network
      tags:
      - networks
      x-codegen-request-body-name: create
      x-content-type: application/json
      x-accepts:
      - application/json
  /libpod/networks/json:
    get:
      description: |
        Display summary of network configurations.
          - In a 200 response, all of the fields named Bytes are returned as a Base64 encoded string.
      operationId: NetworkListLibpod
      parameters:
      - description: |
          JSON encoded value of the filters (a `map[string][]string`) to process on the network list. Available filters:
            - `name=[name]` Matches network name (accepts regex).
            - `id=[id]` Matches for full or partial ID.
            - `driver=[driver]` Only bridge is supported.
            - `label=[key]` or `label=[key=value]` Matches networks based on the presence of a label alone or a label and a value.
            - `until=[timestamp]` Matches all networks that were created before the given timestamp.
        in: query
        name: filters
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/Network"
                type: array
          description: Network list
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Internal server error
      summary: List networks
      tags:
      - networks
      x-accepts:
      - application/json
  /libpod/networks/prune:
    post:
      description: Remove networks that do not have containers
      operationId: NetworkPruneLibpod
      parameters:
      - description: |
          Filters to process on the prune list, encoded as JSON (a `map[string][]string`).
          Available filters:
            - `until=<timestamp>` Prune networks created before this timestamp. The `<timestamp>` can be Unix timestamps, date formatted timestamps, or Go duration strings (e.g. `10m`, `1h30m`) computed relative to the daemon machine’s time.
            - `label` (`label=<key>`, `label=<key>=<value>`, `label!=<key>`, or `label!=<key>=<value>`) Prune networks with (or without, in case `label!=...` is used) the specified labels.
        in: query
        name: filters
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/NetworkPruneReport"
                type: array
          description: Network prune
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Internal server error
      summary: Delete unused networks
      tags:
      - networks
      x-accepts:
      - application/json
  /libpod/play/kube:
    delete:
      description: "Tears down pods, secrets, and volumes defined in a YAML file"
      operationId: PlayKubeDownLibpod
      parameters:
      - description: Remove volumes.
        in: query
        name: force
        schema:
          default: false
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PlayKubeReport"
          description: PlayKube response
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Internal server error
      summary: Remove resources created from kube play
      tags:
      - containers
      - pods
      x-accepts:
      - application/json
    post:
      description: |
        Create and run pods based on a Kubernetes YAML file.

        ### Content-Type

        Then endpoint support two Content-Type
         - `plain/text` for yaml format
         - `application/x-tar` for sending context(s) required for building images

        #### Tar format

        The tar format must contain a `play.yaml` file at the root that will be used.
        If the file format requires context to build an image, it uses the image name and
        check for corresponding folder.

        For example, the client sends a tar file with the following structure:

        ```
        └── content.tar
         ├── play.yaml
         └── foobar/
             └── Containerfile
        ```

        The `play.yaml` is the following, the `foobar` image means we are looking for a context with this name.
        ```
        apiVersion: v1
        kind: Pod
        metadata:
        name: demo-build-remote
        spec:
        containers:
         - name: container
           image: foobar
        ```
      operationId: PlayKubeLibpod
      parameters:
      - in: header
        name: Content-Type
        schema:
          default: plain/text
          enum:
          - plain/text
          - application/x-tar
          type: string
      - description: "JSON encoded value of annotations (a map[string]string)."
        in: query
        name: annotations
        schema:
          type: string
      - description: Logging driver for the containers in the pod.
        in: query
        name: logDriver
        schema:
          type: string
      - description: logging driver options
        explode: false
        in: query
        name: logOptions
        schema:
          items:
            type: string
          type: array
        style: form
      - description: USe the network mode or specify an array of networks.
        explode: false
        in: query
        name: network
        schema:
          items:
            type: string
          type: array
        style: form
      - description: do not setup /etc/hosts file in container
        in: query
        name: noHosts
        schema:
          default: false
          type: boolean
      - description: use annotations that are not truncated to the Kubernetes maximum
          length of 63 characters
        in: query
        name: noTrunc
        schema:
          default: false
          type: boolean
      - description: "publish a container's port, or a range of ports, to the host"
        explode: false
        in: query
        name: publishPorts
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Whether to publish all ports defined in the K8S YAML file (containerPort,\
          \ hostPort), if false only hostPort will be published"
        in: query
        name: publishAllPorts
        schema:
          type: boolean
      - description: replace existing pods and containers
        in: query
        name: replace
        schema:
          default: false
          type: boolean
      - description: Starts a service container before all pods.
        in: query
        name: serviceContainer
        schema:
          default: false
          type: boolean
      - description: Start the pod after creating it.
        in: query
        name: start
        schema:
          default: true
          type: boolean
      - description: Static IPs used for the pods.
        explode: false
        in: query
        name: staticIPs
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Static MACs used for the pods.
        explode: false
        in: query
        name: staticMACs
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Require HTTPS and verify signatures when contacting registries.
        in: query
        name: tlsVerify
        schema:
          default: true
          type: boolean
      - description: Set the user namespace mode for the pods.
        in: query
        name: userns
        schema:
          type: string
      - description: Clean up all objects created when a SIGTERM is received or pods
          exit.
        in: query
        name: wait
        schema:
          default: false
          type: boolean
      - description: Build the images with corresponding context.
        in: query
        name: build
        schema:
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              type: string
          application/x-tar:
            schema:
              type: string
        description: Kubernetes YAML file.
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PlayKubeReport"
          description: PlayKube response
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Internal server error
      summary: Play a Kubernetes YAML file.
      tags:
      - containers
      - pods
      x-codegen-request-body-name: request
      x-content-type: application/json
      x-accepts:
      - application/json
  /libpod/pods/{name}:
    delete:
      operationId: PodDeleteLibpod
      parameters:
      - description: the name or ID of the pod
        in: path
        name: name
        required: true
        schema:
          type: string
      - description: "force removal of a running pod by first stopping all containers,\
          \ then removing all containers in the pod"
        in: query
        name: force
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PodRmReport"
          description: Rm pod
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Bad parameter in request
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: No such pod
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Internal server error
      summary: Remove pod
      tags:
      - pods
      x-accepts:
      - application/json
  /libpod/pods/{name}/exists:
    get:
      description: Check if a pod exists by name or ID
      operationId: PodExistsLibpod
      parameters:
      - description: the name or ID of the pod
        in: path
        name: name
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: pod exists
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: No such pod
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Internal server error
      summary: Pod exists
      tags:
      - pods
      x-accepts:
      - application/json
  /libpod/pods/{name}/json:
    get:
      operationId: PodInspectLibpod
      parameters:
      - description: the name or ID of the pod
        in: path
        name: name
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InspectPodData"
          description: Inspect pod
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: No such pod
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Internal server error
      summary: Inspect pod
      tags:
      - pods
      x-accepts:
      - application/json
  /libpod/pods/{name}/kill:
    post:
      operationId: PodKillLibpod
      parameters:
      - description: the name or ID of the pod
        in: path
        name: name
        required: true
        schema:
          type: string
      - description: signal to be sent to pod
        in: query
        name: signal
        schema:
          default: SIGKILL
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PodKillReport"
          description: Kill Pod
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Bad parameter in request
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: No such pod
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PodKillReport"
          description: Kill Pod
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Internal server error
      summary: Kill a pod
      tags:
      - pods
      x-accepts:
      - application/json
  /libpod/pods/{name}/pause:
    post:
      description: Pause a pod
      operationId: PodPauseLibpod
      parameters:
      - description: the name or ID of the pod
        in: path
        name: name
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PodPauseReport"
          description: Pause pod
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: No such pod
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PodPauseReport"
          description: Pause pod
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Internal server error
      summary: Pause a pod
      tags:
      - pods
      x-accepts:
      - application/json
  /libpod/pods/{name}/restart:
    post:
      operationId: PodRestartLibpod
      parameters:
      - description: the name or ID of the pod
        in: path
        name: name
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PodRestartReport"
          description: Restart pod
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: No such pod
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PodRestartReport"
          description: Restart pod
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Internal server error
      summary: Restart a pod
      tags:
      - pods
      x-accepts:
      - application/json
  /libpod/pods/{name}/start:
    post:
      operationId: PodStartLibpod
      parameters:
      - description: the name or ID of the pod
        in: path
        name: name
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PodStartReport"
          description: Start pod
        "304":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Pod already started
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: No such pod
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PodStartReport"
          description: Start pod
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Internal server error
      summary: Start a pod
      tags:
      - pods
      x-accepts:
      - application/json
  /libpod/pods/{name}/stop:
    post:
      operationId: PodStopLibpod
      parameters:
      - description: the name or ID of the pod
        in: path
        name: name
        required: true
        schema:
          type: string
      - description: timeout
        in: query
        name: t
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PodStopReport"
          description: Stop pod
        "304":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Pod already stopped
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Bad parameter in request
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: No such pod
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PodStopReport"
          description: Stop pod
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Internal server error
      summary: Stop a pod
      tags:
      - pods
      x-accepts:
      - application/json
  /libpod/pods/{name}/top:
    get:
      description: List processes running inside a pod
      operationId: PodTopLibpod
      parameters:
      - description: Name of pod to query for processes
        in: path
        name: name
        required: true
        schema:
          type: string
      - description: "when true, repeatedly stream the latest output (As of version\
          \ 4.0)"
        in: query
        name: stream
        schema:
          type: boolean
      - description: "if streaming, delay in seconds between updates. Must be >1.\
          \ (As of version 4.0)"
        in: query
        name: delay
        schema:
          default: 5
          type: integer
      - description: |
          arguments to pass to ps such as aux.
        in: query
        name: ps_args
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PodTopOKBody"
          description: List processes in pod
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: No such pod
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Internal server error
      summary: List processes
      tags:
      - pods
      x-accepts:
      - application/json
  /libpod/pods/{name}/unpause:
    post:
      operationId: PodUnpauseLibpod
      parameters:
      - description: the name or ID of the pod
        in: path
        name: name
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PodUnpauseReport"
          description: Unpause pod
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: No such pod
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PodUnpauseReport"
          description: Unpause pod
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Internal server error
      summary: Unpause a pod
      tags:
      - pods
      x-accepts:
      - application/json
  /libpod/pods/create:
    post:
      operationId: PodCreateLibpod
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PodSpecGenerator"
          application/x-tar:
            schema:
              $ref: "#/components/schemas/PodSpecGenerator"
        description: attributes for creating a pod
        required: false
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IDResponse"
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Bad parameter in request
        "409":
          content:
            application/json:
              schema:
                description: message describing error
                type: string
          description: status conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Internal server error
      summary: Create a pod
      tags:
      - pods
      x-codegen-request-body-name: create
      x-content-type: application/json
      x-accepts:
      - application/json
  /libpod/pods/json:
    get:
      operationId: PodListLibpod
      parameters:
      - description: |
          JSON encoded value of the filters (a map[string][]string) to process on the pods list. Available filters:
            - `id=<pod-id>` Matches all of pod id.
            - `label=<key>` or `label=<key>:<value>` Matches pods based on the presence of a label alone or a label and a value.
            - `name=<pod-name>` Matches all of pod name.
            - `until=<timestamp>` List pods created before this timestamp. The `<timestamp>` can be Unix timestamps, date formatted timestamps, or Go duration strings (e.g. `10m`, `1h30m`) computed relative to the daemon machine’s time.
            - `status=<pod-status>` Pod's status: `stopped`, `running`, `paused`, `exited`, `dead`, `created`, `degraded`.
            - `network=<pod-network>` Name or full ID of network.
            - `ctr-names=<pod-ctr-names>` Container name within the pod.
            - `ctr-ids=<pod-ctr-ids>` Container ID within the pod.
            - `ctr-status=<pod-ctr-status>` Container status within the pod.
            - `ctr-number=<pod-ctr-number>` Number of containers in the pod.
        in: query
        name: filters
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/ListPodsReport"
                type: array
          description: List pods
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Bad parameter in request
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Internal server error
      summary: List pods
      tags:
      - pods
      x-accepts:
      - application/json
  /libpod/pods/prune:
    post:
      operationId: PodPruneLibpod
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PodPruneReport"
          description: Prune pod
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Bad parameter in request
        "409":
          content: {}
          description: pod already exists
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Internal server error
      summary: Prune unused pods
      tags:
      - pods
      x-accepts:
      - application/json
  /libpod/pods/stats:
    get:
      description: Display a live stream of resource usage statistics for the containers
        in one or more pods
      operationId: PodStatsAllLibpod
      parameters:
      - description: Provide statistics for all running pods.
        in: query
        name: all
        schema:
          type: boolean
      - description: Names or IDs of pods.
        explode: false
        in: query
        name: namesOrIDs
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/PodStatsReport"
                type: array
          description: Pod Statistics
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: No such pod
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Internal server error
      summary: Statistics for one or more pods
      tags:
      - pods
      x-accepts:
      - application/json
  /libpod/secrets/{name}:
    delete:
      operationId: SecretDeleteLibpod
      parameters:
      - description: the name or ID of the secret
        in: path
        name: name
        required: true
        schema:
          type: string
      - description: Remove all secrets
        in: query
        name: all
        schema:
          default: false
          type: boolean
      responses:
        "204":
          content: {}
          description: no error
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SecretDeleteLibpod_404_response"
          description: No such secret
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Internal server error
      summary: Remove secret
      tags:
      - secrets
      x-accepts:
      - application/json
  /libpod/secrets/{name}/exists:
    get:
      operationId: SecretExistsLibpod
      parameters:
      - description: the name or ID of the secret
        in: path
        name: name
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: secret exists
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SecretDeleteLibpod_404_response"
          description: No such secret
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Internal server error
      summary: Secret exists
      tags:
      - secrets
      x-accepts:
      - application/json
  /libpod/secrets/{name}/json:
    get:
      operationId: SecretInspectLibpod
      parameters:
      - description: the name or ID of the secret
        in: path
        name: name
        required: true
        schema:
          type: string
      - description: Display Secret
        in: query
        name: showsecret
        schema:
          default: false
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SecretInfoReport"
          description: Secret inspect response
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SecretDeleteLibpod_404_response"
          description: No such secret
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Internal server error
      summary: Inspect secret
      tags:
      - secrets
      x-accepts:
      - application/json
  /libpod/secrets/create:
    post:
      operationId: SecretCreateLibpod
      parameters:
      - description: User-defined name of the secret.
        in: query
        name: name
        required: true
        schema:
          type: string
      - description: Secret driver
        in: query
        name: driver
        schema:
          default: file
          type: string
      - description: Secret driver options
        in: query
        name: driveropts
        schema:
          type: string
      - description: Labels on the secret
        in: query
        name: labels
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: string
          application/x-tar:
            schema:
              type: string
        description: Secret
        required: false
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SecretCreateLibpod_201_response"
          description: Secret create response
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Internal server error
      summary: Create a secret
      tags:
      - secrets
      x-codegen-request-body-name: request
      x-content-type: application/json
      x-accepts:
      - application/json
  /libpod/secrets/json:
    get:
      description: Returns a list of secrets
      operationId: SecretListLibpod
      parameters:
      - description: |
          JSON encoded value of the filters (a `map[string][]string`) to process on the secrets list. Currently available filters:
            - `name=[name]` Matches secrets name (accepts regex).
            - `id=[id]` Matches for full or partial ID.
        in: query
        name: filters
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/SecretInfoReport"
                type: array
          description: Secret list response
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Internal server error
      summary: List secrets
      tags:
      - secrets
      x-accepts:
      - application/json
  /libpod/system/check:
    post:
      operationId: SystemCheckLibpod
      parameters:
      - description: Skip time-consuming checks
        in: query
        name: quick
        schema:
          type: boolean
      - description: Remove inconsistent images
        in: query
        name: repair
        schema:
          type: boolean
      - description: Remove inconsistent containers and images
        in: query
        name: repair_lossy
        schema:
          type: boolean
      - description: Maximum allowed age of unreferenced layers
        in: query
        name: unreferenced_layer_max_age
        schema:
          default: 24h0m0s
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SystemCheckReport"
          description: Check
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Bad parameter in request
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Internal server error
      summary: "Performs consistency checks on storage, optionally removing items\
        \ which fail checks"
      tags:
      - system
      x-accepts:
      - application/json
  /libpod/system/df:
    get:
      description: "Return information about disk usage for containers, images, and\
        \ volumes"
      operationId: SystemDataUsageLibpod
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SystemDfReport"
          description: Disk usage
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Internal server error
      summary: Show disk usage
      tags:
      - system
      x-accepts:
      - application/json
  /libpod/system/prune:
    post:
      operationId: SystemPruneLibpod
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SystemPruneReport"
          description: System Prune results
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Bad parameter in request
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Internal server error
      summary: Prune unused data
      tags:
      - system
      x-accepts:
      - application/json
  /libpod/version:
    get:
      operationId: SystemVersionLibpod
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SystemComponentVersion"
          description: Version
      summary: Component Version information
      tags:
      - system
      x-accepts:
      - application/json
  /libpod/volumes/{name}:
    delete:
      operationId: VolumeDeleteLibpod
      parameters:
      - description: the name or ID of the volume
        in: path
        name: name
        required: true
        schema:
          type: string
      - description: force removal
        in: query
        name: force
        schema:
          type: boolean
      responses:
        "204":
          content: {}
          description: no error
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: No such volume
        "409":
          content: {}
          description: Volume is in use and cannot be removed
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Internal server error
      summary: Remove volume
      tags:
      - volumes
      x-accepts:
      - application/json
  /libpod/volumes/{name}/exists:
    get:
      description: Check if a volume exists
      operationId: VolumeExistsLibpod
      parameters:
      - description: the name of the volume
        in: path
        name: name
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: volume exists
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: No such volume
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Internal server error
      summary: Volume exists
      tags:
      - volumes
      x-accepts:
      - application/json
  /libpod/volumes/{name}/json:
    get:
      operationId: VolumeInspectLibpod
      parameters:
      - description: the name or ID of the volume
        in: path
        name: name
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VolumeConfigResponse"
          description: Volume details
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: No such volume
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Internal server error
      summary: Inspect volume
      tags:
      - volumes
      x-accepts:
      - application/json
  /libpod/volumes/create:
    post:
      operationId: VolumeCreateLibpod
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/VolumeCreateOptions"
          application/x-tar:
            schema:
              $ref: "#/components/schemas/VolumeCreateOptions"
        description: attributes for creating a volume
        required: false
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VolumeConfigResponse"
          description: Volume details
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Internal server error
      summary: Create a volume
      tags:
      - volumes
      x-codegen-request-body-name: create
      x-content-type: application/json
      x-accepts:
      - application/json
  /libpod/volumes/json:
    get:
      description: Returns a list of volumes
      operationId: VolumeListLibpod
      parameters:
      - description: |
          JSON encoded value of the filters (a map[string][]string) to process on the volumes list. Available filters:
            - driver=<volume-driver-name> Matches volumes based on their driver.
            - label=<key> or label=<key>:<value> Matches volumes based on the presence of a label alone or a label and a value.
            - name=<volume-name> Matches all of volume name.
            - opt=<driver-option> Matches a storage driver options
            - `until=<timestamp>` List volumes created before this timestamp. The `<timestamp>` can be Unix timestamps, date formatted timestamps, or Go duration strings (e.g. `10m`, `1h30m`) computed relative to the daemon machine’s time.
        in: query
        name: filters
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/VolumeConfigResponse"
                type: array
          description: Volume list
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Internal server error
      summary: List volumes
      tags:
      - volumes
      x-accepts:
      - application/json
  /libpod/volumes/prune:
    post:
      operationId: VolumePruneLibpod
      parameters:
      - description: |
          JSON encoded value of filters (a map[string][]string) to match volumes against before pruning.
          Available filters:
            - `until=<timestamp>` Prune volumes created before this timestamp. The `<timestamp>` can be Unix timestamps, date formatted timestamps, or Go duration strings (e.g. `10m`, `1h30m`) computed relative to the daemon machine’s time.
            - `label` (`label=<key>`, `label=<key>=<value>`, `label!=<key>`, or `label!=<key>=<value>`) Prune volumes with (or without, in case `label!=...` is used) the specified labels.
        in: query
        name: filters
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/PruneReport"
                type: array
          description: Volume Prune
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Internal server error
      summary: Prune volumes
      tags:
      - volumes
      x-accepts:
      - application/json
  /networks:
    get:
      description: Display summary of network configurations
      operationId: NetworkList
      parameters:
      - description: |
          JSON encoded value of the filters (a `map[string][]string`) to process on the network list. Currently available filters:
            - `name=[name]` Matches network name (accepts regex).
            - `id=[id]` Matches for full or partial ID.
            - `driver=[driver]` Only bridge is supported.
            - `label=[key]` or `label=[key=value]` Matches networks based on the presence of a label alone or a label and a value.
        in: query
        name: filters
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/Inspect"
                type: array
          description: Network list
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Internal server error
      summary: List networks
      tags:
      - networks (compat)
      x-accepts:
      - application/json
  /networks/{name}:
    delete:
      description: Remove a network
      operationId: NetworkDelete
      parameters:
      - description: the name of the network
        in: path
        name: name
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: no error
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: No such network
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Internal server error
      summary: Remove a network
      tags:
      - networks (compat)
      x-accepts:
      - application/json
    get:
      description: Display low level configuration network
      operationId: NetworkInspect
      parameters:
      - description: the name of the network
        in: path
        name: name
        required: true
        schema:
          type: string
      - description: Detailed inspect output for troubleshooting
        in: query
        name: verbose
        schema:
          type: boolean
      - description: "Filter the network by scope (swarm, global, or local)"
        in: query
        name: scope
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Inspect"
          description: Network inspect
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: No such network
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Internal server error
      summary: Inspect a network
      tags:
      - networks (compat)
      x-accepts:
      - application/json
  /networks/{name}/connect:
    post:
      description: Connect a container to a network
      operationId: NetworkConnect
      parameters:
      - description: the name of the network
        in: path
        name: name
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/networkConnectRequest"
          application/x-tar:
            schema:
              $ref: "#/components/schemas/networkConnectRequest"
        description: attributes for connecting a container to a network
        required: false
      responses:
        "200":
          content: {}
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Bad parameter in request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Network is already connected and container is running or transitioning
            to the running state ('initialized')
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Internal server error
      summary: Connect container to network
      tags:
      - networks (compat)
      x-codegen-request-body-name: create
      x-content-type: application/json
      x-accepts:
      - application/json
  /networks/{name}/disconnect:
    post:
      description: Disconnect a container from a network
      operationId: NetworkDisconnect
      parameters:
      - description: the name of the network
        in: path
        name: name
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/networkDisconnectRequest"
          application/x-tar:
            schema:
              $ref: "#/components/schemas/networkDisconnectRequest"
        description: attributes for disconnecting a container from a network
        required: false
      responses:
        "200":
          content: {}
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Bad parameter in request
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Internal server error
      summary: Disconnect container from network
      tags:
      - networks (compat)
      x-codegen-request-body-name: create
      x-content-type: application/json
      x-accepts:
      - application/json
  /networks/create:
    post:
      description: Create a network configuration
      operationId: NetworkCreate
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/networkCreate"
          application/x-tar:
            schema:
              $ref: "#/components/schemas/networkCreate"
        description: attributes for creating a network
        required: false
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NetworkCreate_201_response"
          description: network created
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Bad parameter in request
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Internal server error
      summary: Create network
      tags:
      - networks (compat)
      x-codegen-request-body-name: create
      x-content-type: application/json
      x-accepts:
      - application/json
  /networks/prune:
    post:
      description: Remove networks that do not have containers
      operationId: NetworkPrune
      parameters:
      - description: |
          Filters to process on the prune list, encoded as JSON (a map[string][]string).
          Available filters:
            - `until=<timestamp>` Prune networks created before this timestamp. The <timestamp> can be Unix timestamps, date formatted timestamps, or Go duration strings (e.g. `10m`, `1h30m`) computed relative to the daemon machine’s time.
            - `label` (`label=<key>`, `label=<key>=<value>`, `label!=<key>`, or `label!=<key>=<value>`) Prune networks with (or without, in case `label!=...` is used) the specified labels.
        in: query
        name: filters
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NetworkPrune_200_response"
          description: OK
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Internal server error
      summary: Delete unused networks
      tags:
      - networks (compat)
      x-accepts:
      - application/json
  /secrets:
    get:
      description: Returns a list of secrets
      operationId: SecretList
      parameters:
      - description: |
          JSON encoded value of the filters (a `map[string][]string`) to process on the secrets list. Currently available filters:
            - `name=[name]` Matches secrets name (accepts regex).
            - `id=[id]` Matches for full or partial ID.
        in: query
        name: filters
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/SecretInfoReportCompat"
                type: array
          description: Secret list response
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Internal server error
      summary: List secrets
      tags:
      - secrets (compat)
      x-accepts:
      - application/json
  /secrets/{name}:
    delete:
      operationId: SecretDelete
      parameters:
      - description: the name or ID of the secret
        in: path
        name: name
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: no error
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SecretDeleteLibpod_404_response"
          description: No such secret
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Internal server error
      summary: Remove secret
      tags:
      - secrets (compat)
      x-accepts:
      - application/json
    get:
      operationId: SecretInspect
      parameters:
      - description: the name or ID of the secret
        in: path
        name: name
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SecretInfoReportCompat"
          description: Secret inspect compat
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SecretDeleteLibpod_404_response"
          description: No such secret
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Internal server error
      summary: Inspect secret
      tags:
      - secrets (compat)
      x-accepts:
      - application/json
  /secrets/create:
    post:
      operationId: SecretCreate
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SecretCreate"
          application/x-tar:
            schema:
              $ref: "#/components/schemas/SecretCreate"
        description: |
          attributes for creating a secret
        required: false
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SecretCreateLibpod_201_response"
          description: Secret create response
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SecretDeleteLibpod_404_response"
          description: Secret in use
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Internal server error
      summary: Create a secret
      tags:
      - secrets (compat)
      x-codegen-request-body-name: create
      x-content-type: application/json
      x-accepts:
      - application/json
  /system/df:
    get:
      description: "Return information about disk usage for containers, images, and\
        \ volumes"
      operationId: SystemDataUsage
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SystemDfReport"
          description: Disk usage
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Internal server error
      summary: Show disk usage
      tags:
      - system (compat)
      x-accepts:
      - application/json
  /version:
    get:
      operationId: SystemVersion
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SystemComponentVersion"
          description: Version
      summary: Component Version information
      tags:
      - system (compat)
      x-accepts:
      - application/json
  /volumes:
    get:
      description: Returns a list of volume
      operationId: VolumeList
      parameters:
      - description: |
          JSON encoded value of the filters (a map[string][]string) to process on the volumes list. Available filters:
            - driver=<volume-driver-name> Matches volumes based on their driver.
            - label=<key> or label=<key>:<value> Matches volumes based on the presence of a label alone or a label and a value.
            - name=<volume-name> Matches all of volume name.
            - `until=<timestamp>` List volumes created before this timestamp. The `<timestamp>` can be Unix timestamps, date formatted timestamps, or Go duration strings (e.g. `10m`, `1h30m`) computed relative to the daemon machine’s time.

          Note:
            The boolean `dangling` filter is not yet implemented for this endpoint.
        in: query
        name: filters
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListResponse"
          description: Volume List
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Internal server error
      summary: List volumes
      tags:
      - volumes (compat)
      x-accepts:
      - application/json
  /volumes/{name}:
    delete:
      operationId: VolumeDelete
      parameters:
      - description: the name or ID of the volume
        in: path
        name: name
        required: true
        schema:
          type: string
      - description: |
          Force removal of the volume. This actually only causes errors due
          to the names volume not being found to be suppressed, which is the
          behaviour Docker implements.
        in: query
        name: force
        schema:
          type: boolean
      responses:
        "204":
          content: {}
          description: no error
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: No such volume
        "409":
          content: {}
          description: Volume is in use and cannot be removed
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Internal server error
      summary: Remove volume
      tags:
      - volumes (compat)
      x-accepts:
      - application/json
    get:
      operationId: VolumeInspect
      parameters:
      - description: the name or ID of the volume
        in: path
        name: name
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Volume"
          description: This response definition is used for both the create and inspect
            endpoints
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Internal server error
      summary: Inspect volume
      tags:
      - volumes (compat)
      x-accepts:
      - application/json
  /volumes/create:
    post:
      operationId: VolumeCreate
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/volumeCreate"
          application/x-tar:
            schema:
              $ref: "#/components/schemas/volumeCreate"
        description: |
          attributes for creating a volume.
          Note: If a volume by the same name exists, a 201 response with that volume's information will be generated.
        required: false
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Volume"
          description: This response definition is used for both the create and inspect
            endpoints
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Internal server error
      summary: Create a volume
      tags:
      - volumes (compat)
      x-codegen-request-body-name: create
      x-content-type: application/json
      x-accepts:
      - application/json
  /volumes/prune:
    post:
      operationId: VolumePrune
      parameters:
      - description: |
          JSON encoded value of filters (a map[string][]string) to match volumes against before pruning.
          Available filters:
            - `until=<timestamp>` Prune volumes created before this timestamp. The `<timestamp>` can be Unix timestamps, date formatted timestamps, or Go duration strings (e.g. `10m`, `1h30m`) computed relative to the daemon machine’s time.
            - `label` (`label=<key>`, `label=<key>=<value>`, `label!=<key>`, or `label!=<key>=<value>`) Prune volumes with (or without, in case `label!=...` is used) the specified labels.
        in: query
        name: filters
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PruneReport"
          description: Volume prune
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Internal server error
      summary: Prune volumes
      tags:
      - volumes (compat)
      x-accepts:
      - application/json
components:
  responses:
    NoSuchSecret:
      content:
        application/json:
          schema:
            properties:
              cause:
                description: API root cause formatted for automated parsing
                example: API root cause
                type: string
                x-go-name: Because
              message:
                description: "human error message, formatted for a human to read"
                example: human error message
                type: string
                x-go-name: Message
              response:
                description: HTTP response code
                format: int64
                minimum: 400
                type: integer
                x-go-name: ResponseCode
            type: object
        application/octet-stream:
          schema:
            properties:
              cause:
                description: API root cause formatted for automated parsing
                example: API root cause
                type: string
                x-go-name: Because
              message:
                description: "human error message, formatted for a human to read"
                example: human error message
                type: string
                x-go-name: Message
              response:
                description: HTTP response code
                format: int64
                minimum: 400
                type: integer
                x-go-name: ResponseCode
            type: object
        text/plain:
          schema:
            properties:
              cause:
                description: API root cause formatted for automated parsing
                example: API root cause
                type: string
                x-go-name: Because
              message:
                description: "human error message, formatted for a human to read"
                example: human error message
                type: string
                x-go-name: Message
              response:
                description: HTTP response code
                format: int64
                minimum: 400
                type: integer
                x-go-name: ResponseCode
            type: object
      description: No such secret
    SecretCreateResponse:
      content:
        application/json:
          schema:
            properties:
              ID:
                type: string
            type: object
        application/octet-stream:
          schema:
            properties:
              ID:
                type: string
            type: object
        text/plain:
          schema:
            properties:
              ID:
                type: string
            type: object
      description: Secret create response
    SecretInUse:
      content:
        application/json:
          schema:
            properties:
              cause:
                description: API root cause formatted for automated parsing
                example: API root cause
                type: string
                x-go-name: Because
              message:
                description: "human error message, formatted for a human to read"
                example: human error message
                type: string
                x-go-name: Message
              response:
                description: HTTP response code
                format: int64
                minimum: 400
                type: integer
                x-go-name: ResponseCode
            type: object
        application/octet-stream:
          schema:
            properties:
              cause:
                description: API root cause formatted for automated parsing
                example: API root cause
                type: string
                x-go-name: Because
              message:
                description: "human error message, formatted for a human to read"
                example: human error message
                type: string
                x-go-name: Message
              response:
                description: HTTP response code
                format: int64
                minimum: 400
                type: integer
                x-go-name: ResponseCode
            type: object
        text/plain:
          schema:
            properties:
              cause:
                description: API root cause formatted for automated parsing
                example: API root cause
                type: string
                x-go-name: Because
              message:
                description: "human error message, formatted for a human to read"
                example: human error message
                type: string
                x-go-name: Message
              response:
                description: HTTP response code
                format: int64
                minimum: 400
                type: integer
                x-go-name: ResponseCode
            type: object
      description: Secret in use
    SecretInspectCompatResponse:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/SecretInfoReportCompat"
        application/octet-stream:
          schema:
            $ref: "#/components/schemas/SecretInfoReportCompat"
        text/plain:
          schema:
            $ref: "#/components/schemas/SecretInfoReportCompat"
      description: Secret inspect compat
    SecretInspectResponse:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/SecretInfoReport"
        application/octet-stream:
          schema:
            $ref: "#/components/schemas/SecretInfoReport"
        text/plain:
          schema:
            $ref: "#/components/schemas/SecretInfoReport"
      description: Secret inspect response
    SecretListCompatResponse:
      content:
        application/json:
          schema:
            items:
              $ref: "#/components/schemas/SecretInfoReportCompat"
            type: array
        application/octet-stream:
          schema:
            items:
              $ref: "#/components/schemas/SecretInfoReportCompat"
            type: array
        text/plain:
          schema:
            items:
              $ref: "#/components/schemas/SecretInfoReportCompat"
            type: array
      description: Secret list response
    SecretListResponse:
      content:
        application/json:
          schema:
            items:
              $ref: "#/components/schemas/SecretInfoReport"
            type: array
        application/octet-stream:
          schema:
            items:
              $ref: "#/components/schemas/SecretInfoReport"
            type: array
        text/plain:
          schema:
            items:
              $ref: "#/components/schemas/SecretInfoReport"
            type: array
      description: Secret list response
    badParamError:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorModel"
        application/octet-stream:
          schema:
            $ref: "#/components/schemas/ErrorModel"
        text/plain:
          schema:
            $ref: "#/components/schemas/ErrorModel"
      description: Bad parameter in request
    conflictError:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorModel"
        application/octet-stream:
          schema:
            $ref: "#/components/schemas/ErrorModel"
        text/plain:
          schema:
            $ref: "#/components/schemas/ErrorModel"
      description: Conflict error in operation
    containerAlreadyStartedError:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorModel"
        application/octet-stream:
          schema:
            $ref: "#/components/schemas/ErrorModel"
        text/plain:
          schema:
            $ref: "#/components/schemas/ErrorModel"
      description: Container already started
    containerAlreadyStoppedError:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorModel"
        application/octet-stream:
          schema:
            $ref: "#/components/schemas/ErrorModel"
        text/plain:
          schema:
            $ref: "#/components/schemas/ErrorModel"
      description: Container already stopped
    containerCreateResponse:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ContainerCreateResponse"
        application/octet-stream:
          schema:
            $ref: "#/components/schemas/ContainerCreateResponse"
        text/plain:
          schema:
            $ref: "#/components/schemas/ContainerCreateResponse"
      description: Create container
    containerInspectResponse:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ContainerJSON"
        application/octet-stream:
          schema:
            $ref: "#/components/schemas/ContainerJSON"
        text/plain:
          schema:
            $ref: "#/components/schemas/ContainerJSON"
      description: Inspect container
    containerInspectResponseLibpod:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/InspectContainerData"
        application/octet-stream:
          schema:
            $ref: "#/components/schemas/InspectContainerData"
        text/plain:
          schema:
            $ref: "#/components/schemas/InspectContainerData"
      description: Inspect container
    containerNotFound:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorModel"
        application/octet-stream:
          schema:
            $ref: "#/components/schemas/ErrorModel"
        text/plain:
          schema:
            $ref: "#/components/schemas/ErrorModel"
      description: No such container
    containerRemoveLibpod:
      content:
        application/json:
          schema:
            items:
              $ref: "#/components/schemas/LibpodContainersRmReport"
            type: array
        application/octet-stream:
          schema:
            items:
              $ref: "#/components/schemas/LibpodContainersRmReport"
            type: array
        text/plain:
          schema:
            items:
              $ref: "#/components/schemas/LibpodContainersRmReport"
            type: array
      description: Remove Containers
    containerStats:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ContainerStats"
        application/octet-stream:
          schema:
            $ref: "#/components/schemas/ContainerStats"
        text/plain:
          schema:
            $ref: "#/components/schemas/ContainerStats"
      description: Get stats for one or more containers
    containerTopResponse:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ContainerTopOKBody"
        application/octet-stream:
          schema:
            $ref: "#/components/schemas/ContainerTopOKBody"
        text/plain:
          schema:
            $ref: "#/components/schemas/ContainerTopOKBody"
      description: List processes in container
    containerWaitResponse:
      content:
        application/json:
          schema:
            properties:
              Error:
                properties:
                  Message:
                    type: string
                type: object
              StatusCode:
                description: container exit code
                format: int64
                type: integer
            type: object
        application/octet-stream:
          schema:
            properties:
              Error:
                properties:
                  Message:
                    type: string
                type: object
              StatusCode:
                description: container exit code
                format: int64
                type: integer
            type: object
        text/plain:
          schema:
            properties:
              Error:
                properties:
                  Message:
                    type: string
                type: object
              StatusCode:
                description: container exit code
                format: int64
                type: integer
            type: object
      description: Wait container
    containersList:
      content:
        application/json:
          schema:
            items:
              $ref: "#/components/schemas/Container"
            type: array
        application/octet-stream:
          schema:
            items:
              $ref: "#/components/schemas/Container"
            type: array
        text/plain:
          schema:
            items:
              $ref: "#/components/schemas/Container"
            type: array
      description: List Containers
    containersListLibpod:
      content:
        application/json:
          schema:
            items:
              $ref: "#/components/schemas/ListContainer"
            type: array
        application/octet-stream:
          schema:
            items:
              $ref: "#/components/schemas/ListContainer"
            type: array
        text/plain:
          schema:
            items:
              $ref: "#/components/schemas/ListContainer"
            type: array
      description: List Containers
    containersPrune:
      content:
        application/json:
          schema:
            items:
              $ref: "#/components/schemas/ContainersPruneReport"
            type: array
        application/octet-stream:
          schema:
            items:
              $ref: "#/components/schemas/ContainersPruneReport"
            type: array
        text/plain:
          schema:
            items:
              $ref: "#/components/schemas/ContainersPruneReport"
            type: array
      description: Prune Containers
    containersPruneLibpod:
      content:
        application/json:
          schema:
            items:
              $ref: "#/components/schemas/ContainersPruneReportLibpod"
            type: array
        application/octet-stream:
          schema:
            items:
              $ref: "#/components/schemas/ContainersPruneReportLibpod"
            type: array
        text/plain:
          schema:
            items:
              $ref: "#/components/schemas/ContainersPruneReportLibpod"
            type: array
      description: Prune Containers
    execSessionInspect:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/InspectExecSession"
        application/octet-stream:
          schema:
            $ref: "#/components/schemas/InspectExecSession"
        text/plain:
          schema:
            $ref: "#/components/schemas/InspectExecSession"
      description: Exec Session Inspect
    execSessionNotFound:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorModel"
        application/octet-stream:
          schema:
            $ref: "#/components/schemas/ErrorModel"
        text/plain:
          schema:
            $ref: "#/components/schemas/ErrorModel"
      description: No such exec instance
    healthCheck:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/HealthCheckResults"
        application/octet-stream:
          schema:
            $ref: "#/components/schemas/HealthCheckResults"
        text/plain:
          schema:
            $ref: "#/components/schemas/HealthCheckResults"
      description: Healthcheck Results
    history:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/HistoryResponse"
        application/octet-stream:
          schema:
            $ref: "#/components/schemas/HistoryResponse"
        text/plain:
          schema:
            $ref: "#/components/schemas/HistoryResponse"
      description: Image History
    imageDeleteResponse:
      content:
        application/json:
          schema:
            items:
              properties:
                deleted:
                  type: string
                  x-go-name: Deleted
                untagged:
                  items:
                    type: string
                  type: array
                  x-go-name: Untagged
              type: object
            type: array
        application/octet-stream:
          schema:
            items:
              properties:
                deleted:
                  type: string
                  x-go-name: Deleted
                untagged:
                  items:
                    type: string
                  type: array
                  x-go-name: Untagged
              type: object
            type: array
        text/plain:
          schema:
            items:
              properties:
                deleted:
                  type: string
                  x-go-name: Deleted
                untagged:
                  items:
                    type: string
                  type: array
                  x-go-name: Untagged
              type: object
            type: array
      description: Image Delete
    imageInspect:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ImageInspect"
        application/octet-stream:
          schema:
            $ref: "#/components/schemas/ImageInspect"
        text/plain:
          schema:
            $ref: "#/components/schemas/ImageInspect"
      description: Image Inspect
    imageList:
      content:
        application/json:
          schema:
            items:
              $ref: "#/components/schemas/Summary"
            type: array
        application/octet-stream:
          schema:
            items:
              $ref: "#/components/schemas/Summary"
            type: array
        text/plain:
          schema:
            items:
              $ref: "#/components/schemas/Summary"
            type: array
      description: Image summary for compat API
    imageListLibpod:
      content:
        application/json:
          schema:
            items:
              $ref: "#/components/schemas/LibpodImageSummary"
            type: array
        application/octet-stream:
          schema:
            items:
              $ref: "#/components/schemas/LibpodImageSummary"
            type: array
        text/plain:
          schema:
            items:
              $ref: "#/components/schemas/LibpodImageSummary"
            type: array
      description: Image summary for libpod API
    imageNotFound:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorModel"
        application/octet-stream:
          schema:
            $ref: "#/components/schemas/ErrorModel"
        text/plain:
          schema:
            $ref: "#/components/schemas/ErrorModel"
      description: No such image
    imagesImportResponseLibpod:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ImageImportReport"
        application/octet-stream:
          schema:
            $ref: "#/components/schemas/ImageImportReport"
        text/plain:
          schema:
            $ref: "#/components/schemas/ImageImportReport"
      description: Image Import
    imagesLoadResponseLibpod:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ImageLoadReport"
        application/octet-stream:
          schema:
            $ref: "#/components/schemas/ImageLoadReport"
        text/plain:
          schema:
            $ref: "#/components/schemas/ImageLoadReport"
      description: Image Load
    imagesPruneLibpod:
      content:
        application/json:
          schema:
            items:
              $ref: "#/components/schemas/PruneReport"
            type: array
        application/octet-stream:
          schema:
            items:
              $ref: "#/components/schemas/PruneReport"
            type: array
        text/plain:
          schema:
            items:
              $ref: "#/components/schemas/PruneReport"
            type: array
      description: Image Prune
    imagesPullResponseLibpod:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/LibpodImagesPullReport"
        application/octet-stream:
          schema:
            $ref: "#/components/schemas/LibpodImagesPullReport"
        text/plain:
          schema:
            $ref: "#/components/schemas/LibpodImagesPullReport"
      description: Image Pull
    imagesRemoveResponseLibpod:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/LibpodImagesRemoveReport"
        application/octet-stream:
          schema:
            $ref: "#/components/schemas/LibpodImagesRemoveReport"
        text/plain:
          schema:
            $ref: "#/components/schemas/LibpodImagesRemoveReport"
      description: Image Remove
    imagesScpResponseLibpod:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ScpReport"
        application/octet-stream:
          schema:
            $ref: "#/components/schemas/ScpReport"
        text/plain:
          schema:
            $ref: "#/components/schemas/ScpReport"
      description: Image Scp
    infoResponse:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/LibpodInfo"
        application/octet-stream:
          schema:
            $ref: "#/components/schemas/LibpodInfo"
        text/plain:
          schema:
            $ref: "#/components/schemas/LibpodInfo"
      description: Info
    inspectImageResponseLibpod:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ImageData"
        application/octet-stream:
          schema:
            $ref: "#/components/schemas/ImageData"
        text/plain:
          schema:
            $ref: "#/components/schemas/ImageData"
      description: Inspect Image
    internalError:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorModel"
        application/octet-stream:
          schema:
            $ref: "#/components/schemas/ErrorModel"
        text/plain:
          schema:
            $ref: "#/components/schemas/ErrorModel"
      description: Internal server error
    manifestInspect:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Schema2ListPublic"
        application/octet-stream:
          schema:
            $ref: "#/components/schemas/Schema2ListPublic"
        text/plain:
          schema:
            $ref: "#/components/schemas/Schema2ListPublic"
      description: Inspect Manifest
    manifestNotFound:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorModel"
        application/octet-stream:
          schema:
            $ref: "#/components/schemas/ErrorModel"
        text/plain:
          schema:
            $ref: "#/components/schemas/ErrorModel"
      description: No such manifest
    networkConnectedError:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorModel"
        application/octet-stream:
          schema:
            $ref: "#/components/schemas/ErrorModel"
        text/plain:
          schema:
            $ref: "#/components/schemas/ErrorModel"
      description: Network is already connected and container is running or transitioning
        to the running state ('initialized')
    networkCreateResponse:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Network"
        application/octet-stream:
          schema:
            $ref: "#/components/schemas/Network"
        text/plain:
          schema:
            $ref: "#/components/schemas/Network"
      description: Network create
    networkInspectCompat:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Inspect"
        application/octet-stream:
          schema:
            $ref: "#/components/schemas/Inspect"
        text/plain:
          schema:
            $ref: "#/components/schemas/Inspect"
      description: Network inspect
    networkInspectResponse:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/NetworkInspectReport"
        application/octet-stream:
          schema:
            $ref: "#/components/schemas/NetworkInspectReport"
        text/plain:
          schema:
            $ref: "#/components/schemas/NetworkInspectReport"
      description: Network inspect
    networkListCompat:
      content:
        application/json:
          schema:
            items:
              $ref: "#/components/schemas/Inspect"
            type: array
        application/octet-stream:
          schema:
            items:
              $ref: "#/components/schemas/Inspect"
            type: array
        text/plain:
          schema:
            items:
              $ref: "#/components/schemas/Inspect"
            type: array
      description: Network list
    networkListLibpod:
      content:
        application/json:
          schema:
            items:
              $ref: "#/components/schemas/Network"
            type: array
        application/octet-stream:
          schema:
            items:
              $ref: "#/components/schemas/Network"
            type: array
        text/plain:
          schema:
            items:
              $ref: "#/components/schemas/Network"
            type: array
      description: Network list
    networkNotFound:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorModel"
        application/octet-stream:
          schema:
            $ref: "#/components/schemas/ErrorModel"
        text/plain:
          schema:
            $ref: "#/components/schemas/ErrorModel"
      description: No such network
    networkPruneResponse:
      content:
        application/json:
          schema:
            items:
              $ref: "#/components/schemas/NetworkPruneReport"
            type: array
        application/octet-stream:
          schema:
            items:
              $ref: "#/components/schemas/NetworkPruneReport"
            type: array
        text/plain:
          schema:
            items:
              $ref: "#/components/schemas/NetworkPruneReport"
            type: array
      description: Network prune
    networkRmResponse:
      content:
        application/json:
          schema:
            items:
              $ref: "#/components/schemas/NetworkRmReport"
            type: array
        application/octet-stream:
          schema:
            items:
              $ref: "#/components/schemas/NetworkRmReport"
            type: array
        text/plain:
          schema:
            items:
              $ref: "#/components/schemas/NetworkRmReport"
            type: array
      description: Network Delete
    ok:
      content:
        application/json:
          schema:
            type: object
        application/octet-stream:
          schema:
            type: object
        text/plain:
          schema:
            type: object
      description: Success
    playKubeResponseLibpod:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/PlayKubeReport"
        application/octet-stream:
          schema:
            $ref: "#/components/schemas/PlayKubeReport"
        text/plain:
          schema:
            $ref: "#/components/schemas/PlayKubeReport"
      description: PlayKube response
    podAlreadyStartedError:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorModel"
        application/octet-stream:
          schema:
            $ref: "#/components/schemas/ErrorModel"
        text/plain:
          schema:
            $ref: "#/components/schemas/ErrorModel"
      description: Pod already started
    podAlreadyStoppedError:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorModel"
        application/octet-stream:
          schema:
            $ref: "#/components/schemas/ErrorModel"
        text/plain:
          schema:
            $ref: "#/components/schemas/ErrorModel"
      description: Pod already stopped
    podInspectResponse:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/InspectPodData"
        application/octet-stream:
          schema:
            $ref: "#/components/schemas/InspectPodData"
        text/plain:
          schema:
            $ref: "#/components/schemas/InspectPodData"
      description: Inspect pod
    podKillResponse:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/PodKillReport"
        application/octet-stream:
          schema:
            $ref: "#/components/schemas/PodKillReport"
        text/plain:
          schema:
            $ref: "#/components/schemas/PodKillReport"
      description: Kill Pod
    podNotFound:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorModel"
        application/octet-stream:
          schema:
            $ref: "#/components/schemas/ErrorModel"
        text/plain:
          schema:
            $ref: "#/components/schemas/ErrorModel"
      description: No such pod
    podPauseResponse:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/PodPauseReport"
        application/octet-stream:
          schema:
            $ref: "#/components/schemas/PodPauseReport"
        text/plain:
          schema:
            $ref: "#/components/schemas/PodPauseReport"
      description: Pause pod
    podPruneResponse:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/PodPruneReport"
        application/octet-stream:
          schema:
            $ref: "#/components/schemas/PodPruneReport"
        text/plain:
          schema:
            $ref: "#/components/schemas/PodPruneReport"
      description: Prune pod
    podRestartResponse:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/PodRestartReport"
        application/octet-stream:
          schema:
            $ref: "#/components/schemas/PodRestartReport"
        text/plain:
          schema:
            $ref: "#/components/schemas/PodRestartReport"
      description: Restart pod
    podRmResponse:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/PodRmReport"
        application/octet-stream:
          schema:
            $ref: "#/components/schemas/PodRmReport"
        text/plain:
          schema:
            $ref: "#/components/schemas/PodRmReport"
      description: Rm pod
    podStartResponse:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/PodStartReport"
        application/octet-stream:
          schema:
            $ref: "#/components/schemas/PodStartReport"
        text/plain:
          schema:
            $ref: "#/components/schemas/PodStartReport"
      description: Start pod
    podStatsResponse:
      content:
        application/json:
          schema:
            items:
              $ref: "#/components/schemas/PodStatsReport"
            type: array
        application/octet-stream:
          schema:
            items:
              $ref: "#/components/schemas/PodStatsReport"
            type: array
        text/plain:
          schema:
            items:
              $ref: "#/components/schemas/PodStatsReport"
            type: array
      description: Pod Statistics
    podStopResponse:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/PodStopReport"
        application/octet-stream:
          schema:
            $ref: "#/components/schemas/PodStopReport"
        text/plain:
          schema:
            $ref: "#/components/schemas/PodStopReport"
      description: Stop pod
    podTopResponse:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/PodTopOKBody"
        application/octet-stream:
          schema:
            $ref: "#/components/schemas/PodTopOKBody"
        text/plain:
          schema:
            $ref: "#/components/schemas/PodTopOKBody"
      description: List processes in pod
    podUnpauseResponse:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/PodUnpauseReport"
        application/octet-stream:
          schema:
            $ref: "#/components/schemas/PodUnpauseReport"
        text/plain:
          schema:
            $ref: "#/components/schemas/PodUnpauseReport"
      description: Unpause pod
    podsListResponse:
      content:
        application/json:
          schema:
            items:
              $ref: "#/components/schemas/ListPodsReport"
            type: array
        application/octet-stream:
          schema:
            items:
              $ref: "#/components/schemas/ListPodsReport"
            type: array
        text/plain:
          schema:
            items:
              $ref: "#/components/schemas/ListPodsReport"
            type: array
      description: List pods
    registrySearchResponse:
      content:
        application/json:
          schema:
            properties:
              Automated:
                description: Automated indicates if the image was created by an automated
                  build.
                type: string
              Description:
                description: Description of the image.
                type: string
              Index:
                description: Index is the image index
                example: quay.io
                type: string
              Name:
                description: Name is the canonical name of the image
                example: docker.io/library/alpine"
                type: string
              Official:
                description: Official indicates if it's an official image.
                type: string
              Stars:
                description: Stars is the number of stars of the image.
                format: int64
                type: integer
              Tag:
                description: Tag is the image tag
                type: string
            type: object
        application/octet-stream:
          schema:
            properties:
              Automated:
                description: Automated indicates if the image was created by an automated
                  build.
                type: string
              Description:
                description: Description of the image.
                type: string
              Index:
                description: Index is the image index
                example: quay.io
                type: string
              Name:
                description: Name is the canonical name of the image
                example: docker.io/library/alpine"
                type: string
              Official:
                description: Official indicates if it's an official image.
                type: string
              Stars:
                description: Stars is the number of stars of the image.
                format: int64
                type: integer
              Tag:
                description: Tag is the image tag
                type: string
            type: object
        text/plain:
          schema:
            properties:
              Automated:
                description: Automated indicates if the image was created by an automated
                  build.
                type: string
              Description:
                description: Description of the image.
                type: string
              Index:
                description: Index is the image index
                example: quay.io
                type: string
              Name:
                description: Name is the canonical name of the image
                example: docker.io/library/alpine"
                type: string
              Official:
                description: Official indicates if it's an official image.
                type: string
              Stars:
                description: Stars is the number of stars of the image.
                format: int64
                type: integer
              Tag:
                description: Tag is the image tag
                type: string
            type: object
      description: Registry Search
    systemAuthResponse:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/AuthReport"
        application/octet-stream:
          schema:
            $ref: "#/components/schemas/AuthReport"
        text/plain:
          schema:
            $ref: "#/components/schemas/AuthReport"
      description: Auth response
    systemCheckResponse:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/SystemCheckReport"
        application/octet-stream:
          schema:
            $ref: "#/components/schemas/SystemCheckReport"
        text/plain:
          schema:
            $ref: "#/components/schemas/SystemCheckReport"
      description: Check
    systemDiskUsage:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/SystemDfReport"
        application/octet-stream:
          schema:
            $ref: "#/components/schemas/SystemDfReport"
        text/plain:
          schema:
            $ref: "#/components/schemas/SystemDfReport"
      description: Disk usage
    systemPruneResponse:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/SystemPruneReport"
        application/octet-stream:
          schema:
            $ref: "#/components/schemas/SystemPruneReport"
        text/plain:
          schema:
            $ref: "#/components/schemas/SystemPruneReport"
      description: System Prune results
    treeResponse:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ImageTreeReport"
        application/octet-stream:
          schema:
            $ref: "#/components/schemas/ImageTreeReport"
        text/plain:
          schema:
            $ref: "#/components/schemas/ImageTreeReport"
      description: Image Tree
    versionResponse:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/SystemComponentVersion"
        application/octet-stream:
          schema:
            $ref: "#/components/schemas/SystemComponentVersion"
        text/plain:
          schema:
            $ref: "#/components/schemas/SystemComponentVersion"
      description: Version
    volumeCreateResponse:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/VolumeConfigResponse"
        application/octet-stream:
          schema:
            $ref: "#/components/schemas/VolumeConfigResponse"
        text/plain:
          schema:
            $ref: "#/components/schemas/VolumeConfigResponse"
      description: Volume details
    volumeInspect:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Volume"
        application/octet-stream:
          schema:
            $ref: "#/components/schemas/Volume"
        text/plain:
          schema:
            $ref: "#/components/schemas/Volume"
      description: This response definition is used for both the create and inspect
        endpoints
    volumeList:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ListResponse"
        application/octet-stream:
          schema:
            $ref: "#/components/schemas/ListResponse"
        text/plain:
          schema:
            $ref: "#/components/schemas/ListResponse"
      description: Volume List
    volumeListLibpod:
      content:
        application/json:
          schema:
            items:
              $ref: "#/components/schemas/VolumeConfigResponse"
            type: array
        application/octet-stream:
          schema:
            items:
              $ref: "#/components/schemas/VolumeConfigResponse"
            type: array
        text/plain:
          schema:
            items:
              $ref: "#/components/schemas/VolumeConfigResponse"
            type: array
      description: Volume list
    volumeNotFound:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorModel"
        application/octet-stream:
          schema:
            $ref: "#/components/schemas/ErrorModel"
        text/plain:
          schema:
            $ref: "#/components/schemas/ErrorModel"
      description: No such volume
    volumePruneLibpod:
      content:
        application/json:
          schema:
            items:
              $ref: "#/components/schemas/PruneReport"
            type: array
        application/octet-stream:
          schema:
            items:
              $ref: "#/components/schemas/PruneReport"
            type: array
        text/plain:
          schema:
            items:
              $ref: "#/components/schemas/PruneReport"
            type: array
      description: Volume Prune
    volumePruneResponse:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/PruneReport"
        application/octet-stream:
          schema:
            $ref: "#/components/schemas/PruneReport"
        text/plain:
          schema:
            $ref: "#/components/schemas/PruneReport"
      description: Volume prune
  schemas:
    AccessMode:
      example:
        Scope: Scope
        Sharing: Sharing
        BlockVolume: "{}"
        MountVolume:
          MountFlags:
          - MountFlags
          - MountFlags
          FsType: FsType
      properties:
        BlockVolume:
          description: Intentionally empty.
          title: TypeBlock defines options for using a volume as a block-type volume.
          type: object
          x-go-package: github.com/docker/docker/api/types/volume
        MountVolume:
          $ref: "#/components/schemas/TypeMount"
        Scope:
          description: |-
            Scope defines the Scope of a Cluster Volume. This is how many nodes a
            Volume can be accessed simultaneously on.
          type: string
          x-go-package: github.com/docker/docker/api/types/volume
        Sharing:
          description: |-
            SharingMode defines the Sharing of a Cluster Volume. This is how Tasks using a
            Volume at the same time can use it.
          type: string
          x-go-package: github.com/docker/docker/api/types/volume
      title: AccessMode defines the access mode of a volume.
      type: object
      x-go-package: github.com/docker/docker/api/types/volume
    Address:
      example:
        PrefixLength: 0
        Addr: Addr
      properties:
        Addr:
          type: string
        PrefixLength:
          format: int64
          type: integer
      title: Address represents an IP address.
      type: object
      x-go-package: github.com/containers/podman/v5/libpod/define
    AttestationProperties:
      example:
        For: For
      properties:
        For:
          description: |-
            The following is an example of the contents of Digest types:

            sha256:7173b809ca12ec5dee4506cd86be934c4596dd234ee82c0662eac04a8c2c71dc

            This allows to abstract the digest behind this type and work only in those
            terms.
          title: |-
            Digest allows simple protection of hex formatted digest strings, prefixed
            by their algorithm. Strings of type Digest have some guarantee of being in
            the correct format and it provides quick access to the components of a
            digest string.
          type: string
          x-go-package: github.com/opencontainers/go-digest
      type: object
      x-go-package: github.com/docker/docker/api/types/image
    AuthConfig:
      description: AuthConfig contains authorization information for connecting to
        a Registry
      example:
        serveraddress: serveraddress
        password: password
        auth: auth
        identitytoken: identitytoken
        registrytoken: registrytoken
        email: email
        username: username
      properties:
        auth:
          type: string
          x-go-name: Auth
        email:
          description: |-
            Email is an optional value associated with the username.
            This field is deprecated and will be removed in a later
            version of docker.
          type: string
          x-go-name: Email
        identitytoken:
          description: |-
            IdentityToken is used to authenticate the user and get
            an access token for the registry.
          type: string
          x-go-name: IdentityToken
        password:
          type: string
          x-go-name: Password
        registrytoken:
          description: RegistryToken is a bearer token to be sent to a registry
          type: string
          x-go-name: RegistryToken
        serveraddress:
          type: string
          x-go-name: ServerAddress
        username:
          type: string
          x-go-name: Username
      type: object
      x-go-package: github.com/containers/podman/v5/pkg/domain/entities/types
    AuthReport:
      description: AuthReport describes the response for authentication check
      example:
        Status: Status
        IdentityToken: IdentityToken
      properties:
        IdentityToken:
          type: string
        Status:
          type: string
      type: object
      x-go-package: github.com/containers/podman/v5/pkg/domain/entities/types
    AuthenticateOKBody:
      description: AuthenticateOKBody authenticate o k body
      properties:
        IdentityToken:
          description: An opaque token used to authenticate a user after a successful
            login
          type: string
        Status:
          description: The status of the authentication
          type: string
      required:
      - IdentityToken
      - Status
      type: object
      x-go-package: github.com/docker/docker/api/types/registry
    AutoUserNsOptions:
      example:
        PasswdFile: PasswdFile
        AdditionalGIDMappings:
        - size: 4
          container_id: 3
          host_id: 2
        - size: 4
          container_id: 3
          host_id: 2
        Size: 1
        InitialSize: 7
        AdditionalUIDMappings:
        - size: 4
          container_id: 3
          host_id: 2
        - size: 4
          container_id: 3
          host_id: 2
        GroupFile: GroupFile
      properties:
        AdditionalGIDMappings:
          description: |-
            AdditionalGIDMappings specified additional GID mappings to include in
            the generated user namespace.
          items:
            $ref: "#/components/schemas/IDMap"
          type: array
        AdditionalUIDMappings:
          description: |-
            AdditionalUIDMappings specified additional UID mappings to include in
            the generated user namespace.
          items:
            $ref: "#/components/schemas/IDMap"
          type: array
        GroupFile:
          description: GroupFile to use if the container uses a volume.
          type: string
        InitialSize:
          description: |-
            InitialSize defines the minimum size for the user namespace.
            The created user namespace will have at least this size.
          format: uint32
          type: integer
        PasswdFile:
          description: PasswdFile to use if the container uses a volume.
          type: string
        Size:
          description: |-
            Size defines the size for the user namespace.  If it is set to a
            value bigger than 0, the user namespace will have exactly this size.
            If it is not set, some heuristics will be used to find its size.
          format: uint32
          type: integer
      title: AutoUserNsOptions defines how to automatically create a user namespace.
      type: object
      x-go-package: github.com/containers/storage/types
    Availability:
      title: Availability specifies the availability of the volume.
      type: string
      x-go-package: github.com/docker/docker/api/types/volume
    BindOptions:
      example:
        ReadOnlyForceRecursive: true
        NonRecursive: true
        Propagation: Propagation
        ReadOnlyNonRecursive: true
        CreateMountpoint: true
      properties:
        CreateMountpoint:
          type: boolean
        NonRecursive:
          type: boolean
        Propagation:
          title: Propagation represents the propagation of a mount.
          type: string
          x-go-package: github.com/docker/docker/api/types/mount
        ReadOnlyForceRecursive:
          description: ReadOnlyForceRecursive raises an error if the mount cannot
            be made recursively read-only.
          type: boolean
        ReadOnlyNonRecursive:
          description: |-
            ReadOnlyNonRecursive makes the mount non-recursively read-only, but still leaves the mount recursive
            (unless NonRecursive is set to true in conjunction).
          type: boolean
      title: BindOptions defines options specific to mounts of type "bind".
      type: object
      x-go-package: github.com/docker/docker/api/types/mount
    CPUUsage:
      example:
        userPercent: 1.4658129805029452
        systemPercent: 6.027456183070403
        idlePercent: 0.8008281904610115
      properties:
        idlePercent:
          format: double
          type: number
          x-go-name: IdlePercent
        systemPercent:
          format: double
          type: number
          x-go-name: SystemPercent
        userPercent:
          format: double
          type: number
          x-go-name: UserPercent
      type: object
      x-go-package: github.com/containers/podman/v5/libpod/define
    CapacityRange:
      description: |-
        CapacityRange describes the minimum and maximum capacity a volume should be
        created with
      example:
        RequiredBytes: 1
        LimitBytes: 6
      properties:
        LimitBytes:
          description: |-
            LimitBytes specifies that a volume must not be bigger than this. The
            value of 0 indicates an unspecified maximum
          format: int64
          type: integer
        RequiredBytes:
          description: |-
            RequiredBytes specifies that a volume must be at least this big. The
            value of 0 indicates an unspecified minimum.
          format: int64
          type: integer
      type: object
      x-go-package: github.com/docker/docker/api/types/volume
    CgroupSpec:
      title: CgroupSpec represents the cgroup to use for the container.
      type: string
      x-go-package: github.com/docker/docker/api/types/container
    CgroupnsMode:
      description: CgroupnsMode represents the cgroup namespace mode of the container
      type: string
      x-go-package: github.com/docker/docker/api/types/container
    ChangeType:
      description: |-
        Can be one of:

        `0`: Modified ("C")
        `1`: Added ("A")
        `2`: Deleted ("D")
      format: uint8
      title: ChangeType Kind of change
      type: integer
      x-go-package: github.com/docker/docker/api/types/container
    ClusterOptions:
      title: ClusterOptions specifies options for a Cluster volume.
      type: object
      x-go-package: github.com/docker/docker/api/types/mount
    ClusterVolume:
      description: |-
        ClusterVolume contains options and information specific to, and only present
        on, Swarm CSI cluster volumes.
      example:
        Version:
          Index: 7
        CreatedAt: 2000-01-23T04:56:07.000+00:00
        ID: ID
        Info:
          VolumeID: VolumeID
          VolumeContext:
            key: VolumeContext
          CapacityBytes: 0
          AccessibleTopology:
          - Segments:
              key: Segments
          - Segments:
              key: Segments
        Spec:
          Availability: Availability
          Group: Group
          Secrets:
          - Secret: Secret
            Key: Key
          - Secret: Secret
            Key: Key
          AccessMode:
            Scope: Scope
            Sharing: Sharing
            BlockVolume: "{}"
            MountVolume:
              MountFlags:
              - MountFlags
              - MountFlags
              FsType: FsType
          AccessibilityRequirements:
            Preferred:
            - Segments:
                key: Segments
            - Segments:
                key: Segments
            Requisite:
            - Segments:
                key: Segments
            - Segments:
                key: Segments
          CapacityRange:
            RequiredBytes: 1
            LimitBytes: 6
        UpdatedAt: 2000-01-23T04:56:07.000+00:00
        PublishStatus:
        - PublishContext:
            key: PublishContext
          State: State
          NodeID: NodeID
        - PublishContext:
            key: PublishContext
          State: State
          NodeID: NodeID
      properties:
        CreatedAt:
          format: date-time
          type: string
        ID:
          description: |-
            ID is the Swarm ID of the volume. Because cluster volumes are Swarm
            objects, they have an ID, unlike non-cluster volumes, which only have a
            Name. This ID can be used to refer to the cluster volume.
          type: string
        Info:
          $ref: "#/components/schemas/Info"
        PublishStatus:
          description: |-
            PublishStatus contains the status of the volume as it pertains to its
            publishing on Nodes.
          items:
            $ref: "#/components/schemas/PublishStatus"
          type: array
        Spec:
          $ref: "#/components/schemas/ClusterVolumeSpec"
        UpdatedAt:
          format: date-time
          type: string
        Version:
          $ref: "#/components/schemas/Version"
      type: object
      x-go-package: github.com/docker/docker/api/types/volume
    ClusterVolumeSpec:
      example:
        Availability: Availability
        Group: Group
        Secrets:
        - Secret: Secret
          Key: Key
        - Secret: Secret
          Key: Key
        AccessMode:
          Scope: Scope
          Sharing: Sharing
          BlockVolume: "{}"
          MountVolume:
            MountFlags:
            - MountFlags
            - MountFlags
            FsType: FsType
        AccessibilityRequirements:
          Preferred:
          - Segments:
              key: Segments
          - Segments:
              key: Segments
          Requisite:
          - Segments:
              key: Segments
          - Segments:
              key: Segments
        CapacityRange:
          RequiredBytes: 1
          LimitBytes: 6
      properties:
        AccessMode:
          $ref: "#/components/schemas/AccessMode"
        AccessibilityRequirements:
          $ref: "#/components/schemas/TopologyRequirement"
        Availability:
          title: Availability specifies the availability of the volume.
          type: string
          x-go-package: github.com/docker/docker/api/types/volume
        CapacityRange:
          $ref: "#/components/schemas/CapacityRange"
        Group:
          description: |-
            Group defines the volume group of this volume. Volumes belonging to the
            same group can be referred to by group name when creating Services.
            Referring to a volume by group instructs swarm to treat volumes in that
            group interchangeably for the purpose of scheduling. Volumes with an
            empty string for a group technically all belong to the same, emptystring
            group.
          type: string
        Secrets:
          description: |-
            Secrets defines Swarm Secrets that are passed to the CSI storage plugin
            when operating on this volume.
          items:
            $ref: "#/components/schemas/Secret"
          type: array
      title: ClusterVolumeSpec contains the spec used to create this volume.
      type: object
      x-go-package: github.com/docker/docker/api/types/volume
    ComponentVersion:
      example:
        Details:
          key: Details
        Version: Version
        Name: Name
      properties:
        Details:
          additionalProperties:
            type: string
          type: object
        Name:
          type: string
        Version:
          type: string
      title: ComponentVersion describes the version information for a specific component.
      type: object
      x-go-package: github.com/containers/podman/v5/pkg/domain/entities/types
    Config:
      description: |-
        It should hold only portable information about the container.
        Here, "portable" means "independent from the host we are running on".
        Non-portable information *should* appear in HostConfig.
        All fields added to this struct must be marked `omitempty` to keep getting
        predictable hashes from the old `v1Compatibility` configuration.
      example:
        User: User
        OpenStdin: true
        Env:
        - Env
        - Env
        Image: Image
        StdinOnce: true
        AttachStdout: true
        Shell:
        - Shell
        - Shell
        Volumes:
          key: "{}"
        AttachStdin: true
        Domainname: Domainname
        Tty: true
        Cmd:
        - Cmd
        - Cmd
        StopTimeout: 2
        StopSignal: StopSignal
        Entrypoint:
        - Entrypoint
        - Entrypoint
        AttachStderr: true
        ArgsEscaped: true
        Hostname: Hostname
        Labels:
          key: Labels
        Healthcheck:
          StartInterval: 1
          Test:
          - Test
          - Test
          Retries: 6
          Timeout: 5
          Interval: 0
          StartPeriod: 5
        MacAddress: MacAddress
        NetworkDisabled: true
        ExposedPorts:
          key: "{}"
        WorkingDir: WorkingDir
        OnBuild:
        - OnBuild
        - OnBuild
      properties:
        ArgsEscaped:
          type: boolean
        AttachStderr:
          type: boolean
        AttachStdin:
          type: boolean
        AttachStdout:
          type: boolean
        Cmd:
          description: We need to override the json decoder to accept both options.
          items:
            type: string
          title: StrSlice represents a string or an array of strings.
          type: array
          x-go-package: github.com/docker/docker/api/types/strslice
        Domainname:
          type: string
        Entrypoint:
          description: We need to override the json decoder to accept both options.
          items:
            type: string
          title: StrSlice represents a string or an array of strings.
          type: array
          x-go-package: github.com/docker/docker/api/types/strslice
        Env:
          items:
            type: string
          type: array
        ExposedPorts:
          additionalProperties:
            properties: {}
            type: object
          description: PortSet is a collection of structs indexed by Port
          type: object
          x-go-package: github.com/docker/go-connections/nat
        Healthcheck:
          $ref: "#/components/schemas/HealthcheckConfig"
        Hostname:
          type: string
        Image:
          type: string
        Labels:
          additionalProperties:
            type: string
          type: object
        MacAddress:
          description: |-
            Mac Address of the container.

            Deprecated: this field is deprecated since API v1.44. Use EndpointSettings.MacAddress instead.
          type: string
        NetworkDisabled:
          type: boolean
        OnBuild:
          items:
            type: string
          type: array
        OpenStdin:
          type: boolean
        Shell:
          description: We need to override the json decoder to accept both options.
          items:
            type: string
          title: StrSlice represents a string or an array of strings.
          type: array
          x-go-package: github.com/docker/docker/api/types/strslice
        StdinOnce:
          type: boolean
        StopSignal:
          type: string
        StopTimeout:
          format: int64
          type: integer
        Tty:
          type: boolean
        User:
          type: string
        Volumes:
          additionalProperties:
            properties: {}
            type: object
          type: object
        WorkingDir:
          type: string
      title: Config contains the configuration data about a container.
      type: object
      x-go-package: github.com/docker/docker/api/types/container
    ConfigReference:
      description: ConfigReference specifies the source which provides a network's
        configuration
      example:
        Network: Network
      properties:
        Network:
          type: string
      type: object
      x-go-package: github.com/docker/docker/api/types/network
    ConmonInfo:
      description: ConmonInfo describes the conmon executable being used
      example:
        path: path
        package: package
        version: version
      properties:
        package:
          type: string
          x-go-name: Package
        path:
          type: string
          x-go-name: Path
        version:
          type: string
          x-go-name: Version
      type: object
      x-go-package: github.com/containers/podman/v5/libpod/define
    ConnectOptions:
      description: |-
        ConnectOptions represents the data to be used to connect a container to the
        network.
      example:
        Container: Container
        EndpointConfig:
          GlobalIPv6Address: GlobalIPv6Address
          GlobalIPv6PrefixLen: 7
          IPPrefixLen: 6
          Aliases:
          - Aliases
          - Aliases
          MacAddress: MacAddress
          NetworkID: NetworkID
          DNSNames:
          - DNSNames
          - DNSNames
          IPAMConfig:
            LinkLocalIPs:
            - LinkLocalIPs
            - LinkLocalIPs
            IPv6Address: IPv6Address
            IPv4Address: IPv4Address
          DriverOpts:
            key: DriverOpts
          Gateway: Gateway
          EndpointID: EndpointID
          Links:
          - Links
          - Links
          IPv6Gateway: IPv6Gateway
          IPAddress: IPAddress
      properties:
        Container:
          type: string
        EndpointConfig:
          $ref: "#/components/schemas/EndpointSettings"
      type: object
      x-go-package: github.com/docker/docker/api/types/network
    Consistency:
      title: Consistency represents the consistency requirements of a mount.
      type: string
      x-go-package: github.com/docker/docker/api/types/mount
    Container:
      example:
        Status: Status
        Mounts:
        - Destination: Destination
          Type: Type
          Propagation: Propagation
          RW: true
          Mode: Mode
          Driver: Driver
          Source: Source
          Name: Name
        - Destination: Destination
          Type: Type
          Propagation: Propagation
          RW: true
          Mode: Mode
          Driver: Driver
          Source: Source
          Name: Name
        Platform:
          os: os
          os.features:
          - os.features
          - os.features
          variant: variant
          architecture: architecture
          os.version: os.version
        SizeRw: 5
        NetworkingConfig:
          EndpointsConfig:
            key:
              GlobalIPv6Address: GlobalIPv6Address
              GlobalIPv6PrefixLen: 7
              IPPrefixLen: 6
              Aliases:
              - Aliases
              - Aliases
              MacAddress: MacAddress
              NetworkID: NetworkID
              DNSNames:
              - DNSNames
              - DNSNames
              IPAMConfig:
                LinkLocalIPs:
                - LinkLocalIPs
                - LinkLocalIPs
                IPv6Address: IPv6Address
                IPv4Address: IPv4Address
              DriverOpts:
                key: DriverOpts
              Gateway: Gateway
              EndpointID: EndpointID
              Links:
              - Links
              - Links
              IPv6Gateway: IPv6Gateway
              IPAddress: IPAddress
        Config:
          User: User
          OpenStdin: true
          Env:
          - Env
          - Env
          Image: Image
          StdinOnce: true
          AttachStdout: true
          Shell:
          - Shell
          - Shell
          Volumes:
            key: "{}"
          AttachStdin: true
          Domainname: Domainname
          Tty: true
          Cmd:
          - Cmd
          - Cmd
          StopTimeout: 2
          StopSignal: StopSignal
          Entrypoint:
          - Entrypoint
          - Entrypoint
          AttachStderr: true
          ArgsEscaped: true
          Hostname: Hostname
          Labels:
            key: Labels
          Healthcheck:
            StartInterval: 1
            Test:
            - Test
            - Test
            Retries: 6
            Timeout: 5
            Interval: 0
            StartPeriod: 5
          MacAddress: MacAddress
          NetworkDisabled: true
          ExposedPorts:
            key: "{}"
          WorkingDir: WorkingDir
          OnBuild:
          - OnBuild
          - OnBuild
        Ports:
        - Type: Type
          IP: IP
          PrivatePort: 6
          PublicPort: 1
        - Type: Type
          IP: IP
          PrivatePort: 6
          PublicPort: 1
        DefaultReadOnlyNonRecursive: true
        Labels:
          key: Labels
        Image: Image
        Created: 0
        Name: Name
        Names:
        - Names
        - Names
        NetworkSettings:
          Networks:
            key:
              GlobalIPv6Address: GlobalIPv6Address
              GlobalIPv6PrefixLen: 7
              IPPrefixLen: 6
              Aliases:
              - Aliases
              - Aliases
              MacAddress: MacAddress
              NetworkID: NetworkID
              DNSNames:
              - DNSNames
              - DNSNames
              IPAMConfig:
                LinkLocalIPs:
                - LinkLocalIPs
                - LinkLocalIPs
                IPv6Address: IPv6Address
                IPv4Address: IPv4Address
              DriverOpts:
                key: DriverOpts
              Gateway: Gateway
              EndpointID: EndpointID
              Links:
              - Links
              - Links
              IPv6Gateway: IPv6Gateway
              IPAddress: IPAddress
        SizeRootFs: 5
        Command: Command
        State: State
        HostConfig:
          ReadonlyRootfs: true
          StorageOpt:
            key: StorageOpt
          BlkioWeightDevice:
          - Path: Path
            Weight: 3
          - Path: Path
            Weight: 3
          DnsOptions:
          - DnsOptions
          - DnsOptions
          Memory: 6
          CpuPeriod: 1
          Dns:
          - Dns
          - Dns
          PortBindings:
            key:
            - HostIp: HostIp
              HostPort: HostPort
            - HostIp: HostIp
              HostPort: HostPort
          VolumesFrom:
          - VolumesFrom
          - VolumesFrom
          MaskedPaths:
          - MaskedPaths
          - MaskedPaths
          Devices:
          - CgroupPermissions: CgroupPermissions
            PathInContainer: PathInContainer
            PathOnHost: PathOnHost
          - CgroupPermissions: CgroupPermissions
            PathInContainer: PathInContainer
            PathOnHost: PathOnHost
          MemorySwappiness: 6
          BlkioWeight: 9
          CgroupnsMode: CgroupnsMode
          Init: true
          Runtime: Runtime
          Annotations:
            key: Annotations
          DeviceCgroupRules:
          - DeviceCgroupRules
          - DeviceCgroupRules
          UsernsMode: UsernsMode
          Ulimits:
          - Hard: 6
            Soft: 3
            Name: Name
          - Hard: 6
            Soft: 3
            Name: Name
          CpusetCpus: CpusetCpus
          MemoryReservation: 8
          Mounts:
          - BindOptions:
              ReadOnlyForceRecursive: true
              NonRecursive: true
              Propagation: Propagation
              ReadOnlyNonRecursive: true
              CreateMountpoint: true
            ReadOnly: true
            Target: Target
            Type: Type
            VolumeOptions:
              NoCopy: true
              Subpath: Subpath
              DriverConfig:
                Options:
                  key: Options
                Name: Name
              Labels:
                key: Labels
            Consistency: Consistency
            TmpfsOptions:
              Options:
              - - Options
                - Options
              - - Options
                - Options
              Mode: 3
              SizeBytes: 6
            Source: Source
            ClusterOptions: "{}"
          - BindOptions:
              ReadOnlyForceRecursive: true
              NonRecursive: true
              Propagation: Propagation
              ReadOnlyNonRecursive: true
              CreateMountpoint: true
            ReadOnly: true
            Target: Target
            Type: Type
            VolumeOptions:
              NoCopy: true
              Subpath: Subpath
              DriverConfig:
                Options:
                  key: Options
                Name: Name
              Labels:
                key: Labels
            Consistency: Consistency
            TmpfsOptions:
              Options:
              - - Options
                - Options
              - - Options
                - Options
              Mode: 3
              SizeBytes: 6
            Source: Source
            ClusterOptions: "{}"
          ExtraHosts:
          - ExtraHosts
          - ExtraHosts
          BlkioDeviceWriteIOps:
          - Path: Path
            Rate: 7
          - Path: Path
            Rate: 7
          ReadonlyPaths:
          - ReadonlyPaths
          - ReadonlyPaths
          UTSMode: UTSMode
          Cgroup: Cgroup
          CpuQuota: 1
          CpuRealtimeRuntime: 6
          DnsSearch:
          - DnsSearch
          - DnsSearch
          CpuShares: 7
          ContainerIDFile: ContainerIDFile
          OomScoreAdj: 2
          KernelMemory: 9
          LogConfig:
            Type: Type
            Config:
              key: Config
          DeviceRequests:
          - DeviceIDs:
            - DeviceIDs
            - DeviceIDs
            Options:
              key: Options
            Capabilities:
            - - Capabilities
              - Capabilities
            - - Capabilities
              - Capabilities
            Driver: Driver
            Count: 1
          - DeviceIDs:
            - DeviceIDs
            - DeviceIDs
            Options:
              key: Options
            Capabilities:
            - - Capabilities
              - Capabilities
            - - Capabilities
              - Capabilities
            Driver: Driver
            Count: 1
          OomKillDisable: true
          IOMaximumBandwidth: 4
          Privileged: true
          Sysctls:
            key: Sysctls
          GroupAdd:
          - GroupAdd
          - GroupAdd
          AutoRemove: true
          KernelMemoryTCP: 9
          CpuPercent: 7
          ConsoleSize:
          - 2
          - 2
          IOMaximumIOps: 5
          CapAdd:
          - CapAdd
          - CapAdd
          VolumeDriver: VolumeDriver
          CapDrop:
          - CapDrop
          - CapDrop
          CpuCount: 4
          PublishAllPorts: true
          Tmpfs:
            key: Tmpfs
          CpuRealtimePeriod: 1
          IpcMode: IpcMode
          Binds:
          - Binds
          - Binds
          CpusetMems: CpusetMems
          BlkioDeviceWriteBps:
          - Path: Path
            Rate: 7
          - Path: Path
            Rate: 7
          RestartPolicy:
            MaximumRetryCount: 6
            Name: Name
          NetworkMode: NetworkMode
          PidMode: PidMode
          BlkioDeviceReadBps:
          - Path: Path
            Rate: 7
          - Path: Path
            Rate: 7
          CgroupParent: CgroupParent
          NanoCpus: 1
          MemorySwap: 9
          Isolation: Isolation
          Links:
          - Links
          - Links
          PidsLimit: 6
          BlkioDeviceReadIOps:
          - Path: Path
            Rate: 7
          - Path: Path
            Rate: 7
          SecurityOpt:
          - SecurityOpt
          - SecurityOpt
          ShmSize: 5
        ImageID: ImageID
        Id: Id
      properties:
        Command:
          type: string
        Config:
          $ref: "#/components/schemas/Config"
        Created:
          format: int64
          type: integer
        DefaultReadOnlyNonRecursive:
          type: boolean
        HostConfig:
          $ref: "#/components/schemas/HostConfig"
        Id:
          type: string
          x-go-name: ID
        Image:
          type: string
        ImageID:
          type: string
        Labels:
          additionalProperties:
            type: string
          type: object
        Mounts:
          items:
            $ref: "#/components/schemas/MountPoint"
          type: array
        Name:
          type: string
        Names:
          items:
            type: string
          type: array
        NetworkSettings:
          $ref: "#/components/schemas/SummaryNetworkSettings"
        NetworkingConfig:
          $ref: "#/components/schemas/NetworkingConfig"
        Platform:
          $ref: "#/components/schemas/Platform"
        Ports:
          items:
            $ref: "#/components/schemas/Port"
          type: array
        SizeRootFs:
          format: int64
          type: integer
        SizeRw:
          format: int64
          type: integer
        State:
          type: string
        Status:
          type: string
      type: object
      x-go-package: github.com/containers/podman/v5/pkg/api/handlers
    ContainerBasicConfig:
      properties:
        annotations:
          additionalProperties:
            type: string
          description: |-
            Annotations are key-value options passed into the container runtime
            that can be used to trigger special behavior.
            Optional.
          type: object
          x-go-name: Annotations
        command:
          description: |-
            Command is the container's command.
            If not given and Image is specified, this will be populated by the
            image's configuration.
            Optional.
          items:
            type: string
          type: array
          x-go-name: Command
        conmon_pid_file:
          description: |-
            ConmonPidFile is a path at which a PID file for Conmon will be
            placed.
            If not given, a default location will be used.
            Optional.
          type: string
          x-go-name: ConmonPidFile
        containerCreateCommand:
          description: |-
            ContainerCreateCommand is the command that was used to create this
            container.
            This will be shown in the output of Inspect() on the container, and
            may also be used by some tools that wish to recreate the container
            (e.g. `podman generate systemd --new`).
            Optional.
          items:
            type: string
          type: array
          x-go-name: ContainerCreateCommand
        dependencyContainers:
          description: |-
            DependencyContainers is an array of containers this container
            depends on. Dependency containers must be started before this
            container. Dependencies can be specified by name or full/partial ID.
            Optional.
          items:
            type: string
          type: array
          x-go-name: DependencyContainers
        entrypoint:
          description: |-
            Entrypoint is the container's entrypoint.
            If not given and Image is specified, this will be populated by the
            image's configuration.
            Optional.
          items:
            type: string
          type: array
          x-go-name: Entrypoint
        env:
          additionalProperties:
            type: string
          description: |-
            Env is a set of environment variables that will be set in the
            container.
            Optional.
          type: object
          x-go-name: Env
        env_host:
          description: |-
            EnvHost indicates that the host environment should be added to container
            Optional.
          type: boolean
          x-go-name: EnvHost
        envmerge:
          description: |-
            EnvMerge takes the specified environment variables from image and preprocess them before injecting them into the
            container.
            Optional.
          items:
            type: string
          type: array
          x-go-name: EnvMerge
        group_entry:
          description: |-
            GroupEntry specifies an arbitrary string to append to the container's /etc/group file.
            Optional.
          type: string
          x-go-name: GroupEntry
        hostname:
          description: |-
            Hostname is the container's hostname. If not set, the hostname will
            not be modified (if UtsNS is not private) or will be set to the
            container ID (if UtsNS is private).
            Conflicts with UtsNS if UtsNS is not set to private.
            Optional.
          type: string
          x-go-name: Hostname
        hostusers:
          description: |-
            HostUsers is a list of host usernames or UIDs to add to the container
            etc/passwd file
          items:
            type: string
          type: array
          x-go-name: HostUsers
        httpproxy:
          description: |-
            EnvHTTPProxy indicates that the http host proxy environment variables
            should be added to container
            Optional.
          type: boolean
          x-go-name: HTTPProxy
        init_container_type:
          description: |-
            InitContainerType describes if this container is an init container
            and if so, what type: always or once.
            Optional.
          type: string
          x-go-name: InitContainerType
        labels:
          additionalProperties:
            type: string
          description: |-
            Labels are key-value pairs that are used to add metadata to
            containers.
            Optional.
          type: object
          x-go-name: Labels
        log_configuration:
          $ref: "#/components/schemas/LogConfigLibpod"
        manage_password:
          description: Passwd is a container run option that determines if we are
            validating users/groups before running the container
          type: boolean
          x-go-name: Passwd
        name:
          description: |-
            Name is the name the container will be given.
            If no name is provided, one will be randomly generated.
            Optional.
          type: string
          x-go-name: Name
        oci_runtime:
          description: |-
            OCIRuntime is the name of the OCI runtime that will be used to create
            the container.
            If not specified, the default will be used.
            Optional.
          type: string
          x-go-name: OCIRuntime
        passwd_entry:
          description: |-
            PasswdEntry specifies an arbitrary string to append to the container's /etc/passwd file.
            Optional.
          type: string
          x-go-name: PasswdEntry
        personality:
          $ref: "#/components/schemas/LinuxPersonality"
        pidns:
          $ref: "#/components/schemas/Namespace"
        pod:
          description: |-
            Pod is the ID of the pod the container will join.
            Optional.
          type: string
          x-go-name: Pod
        remove:
          description: |-
            Remove indicates if the container should be removed once it has been started
            and exits.
            Optional.
          type: boolean
          x-go-name: Remove
        removeImage:
          description: |-
            RemoveImage indicates that the container should remove the image it
            was created from after it exits.
            Only allowed if Remove is set to true and Image, not Rootfs, is in
            use.
            Optional.
          type: boolean
          x-go-name: RemoveImage
        restart_policy:
          description: |-
            RestartPolicy is the container's restart policy - an action which
            will be taken when the container exits.
            If not given, the default policy, which does nothing, will be used.
            Optional.
          type: string
          x-go-name: RestartPolicy
        restart_tries:
          description: |-
            RestartRetries is the number of attempts that will be made to restart
            the container.
            Only available when RestartPolicy is set to "on-failure".
            Optional.
          format: uint64
          type: integer
          x-go-name: RestartRetries
        sdnotifyMode:
          description: |-
            Determine how to handle the NOTIFY_SOCKET - do we participate or pass it through
            "container" - let the OCI runtime deal with it, advertise conmon's MAINPID
            "conmon-only" - advertise conmon's MAINPID, send READY when started, don't pass to OCI
            "ignore" - unset NOTIFY_SOCKET
            Optional.
          type: string
          x-go-name: SdNotifyMode
        secret_env:
          additionalProperties:
            type: string
          description: |-
            EnvSecrets are secrets that will be set as environment variables
            Optional.
          type: object
          x-go-name: EnvSecrets
        stdin:
          description: |-
            Stdin is whether the container will keep its STDIN open.
            Optional.
          type: boolean
          x-go-name: Stdin
        stop_signal:
          description: "It implements the [os.Signal] interface."
          format: int64
          title: A Signal is a number describing a process signal.
          type: integer
          x-go-package: syscall
        stop_timeout:
          description: |-
            StopTimeout is a timeout between the container's stop signal being
            sent and SIGKILL being sent.
            If not provided, the default will be used.
            If 0 is used, stop signal will not be sent, and SIGKILL will be sent
            instead.
            Optional.
          format: uint64
          type: integer
          x-go-name: StopTimeout
        sysctl:
          additionalProperties:
            type: string
          description: Sysctl sets kernel parameters for the container
          type: object
          x-go-name: Sysctl
        systemd:
          description: |-
            Systemd is whether the container will be started in systemd mode.
            Valid options are "true", "false", and "always".
            "true" enables this mode only if the binary run in the container is
            sbin/init or systemd. "always" unconditionally enables systemd mode.
            "false" unconditionally disables systemd mode.
            If enabled, mounts and stop signal will be modified.
            If set to "always" or set to "true" and conditionally triggered,
            conflicts with StopSignal.
            If not specified, "false" will be assumed.
            Optional.
          type: string
          x-go-name: Systemd
        terminal:
          description: |-
            Terminal is whether the container will create a PTY.
            Optional.
          type: boolean
          x-go-name: Terminal
        timeout:
          description: |-
            Timeout is a maximum time in seconds the container will run before
            main process is sent SIGKILL.
            If 0 is used, signal will not be sent. Container can run indefinitely
            if they do not stop after the default termination signal.
            Optional.
          format: uint64
          type: integer
          x-go-name: Timeout
        timezone:
          description: |-
            Timezone is the timezone inside the container.
            Local means it has the same timezone as the host machine
            Optional.
          type: string
          x-go-name: Timezone
        unsetenv:
          description: |-
            UnsetEnv unsets the specified default environment variables from the image or from built-in or containers.conf
            Optional.
          items:
            type: string
          type: array
          x-go-name: UnsetEnv
        unsetenvall:
          description: |-
            UnsetEnvAll unsetall default environment variables from the image or from built-in or containers.conf
            UnsetEnvAll unsets all default environment variables from the image or from built-in
            Optional.
          type: boolean
          x-go-name: UnsetEnvAll
        utsns:
          $ref: "#/components/schemas/Namespace"
      title: ContainerBasicConfig contains the basic parts of a container.
      type: object
      x-go-package: github.com/containers/podman/v5/pkg/specgen
    ContainerCgroupConfig:
      description: |-
        ContainerCgroupConfig contains configuration information about a container's
        cgroups.
      properties:
        cgroup_parent:
          description: |-
            CgroupParent is the container's Cgroup parent.
            If not set, the default for the current cgroup driver will be used.
            Optional.
          type: string
          x-go-name: CgroupParent
        cgroupns:
          $ref: "#/components/schemas/Namespace"
        cgroups_mode:
          description: |-
            CgroupsMode sets a policy for how cgroups will be created for the
            container, including the ability to disable creation entirely.
            Optional.
          type: string
          x-go-name: CgroupsMode
      type: object
      x-go-package: github.com/containers/podman/v5/pkg/specgen
    ContainerCreateResponse:
      description: ContainerCreateResponse is the response struct for creating a container
      example:
        Id: Id
        Warnings:
        - Warnings
        - Warnings
      properties:
        Id:
          description: ID of the container created
          type: string
          x-go-name: ID
        Warnings:
          description: Warnings during container creation
          items:
            type: string
          type: array
      required:
      - Id
      - Warnings
      type: object
      x-go-package: github.com/containers/podman/v5/pkg/domain/entities/types
    ContainerHealthCheckConfig:
      description: |-
        ContainerHealthCheckConfig describes a container healthcheck with attributes
        like command, retries, interval, start period, and timeout.
      properties:
        health_check_on_failure_action:
          description: |-
            HealthCheckOnFailureAction defines how Podman reacts when a container's health
            status turns unhealthy.
          format: int64
          type: integer
          x-go-package: github.com/containers/podman/v5/libpod/define
        healthLogDestination:
          description: HealthLogDestination defines the destination where the log
            is stored
          type: string
          x-go-name: HealthLogDestination
        healthMaxLogCount:
          description: |-
            HealthMaxLogCount is maximum number of attempts in the HealthCheck log file.
            ('0' value means an infinite number of attempts in the log file)
          format: uint64
          type: integer
          x-go-name: HealthMaxLogCount
        healthMaxLogSize:
          description: |-
            HealthMaxLogSize is the maximum length in characters of stored HealthCheck log
            ("0" value means an infinite log length)
          format: uint64
          type: integer
          x-go-name: HealthMaxLogSize
        healthconfig:
          $ref: "#/components/schemas/Schema2HealthConfig"
        startupHealthConfig:
          $ref: "#/components/schemas/StartupHealthCheck"
      type: object
      x-go-package: github.com/containers/podman/v5/pkg/specgen
    ContainerJSON:
      description: ContainerJSON is newly used struct along with MountPoint
      example:
        Platform: Platform
        Config:
          User: User
          OpenStdin: true
          Env:
          - Env
          - Env
          Image: Image
          StdinOnce: true
          AttachStdout: true
          Shell:
          - Shell
          - Shell
          Volumes:
            key: "{}"
          AttachStdin: true
          Domainname: Domainname
          Tty: true
          Cmd:
          - Cmd
          - Cmd
          StopTimeout: 2
          StopSignal: StopSignal
          Entrypoint:
          - Entrypoint
          - Entrypoint
          AttachStderr: true
          ArgsEscaped: true
          Hostname: Hostname
          Labels:
            key: Labels
          Healthcheck:
            StartInterval: 1
            Test:
            - Test
            - Test
            Retries: 6
            Timeout: 5
            Interval: 0
            StartPeriod: 5
          MacAddress: MacAddress
          NetworkDisabled: true
          ExposedPorts:
            key: "{}"
          WorkingDir: WorkingDir
          OnBuild:
          - OnBuild
          - OnBuild
        Node:
          Memory: 8
          IP: IP
          Labels:
            key: Labels
          Cpus: 4
          ID: ID
          Addr: Addr
          Name: Name
        AppArmorProfile: AppArmorProfile
        Driver: Driver
        HostsPath: HostsPath
        HostnamePath: HostnamePath
        Image: Image
        Created: Created
        Name: Name
        MountLabel: MountLabel
        SizeRootFs: 3
        HostConfig:
          ReadonlyRootfs: true
          StorageOpt:
            key: StorageOpt
          BlkioWeightDevice:
          - Path: Path
            Weight: 3
          - Path: Path
            Weight: 3
          DnsOptions:
          - DnsOptions
          - DnsOptions
          Memory: 6
          CpuPeriod: 1
          Dns:
          - Dns
          - Dns
          PortBindings:
            key:
            - HostIp: HostIp
              HostPort: HostPort
            - HostIp: HostIp
              HostPort: HostPort
          VolumesFrom:
          - VolumesFrom
          - VolumesFrom
          MaskedPaths:
          - MaskedPaths
          - MaskedPaths
          Devices:
          - CgroupPermissions: CgroupPermissions
            PathInContainer: PathInContainer
            PathOnHost: PathOnHost
          - CgroupPermissions: CgroupPermissions
            PathInContainer: PathInContainer
            PathOnHost: PathOnHost
          MemorySwappiness: 6
          BlkioWeight: 9
          CgroupnsMode: CgroupnsMode
          Init: true
          Runtime: Runtime
          Annotations:
            key: Annotations
          DeviceCgroupRules:
          - DeviceCgroupRules
          - DeviceCgroupRules
          UsernsMode: UsernsMode
          Ulimits:
          - Hard: 6
            Soft: 3
            Name: Name
          - Hard: 6
            Soft: 3
            Name: Name
          CpusetCpus: CpusetCpus
          MemoryReservation: 8
          Mounts:
          - BindOptions:
              ReadOnlyForceRecursive: true
              NonRecursive: true
              Propagation: Propagation
              ReadOnlyNonRecursive: true
              CreateMountpoint: true
            ReadOnly: true
            Target: Target
            Type: Type
            VolumeOptions:
              NoCopy: true
              Subpath: Subpath
              DriverConfig:
                Options:
                  key: Options
                Name: Name
              Labels:
                key: Labels
            Consistency: Consistency
            TmpfsOptions:
              Options:
              - - Options
                - Options
              - - Options
                - Options
              Mode: 3
              SizeBytes: 6
            Source: Source
            ClusterOptions: "{}"
          - BindOptions:
              ReadOnlyForceRecursive: true
              NonRecursive: true
              Propagation: Propagation
              ReadOnlyNonRecursive: true
              CreateMountpoint: true
            ReadOnly: true
            Target: Target
            Type: Type
            VolumeOptions:
              NoCopy: true
              Subpath: Subpath
              DriverConfig:
                Options:
                  key: Options
                Name: Name
              Labels:
                key: Labels
            Consistency: Consistency
            TmpfsOptions:
              Options:
              - - Options
                - Options
              - - Options
                - Options
              Mode: 3
              SizeBytes: 6
            Source: Source
            ClusterOptions: "{}"
          ExtraHosts:
          - ExtraHosts
          - ExtraHosts
          BlkioDeviceWriteIOps:
          - Path: Path
            Rate: 7
          - Path: Path
            Rate: 7
          ReadonlyPaths:
          - ReadonlyPaths
          - ReadonlyPaths
          UTSMode: UTSMode
          Cgroup: Cgroup
          CpuQuota: 1
          CpuRealtimeRuntime: 6
          DnsSearch:
          - DnsSearch
          - DnsSearch
          CpuShares: 7
          ContainerIDFile: ContainerIDFile
          OomScoreAdj: 2
          KernelMemory: 9
          LogConfig:
            Type: Type
            Config:
              key: Config
          DeviceRequests:
          - DeviceIDs:
            - DeviceIDs
            - DeviceIDs
            Options:
              key: Options
            Capabilities:
            - - Capabilities
              - Capabilities
            - - Capabilities
              - Capabilities
            Driver: Driver
            Count: 1
          - DeviceIDs:
            - DeviceIDs
            - DeviceIDs
            Options:
              key: Options
            Capabilities:
            - - Capabilities
              - Capabilities
            - - Capabilities
              - Capabilities
            Driver: Driver
            Count: 1
          OomKillDisable: true
          IOMaximumBandwidth: 4
          Privileged: true
          Sysctls:
            key: Sysctls
          GroupAdd:
          - GroupAdd
          - GroupAdd
          AutoRemove: true
          KernelMemoryTCP: 9
          CpuPercent: 7
          ConsoleSize:
          - 2
          - 2
          IOMaximumIOps: 5
          CapAdd:
          - CapAdd
          - CapAdd
          VolumeDriver: VolumeDriver
          CapDrop:
          - CapDrop
          - CapDrop
          CpuCount: 4
          PublishAllPorts: true
          Tmpfs:
            key: Tmpfs
          CpuRealtimePeriod: 1
          IpcMode: IpcMode
          Binds:
          - Binds
          - Binds
          CpusetMems: CpusetMems
          BlkioDeviceWriteBps:
          - Path: Path
            Rate: 7
          - Path: Path
            Rate: 7
          RestartPolicy:
            MaximumRetryCount: 6
            Name: Name
          NetworkMode: NetworkMode
          PidMode: PidMode
          BlkioDeviceReadBps:
          - Path: Path
            Rate: 7
          - Path: Path
            Rate: 7
          CgroupParent: CgroupParent
          NanoCpus: 1
          MemorySwap: 9
          Isolation: Isolation
          Links:
          - Links
          - Links
          PidsLimit: 6
          BlkioDeviceReadIOps:
          - Path: Path
            Rate: 7
          - Path: Path
            Rate: 7
          SecurityOpt:
          - SecurityOpt
          - SecurityOpt
          ShmSize: 5
        Path: Path
        Args:
        - Args
        - Args
        Mounts:
        - Destination: Destination
          Type: Type
          Propagation: Propagation
          RW: true
          Mode: Mode
          Driver: Driver
          Source: Source
          Name: Name
        - Destination: Destination
          Type: Type
          Propagation: Propagation
          RW: true
          Mode: Mode
          Driver: Driver
          Source: Source
          Name: Name
        ProcessLabel: ProcessLabel
        SizeRw: 3
        GraphDriver:
          Data:
            key: Data
          Name: Name
        RestartCount: 7
        NetworkSettings:
          HairpinMode: true
          Networks:
            key:
              GlobalIPv6Address: GlobalIPv6Address
              GlobalIPv6PrefixLen: 7
              IPPrefixLen: 6
              Aliases:
              - Aliases
              - Aliases
              MacAddress: MacAddress
              NetworkID: NetworkID
              DNSNames:
              - DNSNames
              - DNSNames
              IPAMConfig:
                LinkLocalIPs:
                - LinkLocalIPs
                - LinkLocalIPs
                IPv6Address: IPv6Address
                IPv4Address: IPv4Address
              DriverOpts:
                key: DriverOpts
              Gateway: Gateway
              EndpointID: EndpointID
              Links:
              - Links
              - Links
              IPv6Gateway: IPv6Gateway
              IPAddress: IPAddress
          SandboxKey: SandboxKey
          GlobalIPv6Address: GlobalIPv6Address
          Ports:
            key:
            - HostIp: HostIp
              HostPort: HostPort
            - HostIp: HostIp
              HostPort: HostPort
          GlobalIPv6PrefixLen: 3
          IPPrefixLen: 7
          MacAddress: MacAddress
          SandboxID: SandboxID
          LinkLocalIPv6Address: LinkLocalIPv6Address
          LinkLocalIPv6PrefixLen: 0
          Gateway: Gateway
          EndpointID: EndpointID
          SecondaryIPv6Addresses:
          - PrefixLength: 0
            Addr: Addr
          - PrefixLength: 0
            Addr: Addr
          IPv6Gateway: IPv6Gateway
          SecondaryIPAddresses:
          - PrefixLength: 0
            Addr: Addr
          - PrefixLength: 0
            Addr: Addr
          IPAddress: IPAddress
          Bridge: Bridge
        ResolvConfPath: ResolvConfPath
        State:
          Status: Status
          Restarting: true
          Dead: true
          Health:
            Status: Status
            Log:
            - Start: 2000-01-23T04:56:07.000+00:00
              ExitCode: 3
              Output: Output
              End: 2000-01-23T04:56:07.000+00:00
            - Start: 2000-01-23T04:56:07.000+00:00
              ExitCode: 3
              Output: Output
              End: 2000-01-23T04:56:07.000+00:00
            FailingStreak: 5
          ExitCode: 7
          Running: true
          Error: Error
          FinishedAt: FinishedAt
          OOMKilled: true
          Pid: 4
          StartedAt: StartedAt
          Paused: true
        ExecIDs:
        - ExecIDs
        - ExecIDs
        Id: Id
        LogPath: LogPath
      properties:
        AppArmorProfile:
          type: string
        Args:
          items:
            type: string
          type: array
        Config:
          $ref: "#/components/schemas/Config"
        Created:
          type: string
        Driver:
          type: string
        ExecIDs:
          items:
            type: string
          type: array
        GraphDriver:
          $ref: "#/components/schemas/GraphDriverData"
        HostConfig:
          $ref: "#/components/schemas/HostConfig"
        HostnamePath:
          type: string
        HostsPath:
          type: string
        Id:
          type: string
          x-go-name: ID
        Image:
          type: string
        LogPath:
          type: string
        MountLabel:
          type: string
        Mounts:
          items:
            $ref: "#/components/schemas/MountPoint"
          type: array
        Name:
          type: string
        NetworkSettings:
          $ref: "#/components/schemas/NetworkSettings"
        Node:
          $ref: "#/components/schemas/ContainerNode"
        Path:
          type: string
        Platform:
          type: string
        ProcessLabel:
          type: string
        ResolvConfPath:
          type: string
        RestartCount:
          format: int64
          type: integer
        SizeRootFs:
          format: int64
          type: integer
        SizeRw:
          format: int64
          type: integer
        State:
          $ref: "#/components/schemas/ContainerState"
      type: object
      x-go-package: github.com/docker/docker/api/types
    ContainerNetworkConfig:
      description: |-
        ContainerNetworkConfig contains information on a container's network
        configuration.
      properties:
        Networks:
          additionalProperties:
            $ref: "#/components/schemas/PerNetworkOptions"
          description: |-
            Map of networks names or ids that the container should join.
            You can request additional settings for each network, you can
            set network aliases, static ips, static mac address  and the
            network interface name for this container on the specific network.
            If the map is empty and the bridge network mode is set the container
            will be joined to the default network.
            Optional.
          type: object
        base_hosts_file:
          description: |-
            BaseHostsFile is the path to a hosts file, the entries from this file
            are added to the containers hosts file. As special value "image" is
            allowed which uses the /etc/hosts file from within the image and "none"
            which uses no base file at all. If it is empty we should default
            to the base_hosts_file configuration in containers.conf.
            Optional.
          type: string
          x-go-name: BaseHostsFile
        cni_networks:
          description: |-
            CNINetworks is a list of CNI networks to join the container to.
            If this list is empty, the default CNI network will be joined
            instead. If at least one entry is present, we will not join the
            default network (unless it is part of this list).
            Only available if NetNS is set to bridge.
            Optional.
            Deprecated: as of podman 4.0 use "Networks" instead.
          items:
            type: string
          type: array
          x-go-name: CNINetworks
        dns_option:
          description: |-
            DNSOptions is a set of DNS options that will be used in the
            container's resolv.conf, replacing the host's DNS options which are
            used by default.
            Conflicts with UseImageResolvConf.
            Optional.
          items:
            type: string
          type: array
          x-go-name: DNSOptions
        dns_search:
          description: |-
            DNSSearch is a set of DNS search domains that will be used in the
            container's resolv.conf, replacing the host's DNS search domains
            which are used by default.
            Conflicts with UseImageResolvConf.
            Optional.
          items:
            type: string
          type: array
          x-go-name: DNSSearch
        dns_server:
          description: |-
            DNSServers is a set of DNS servers that will be used in the
            container's resolv.conf, replacing the host's DNS Servers which are
            used by default.
            Conflicts with UseImageResolvConf.
            Optional.
          items:
            type: string
          type: array
          x-go-name: DNSServers
        expose:
          description: |-
            Expose is a number of ports that will be forwarded to the container
            if PublishExposedPorts is set.
            Expose is a map of uint16 (port number) to a string representing
            protocol i.e map[uint16]string. Allowed protocols are "tcp", "udp", and "sctp", or some
            combination of the three separated by commas.
            If protocol is set to "" we will assume TCP.
            Only available if NetNS is set to Bridge or Slirp, and
            PublishExposedPorts is set.
            Optional.
          type: object
          x-go-name: Expose
        hostadd:
          description: |-
            HostAdd is a set of hosts which will be added to the container's
            etc/hosts file.
            Conflicts with UseImageHosts.
            Optional.
          items:
            type: string
          type: array
          x-go-name: HostAdd
        netns:
          $ref: "#/components/schemas/Namespace"
        network_options:
          additionalProperties:
            items:
              type: string
            type: array
          description: |-
            NetworkOptions are additional options for each network
            Optional.
          type: object
          x-go-name: NetworkOptions
        portmappings:
          description: |-
            PortBindings is a set of ports to map into the container.
            Only available if NetNS is set to bridge, slirp, or pasta.
            Optional.
          items:
            $ref: "#/components/schemas/PortMapping"
          type: array
          x-go-name: PortMappings
        publish_image_ports:
          description: |-
            PublishExposedPorts will publish ports specified in the image to
            random unused ports (guaranteed to be above 1024) on the host.
            This is based on ports set in Expose below, and any ports specified
            by the Image (if one is given).
            Only available if NetNS is set to Bridge or Slirp.
            Optional.
          type: boolean
          x-go-name: PublishExposedPorts
        use_image_hosts:
          description: |-
            UseImageHosts indicates that /etc/hosts should not be managed by
            Podman, and instead sourced from the image.
            Conflicts with HostAdd.
            Optional.
          type: boolean
          x-go-name: UseImageHosts
        use_image_resolve_conf:
          description: |-
            UseImageResolvConf indicates that resolv.conf should not be managed
            by Podman, but instead sourced from the image.
            Conflicts with DNSServer, DNSSearch, DNSOption.
            Optional.
          type: boolean
          x-go-name: UseImageResolvConf
      type: object
      x-go-package: github.com/containers/podman/v5/pkg/specgen
    ContainerNetworkStats:
      description: Statistics for an individual container network interface
      example:
        RxDropped: 7
        RxPackets: 1
        RxErrors: 1
        TxErrors: 7
        TxPackets: 1
        RxBytes: 4
        TxBytes: 1
        TxDropped: 6
      properties:
        RxBytes:
          format: uint64
          type: integer
        RxDropped:
          format: uint64
          type: integer
        RxErrors:
          format: uint64
          type: integer
        RxPackets:
          format: uint64
          type: integer
        TxBytes:
          format: uint64
          type: integer
        TxDropped:
          format: uint64
          type: integer
        TxErrors:
          format: uint64
          type: integer
        TxPackets:
          format: uint64
          type: integer
      type: object
      x-go-package: github.com/containers/podman/v5/libpod/define
    ContainerNode:
      description: "Deprecated: ContainerNode was used for the classic Docker Swarm\
        \ standalone API. It will be removed in the next release."
      example:
        Memory: 8
        IP: IP
        Labels:
          key: Labels
        Cpus: 4
        ID: ID
        Addr: Addr
        Name: Name
      properties:
        Addr:
          type: string
        Cpus:
          format: int64
          type: integer
        ID:
          type: string
        IP:
          type: string
          x-go-name: IPAddress
        Labels:
          additionalProperties:
            type: string
          type: object
        Memory:
          format: int64
          type: integer
        Name:
          type: string
      title: |-
        ContainerNode stores information about the node that a container
        is running on.  It's only used by the Docker Swarm standalone API.
      type: object
      x-go-package: github.com/docker/docker/api/types
    ContainerResourceConfig:
      properties:
        intelRdt:
          $ref: "#/components/schemas/LinuxIntelRdt"
        oom_score_adj:
          description: |-
            OOMScoreAdj adjusts the score used by the OOM killer to determine
            processes to kill for the container's process.
            Optional.
          format: int64
          type: integer
          x-go-name: OOMScoreAdj
        r_limits:
          description: |-
            Rlimits are POSIX rlimits to apply to the container.
            Optional.
          items:
            $ref: "#/components/schemas/POSIXRlimit"
          type: array
          x-go-name: Rlimits
        resource_limits:
          $ref: "#/components/schemas/LinuxResources"
        throttleReadBpsDevice:
          additionalProperties:
            $ref: "#/components/schemas/LinuxThrottleDevice"
          description: "IO read rate limit per cgroup per device, bytes per second"
          type: object
          x-go-name: ThrottleReadBpsDevice
        throttleReadIOPSDevice:
          additionalProperties:
            $ref: "#/components/schemas/LinuxThrottleDevice"
          description: "IO read rate limit per cgroup per device, IO per second"
          type: object
          x-go-name: ThrottleReadIOPSDevice
        throttleWriteBpsDevice:
          additionalProperties:
            $ref: "#/components/schemas/LinuxThrottleDevice"
          description: "IO write rate limit per cgroup per device, bytes per second"
          type: object
          x-go-name: ThrottleWriteBpsDevice
        throttleWriteIOPSDevice:
          additionalProperties:
            $ref: "#/components/schemas/LinuxThrottleDevice"
          description: "IO write rate limit per cgroup per device, IO per second"
          type: object
          x-go-name: ThrottleWriteIOPSDevice
        unified:
          additionalProperties:
            type: string
          description: |-
            CgroupConf are key-value options passed into the container runtime
            that are used to configure cgroup v2.
            Optional.
          type: object
          x-go-name: CgroupConf
        weightDevice:
          additionalProperties:
            $ref: "#/components/schemas/LinuxWeightDevice"
          description: "Weight per cgroup per device, can override BlkioWeight"
          type: object
          x-go-name: WeightDevice
      title: ContainerResourceConfig contains information on container resource limits.
      type: object
      x-go-package: github.com/containers/podman/v5/pkg/specgen
    ContainerSecurityConfig:
      description: |-
        ContainerSecurityConfig is a container's security features, including
        SELinux, Apparmor, and Seccomp.
      properties:
        apparmor_profile:
          description: |-
            ApparmorProfile is the name of the Apparmor profile the container
            will use.
            Optional.
          type: string
          x-go-name: ApparmorProfile
        cap_add:
          description: |-
            CapAdd are capabilities which will be added to the container.
            Conflicts with Privileged.
            Optional.
          items:
            type: string
          type: array
          x-go-name: CapAdd
        cap_drop:
          description: |-
            CapDrop are capabilities which will be removed from the container.
            Conflicts with Privileged.
            Optional.
          items:
            type: string
          type: array
          x-go-name: CapDrop
        groups:
          description: |-
            Groups are a list of supplemental groups the container's user will
            be granted access to.
            Optional.
          items:
            type: string
          type: array
          x-go-name: Groups
        idmappings:
          $ref: "#/components/schemas/IDMappingOptions"
        label_nested:
          description: |-
            LabelNested indicates whether or not the container is allowed to
            run fully nested containers including SELinux labelling.
            Optional.
          type: boolean
          x-go-name: LabelNested
        mask:
          description: |-
            Mask is the path we want to mask in the container. This masks the paths
            given in addition to the default list.
            Optional
          items:
            type: string
          type: array
          x-go-name: Mask
        no_new_privileges:
          description: |-
            NoNewPrivileges is whether the container will set the no new
            privileges flag on create, which disables gaining additional
            privileges (e.g. via setuid) in the container.
            Optional.
          type: boolean
          x-go-name: NoNewPrivileges
        privileged:
          description: |-
            Privileged is whether the container is privileged.
            Privileged does the following:
            Adds all devices on the system to the container.
            Adds all capabilities to the container.
            Disables Seccomp, SELinux, and Apparmor confinement.
            (Though SELinux can be manually re-enabled).
            TODO: this conflicts with things.
            TODO: this does more.
            Optional.
          type: boolean
          x-go-name: Privileged
        procfs_opts:
          description: ProcOpts are the options used for the proc mount.
          items:
            type: string
          type: array
          x-go-name: ProcOpts
        read_only_filesystem:
          description: |-
            ReadOnlyFilesystem indicates that everything will be mounted
            as read-only.
            Optional.
          type: boolean
          x-go-name: ReadOnlyFilesystem
        read_write_tmpfs:
          description: |-
            ReadWriteTmpfs indicates that when running with a ReadOnlyFilesystem
            mount temporary file systems.
            Optional.
          type: boolean
          x-go-name: ReadWriteTmpfs
        seccomp_policy:
          description: |-
            SeccompPolicy determines which seccomp profile gets applied
            the container. valid values: empty,default,image
          type: string
          x-go-name: SeccompPolicy
        seccomp_profile_path:
          description: |-
            SeccompProfilePath is the path to a JSON file containing the
            container's Seccomp profile.
            If not specified, no Seccomp profile will be used.
            Optional.
          type: string
          x-go-name: SeccompProfilePath
        selinux_opts:
          description: |-
            SelinuxProcessLabel is the process label the container will use.
            If SELinux is enabled and this is not specified, a label will be
            automatically generated if not specified.
            Optional.
          items:
            type: string
          type: array
          x-go-name: SelinuxOpts
        umask:
          description: Umask is the umask the init process of the container will be
            run with.
          type: string
          x-go-name: Umask
        unmask:
          description: |-
            Unmask a path in the container. Some paths are masked by default,
            preventing them from being accessed within the container; this undoes
            that masking. If ALL is passed, all paths will be unmasked.
            Optional.
          items:
            type: string
          type: array
          x-go-name: Unmask
        user:
          description: |-
            User is the user the container will be run as.
            Can be given as a UID or a username; if a username, it will be
            resolved within the container, using the container's /etc/passwd.
            If unset, the container will be run as root.
            Optional.
          type: string
          x-go-name: User
        userns:
          $ref: "#/components/schemas/Namespace"
      type: object
      x-go-package: github.com/containers/podman/v5/pkg/specgen
    ContainerSize:
      description: |-
        ContainerSize holds the size of the container's root filesystem and top
        read-write layer.
      example:
        rootFsSize: 5
        rwSize: 2
      properties:
        rootFsSize:
          format: int64
          type: integer
          x-go-name: RootFsSize
        rwSize:
          format: int64
          type: integer
          x-go-name: RwSize
      type: object
      x-go-package: github.com/containers/podman/v5/pkg/ps/define
    ContainerState:
      description: |-
        ContainerState stores container's running state
        it's part of ContainerJSONBase and will return by "inspect" command
      example:
        Status: Status
        Restarting: true
        Dead: true
        Health:
          Status: Status
          Log:
          - Start: 2000-01-23T04:56:07.000+00:00
            ExitCode: 3
            Output: Output
            End: 2000-01-23T04:56:07.000+00:00
          - Start: 2000-01-23T04:56:07.000+00:00
            ExitCode: 3
            Output: Output
            End: 2000-01-23T04:56:07.000+00:00
          FailingStreak: 5
        ExitCode: 7
        Running: true
        Error: Error
        FinishedAt: FinishedAt
        OOMKilled: true
        Pid: 4
        StartedAt: StartedAt
        Paused: true
      properties:
        Dead:
          type: boolean
        Error:
          type: string
        ExitCode:
          format: int64
          type: integer
        FinishedAt:
          type: string
        Health:
          $ref: "#/components/schemas/Health"
        OOMKilled:
          type: boolean
        Paused:
          type: boolean
        Pid:
          format: int64
          type: integer
        Restarting:
          type: boolean
        Running:
          type: boolean
        StartedAt:
          type: string
        Status:
          type: string
      type: object
      x-go-package: github.com/docker/docker/api/types
    ContainerStats:
      description: ContainerStats contains the statistics information for a running
        container
      example:
        SystemNano: 9
        MemPerc: 3.616076749251911
        CPU: 5.962133916683182
        Duration: 7
        CPUNano: 5
        PerCPU:
        - 5
        - 5
        BlockOutput: 1
        PIDs: 4
        AvgCPU: 0.8008281904610115
        Name: Name
        BlockInput: 6
        CPUSystemNano: 2
        ContainerID: ContainerID
        UpTime: 9
        MemLimit: 9
        Network:
          key:
            RxDropped: 7
            RxPackets: 1
            RxErrors: 1
            TxErrors: 7
            TxPackets: 1
            RxBytes: 4
            TxBytes: 1
            TxDropped: 6
        MemUsage: 2
      properties:
        AvgCPU:
          format: double
          type: number
        BlockInput:
          format: uint64
          type: integer
        BlockOutput:
          format: uint64
          type: integer
        CPU:
          format: double
          type: number
        CPUNano:
          format: uint64
          type: integer
        CPUSystemNano:
          format: uint64
          type: integer
        ContainerID:
          type: string
        Duration:
          format: uint64
          type: integer
        MemLimit:
          format: uint64
          type: integer
        MemPerc:
          format: double
          type: number
        MemUsage:
          format: uint64
          type: integer
        Name:
          type: string
        Network:
          additionalProperties:
            $ref: "#/components/schemas/ContainerNetworkStats"
          description: Map of interface name to network statistics for that interface.
          type: object
        PIDs:
          format: uint64
          type: integer
        PerCPU:
          items:
            format: uint64
            type: integer
          type: array
        SystemNano:
          format: uint64
          type: integer
        UpTime:
          description: |-
            A Duration represents the elapsed time between two instants
            as an int64 nanosecond count. The representation limits the
            largest representable duration to approximately 290 years.
          format: int64
          type: integer
          x-go-package: time
      type: object
      x-go-package: github.com/containers/podman/v5/libpod/define
    ContainerStorageConfig:
      description: |-
        ContainerStorageConfig contains information on the storage configuration of a
        container.
      properties:
        chroot_directories:
          description: |-
            ChrootDirs is an additional set of directories that need to be
            treated as root directories. Standard bind mounts will be mounted
            into paths relative to these directories.
            Optional.
          items:
            type: string
          type: array
          x-go-name: ChrootDirs
        create_working_dir:
          description: |-
            Create the working directory if it doesn't exist.
            If unset, it doesn't create it.
            Optional.
          type: boolean
          x-go-name: CreateWorkingDir
        device_cgroup_rule:
          description: |-
            DeviceCgroupRule are device cgroup rules that allow containers
            to use additional types of devices.
          items:
            $ref: "#/components/schemas/LinuxDeviceCgroup"
          type: array
          x-go-name: DeviceCgroupRule
        devices:
          description: |-
            Devices are devices that will be added to the container.
            Optional.
          items:
            $ref: "#/components/schemas/LinuxDevice"
          type: array
          x-go-name: Devices
        devices_from:
          description: |-
            DevicesFrom specifies that this container will mount the device(s) from other container(s).
            Optional.
          items:
            type: string
          type: array
          x-go-name: DevicesFrom
        host_device_list:
          description: HostDeviceList is used to recreate the mounted device on inherited
            containers
          items:
            $ref: "#/components/schemas/LinuxDevice"
          type: array
          x-go-name: HostDeviceList
        image:
          description: |-
            Image is the image the container will be based on. The image will be
            used as the container's root filesystem, and its environment vars,
            volumes, and other configuration will be applied to the container.
            Conflicts with Rootfs.
            At least one of Image or Rootfs must be specified.
          type: string
          x-go-name: Image
        image_arch:
          description: |-
            ImageArch is the user-specified image architecture.
            Used to select a different variant from a manifest list.
            Optional.
          type: string
          x-go-name: ImageArch
        image_os:
          description: |-
            ImageOS is the user-specified OS of the image.
            Used to select a different variant from a manifest list.
            Optional.
          type: string
          x-go-name: ImageOS
        image_variant:
          description: |-
            ImageVariant is the user-specified image variant.
            Used to select a different variant from a manifest list.
            Optional.
          type: string
          x-go-name: ImageVariant
        image_volume_mode:
          description: |-
            ImageVolumeMode indicates how image volumes will be created.
            Supported modes are "ignore" (do not create), "tmpfs" (create as
            tmpfs), and "anonymous" (create as anonymous volumes).
            The default if unset is anonymous.
            Optional.
          type: string
          x-go-name: ImageVolumeMode
        image_volumes:
          description: |-
            Image volumes bind-mount a container-image mount into the container.
            Optional.
          items:
            $ref: "#/components/schemas/ImageVolume"
          type: array
          x-go-name: ImageVolumes
        init:
          description: |-
            Init specifies that an init binary will be mounted into the
            container, and will be used as PID1.
            Optional.
          type: boolean
          x-go-name: Init
        init_path:
          description: |-
            InitPath specifies the path to the init binary that will be added if
            Init is specified above. If not specified, the default set in the
            Libpod config will be used. Ignored if Init above is not set.
            Optional.
          type: string
          x-go-name: InitPath
        ipcns:
          $ref: "#/components/schemas/Namespace"
        mounts:
          description: |-
            Mounts are mounts that will be added to the container.
            These will supersede Image Volumes and VolumesFrom volumes where
            there are conflicts.
            Optional.
          items:
            $ref: "#/components/schemas/Mount"
          type: array
          x-go-name: Mounts
        overlay_volumes:
          description: |-
            Overlay volumes are named volumes that will be added to the container.
            Optional.
          items:
            $ref: "#/components/schemas/OverlayVolume"
          type: array
          x-go-name: OverlayVolumes
        raw_image_name:
          description: |-
            RawImageName is the user-specified and unprocessed input referring
            to a local or a remote image.
            Optional, but strongly encouraged to be set if Image is set.
          type: string
          x-go-name: RawImageName
        rootfs:
          description: |-
            Rootfs is the path to a directory that will be used as the
            container's root filesystem. No modification will be made to the
            directory, it will be directly mounted into the container as root.
            Conflicts with Image.
            At least one of Image or Rootfs must be specified.
          type: string
          x-go-name: Rootfs
        rootfs_mapping:
          description: |-
            RootfsMapping specifies if there are UID/GID mappings to apply to the rootfs.
            Optional.
          type: string
          x-go-name: RootfsMapping
        rootfs_overlay:
          description: |-
            RootfsOverlay tells if rootfs is actually an overlay on top of base path.
            Optional.
          type: boolean
          x-go-name: RootfsOverlay
        rootfs_propagation:
          description: |-
            RootfsPropagation is the rootfs propagation mode for the container.
            If not set, the default of rslave will be used.
            Optional.
          type: string
          x-go-name: RootfsPropagation
        secrets:
          description: |-
            Secrets are the secrets that will be added to the container
            Optional.
          items:
            $ref: "#/components/schemas/Secret"
          type: array
          x-go-name: Secrets
        shm_size:
          description: |-
            ShmSize is the size of the tmpfs to mount in at /dev/shm, in bytes.
            Conflicts with ShmSize if IpcNS is not private.
            Optional.
          format: int64
          type: integer
          x-go-name: ShmSize
        shm_size_systemd:
          description: |-
            ShmSizeSystemd is the size of systemd-specific tmpfs mounts
            specifically /run, /run/lock, /var/log/journal and /tmp.
            Optional
          format: int64
          type: integer
          x-go-name: ShmSizeSystemd
        storage_opts:
          additionalProperties:
            type: string
          description: |-
            StorageOpts is the container's storage options
            Optional.
          type: object
          x-go-name: StorageOpts
        volatile:
          description: |-
            Volatile specifies whether the container storage can be optimized
            at the cost of not syncing all the dirty files in memory.
            Optional.
          type: boolean
          x-go-name: Volatile
        volumes:
          description: |-
            Volumes are named volumes that will be added to the container.
            These will supersede Image Volumes and VolumesFrom volumes where
            there are conflicts.
            Optional.
          items:
            $ref: "#/components/schemas/NamedVolume"
          type: array
          x-go-name: Volumes
        volumes_from:
          description: |-
            VolumesFrom is a set of containers whose volumes will be added to
            this container. The name or ID of the container must be provided, and
            may optionally be followed by a : and then one or more
            comma-separated options. Valid options are 'ro', 'rw', and 'z'.
            Options will be used for all volumes sourced from the container.
            Optional.
          items:
            type: string
          type: array
          x-go-name: VolumesFrom
        work_dir:
          description: |-
            WorkDir is the container's working directory.
            If unset, the default, /, will be used.
            Optional.
          type: string
          x-go-name: WorkDir
      type: object
      x-go-package: github.com/containers/podman/v5/pkg/specgen
    ContainerStore:
      description: |-
        ContainerStore describes the quantity of containers in the
        store by status
      example:
        running: 7
        number: 2
        paused: 4
        stopped: 1
      properties:
        number:
          format: int64
          type: integer
          x-go-name: Number
        paused:
          format: int64
          type: integer
          x-go-name: Paused
        running:
          format: int64
          type: integer
          x-go-name: Running
        stopped:
          format: int64
          type: integer
          x-go-name: Stopped
      type: object
      x-go-package: github.com/containers/podman/v5/libpod/define
    ContainerTopOKBody:
      description: ContainerTopOKBody OK response to ContainerTop operation
      example:
        Processes:
        - - Processes
          - Processes
        - - Processes
          - Processes
        Titles:
        - Titles
        - Titles
      properties:
        Processes:
          description: |-
            Each process running in the container, where each is process
            is an array of values corresponding to the titles.
          items:
            items:
              type: string
            type: array
          type: array
        Titles:
          description: The ps column titles
          items:
            type: string
          type: array
      required:
      - Processes
      - Titles
      type: object
      x-go-package: github.com/docker/docker/api/types/container
    ContainerUpdateOKBody:
      description: ContainerUpdateOKBody OK response to ContainerUpdate operation
      properties:
        Warnings:
          description: warnings
          items:
            type: string
          type: array
      required:
      - Warnings
      type: object
      x-go-package: github.com/docker/docker/api/types/container
    ContainersPruneReport:
      example:
        SpaceReclaimed: 0
        ContainersDeleted:
        - ContainersDeleted
        - ContainersDeleted
      properties:
        ContainersDeleted:
          items:
            type: string
          type: array
        SpaceReclaimed:
          format: uint64
          type: integer
      type: object
      x-go-package: github.com/containers/podman/v5/pkg/api/handlers
    ContainersPruneReportLibpod:
      example:
        Err: Err
        Size: 0
        Id: Id
      properties:
        Err:
          description: |-
            Error which occurred during prune operation (if any).
            This field is optional and may be omitted if no error occurred.
          nullable: true
          type: string
          x-omitempty: true
          x-go-name: PruneError
        Id:
          type: string
          x-go-name: ID
        Size:
          format: int64
          type: integer
          x-go-name: SpaceReclaimed
      type: object
      x-go-package: github.com/containers/podman/v5/pkg/api/handlers
    CreateContainerConfig:
      description: CreateContainerConfig used when compatible endpoint creates a container
      example:
        User: User
        OpenStdin: true
        Env:
        - Env
        - Env
        EnvMerge:
        - EnvMerge
        - EnvMerge
        Image: Image
        StdinOnce: true
        Name: Name
        AttachStdout: true
        Shell:
        - Shell
        - Shell
        Volumes:
          key: "{}"
        AttachStdin: true
        Domainname: Domainname
        UnsetEnv:
        - UnsetEnv
        - UnsetEnv
        HostConfig:
          ReadonlyRootfs: true
          StorageOpt:
            key: StorageOpt
          BlkioWeightDevice:
          - Path: Path
            Weight: 3
          - Path: Path
            Weight: 3
          DnsOptions:
          - DnsOptions
          - DnsOptions
          Memory: 6
          CpuPeriod: 1
          Dns:
          - Dns
          - Dns
          PortBindings:
            key:
            - HostIp: HostIp
              HostPort: HostPort
            - HostIp: HostIp
              HostPort: HostPort
          VolumesFrom:
          - VolumesFrom
          - VolumesFrom
          MaskedPaths:
          - MaskedPaths
          - MaskedPaths
          Devices:
          - CgroupPermissions: CgroupPermissions
            PathInContainer: PathInContainer
            PathOnHost: PathOnHost
          - CgroupPermissions: CgroupPermissions
            PathInContainer: PathInContainer
            PathOnHost: PathOnHost
          MemorySwappiness: 6
          BlkioWeight: 9
          CgroupnsMode: CgroupnsMode
          Init: true
          Runtime: Runtime
          Annotations:
            key: Annotations
          DeviceCgroupRules:
          - DeviceCgroupRules
          - DeviceCgroupRules
          UsernsMode: UsernsMode
          Ulimits:
          - Hard: 6
            Soft: 3
            Name: Name
          - Hard: 6
            Soft: 3
            Name: Name
          CpusetCpus: CpusetCpus
          MemoryReservation: 8
          Mounts:
          - BindOptions:
              ReadOnlyForceRecursive: true
              NonRecursive: true
              Propagation: Propagation
              ReadOnlyNonRecursive: true
              CreateMountpoint: true
            ReadOnly: true
            Target: Target
            Type: Type
            VolumeOptions:
              NoCopy: true
              Subpath: Subpath
              DriverConfig:
                Options:
                  key: Options
                Name: Name
              Labels:
                key: Labels
            Consistency: Consistency
            TmpfsOptions:
              Options:
              - - Options
                - Options
              - - Options
                - Options
              Mode: 3
              SizeBytes: 6
            Source: Source
            ClusterOptions: "{}"
          - BindOptions:
              ReadOnlyForceRecursive: true
              NonRecursive: true
              Propagation: Propagation
              ReadOnlyNonRecursive: true
              CreateMountpoint: true
            ReadOnly: true
            Target: Target
            Type: Type
            VolumeOptions:
              NoCopy: true
              Subpath: Subpath
              DriverConfig:
                Options:
                  key: Options
                Name: Name
              Labels:
                key: Labels
            Consistency: Consistency
            TmpfsOptions:
              Options:
              - - Options
                - Options
              - - Options
                - Options
              Mode: 3
              SizeBytes: 6
            Source: Source
            ClusterOptions: "{}"
          ExtraHosts:
          - ExtraHosts
          - ExtraHosts
          BlkioDeviceWriteIOps:
          - Path: Path
            Rate: 7
          - Path: Path
            Rate: 7
          ReadonlyPaths:
          - ReadonlyPaths
          - ReadonlyPaths
          UTSMode: UTSMode
          Cgroup: Cgroup
          CpuQuota: 1
          CpuRealtimeRuntime: 6
          DnsSearch:
          - DnsSearch
          - DnsSearch
          CpuShares: 7
          ContainerIDFile: ContainerIDFile
          OomScoreAdj: 2
          KernelMemory: 9
          LogConfig:
            Type: Type
            Config:
              key: Config
          DeviceRequests:
          - DeviceIDs:
            - DeviceIDs
            - DeviceIDs
            Options:
              key: Options
            Capabilities:
            - - Capabilities
              - Capabilities
            - - Capabilities
              - Capabilities
            Driver: Driver
            Count: 1
          - DeviceIDs:
            - DeviceIDs
            - DeviceIDs
            Options:
              key: Options
            Capabilities:
            - - Capabilities
              - Capabilities
            - - Capabilities
              - Capabilities
            Driver: Driver
            Count: 1
          OomKillDisable: true
          IOMaximumBandwidth: 4
          Privileged: true
          Sysctls:
            key: Sysctls
          GroupAdd:
          - GroupAdd
          - GroupAdd
          AutoRemove: true
          KernelMemoryTCP: 9
          CpuPercent: 7
          ConsoleSize:
          - 2
          - 2
          IOMaximumIOps: 5
          CapAdd:
          - CapAdd
          - CapAdd
          VolumeDriver: VolumeDriver
          CapDrop:
          - CapDrop
          - CapDrop
          CpuCount: 4
          PublishAllPorts: true
          Tmpfs:
            key: Tmpfs
          CpuRealtimePeriod: 1
          IpcMode: IpcMode
          Binds:
          - Binds
          - Binds
          CpusetMems: CpusetMems
          BlkioDeviceWriteBps:
          - Path: Path
            Rate: 7
          - Path: Path
            Rate: 7
          RestartPolicy:
            MaximumRetryCount: 6
            Name: Name
          NetworkMode: NetworkMode
          PidMode: PidMode
          BlkioDeviceReadBps:
          - Path: Path
            Rate: 7
          - Path: Path
            Rate: 7
          CgroupParent: CgroupParent
          NanoCpus: 1
          MemorySwap: 9
          Isolation: Isolation
          Links:
          - Links
          - Links
          PidsLimit: 6
          BlkioDeviceReadIOps:
          - Path: Path
            Rate: 7
          - Path: Path
            Rate: 7
          SecurityOpt:
          - SecurityOpt
          - SecurityOpt
          ShmSize: 5
        Tty: true
        Cmd:
        - Cmd
        - Cmd
        StopTimeout: 0
        StopSignal: StopSignal
        Entrypoint:
        - Entrypoint
        - Entrypoint
        NetworkingConfig:
          EndpointsConfig:
            key:
              GlobalIPv6Address: GlobalIPv6Address
              GlobalIPv6PrefixLen: 7
              IPPrefixLen: 6
              Aliases:
              - Aliases
              - Aliases
              MacAddress: MacAddress
              NetworkID: NetworkID
              DNSNames:
              - DNSNames
              - DNSNames
              IPAMConfig:
                LinkLocalIPs:
                - LinkLocalIPs
                - LinkLocalIPs
                IPv6Address: IPv6Address
                IPv4Address: IPv4Address
              DriverOpts:
                key: DriverOpts
              Gateway: Gateway
              EndpointID: EndpointID
              Links:
              - Links
              - Links
              IPv6Gateway: IPv6Gateway
              IPAddress: IPAddress
        AttachStderr: true
        ArgsEscaped: true
        Hostname: Hostname
        Labels:
          key: Labels
        Healthcheck:
          StartInterval: 1
          Test:
          - Test
          - Test
          Retries: 6
          Timeout: 5
          Interval: 0
          StartPeriod: 5
        MacAddress: MacAddress
        NetworkDisabled: true
        ExposedPorts:
          key: "{}"
        WorkingDir: WorkingDir
        OnBuild:
        - OnBuild
        - OnBuild
        UnsetEnvAll: true
      properties:
        ArgsEscaped:
          type: boolean
        AttachStderr:
          type: boolean
        AttachStdin:
          type: boolean
        AttachStdout:
          type: boolean
        Cmd:
          description: We need to override the json decoder to accept both options.
          items:
            type: string
          title: StrSlice represents a string or an array of strings.
          type: array
          x-go-package: github.com/docker/docker/api/types/strslice
        Domainname:
          type: string
        Entrypoint:
          description: We need to override the json decoder to accept both options.
          items:
            type: string
          title: StrSlice represents a string or an array of strings.
          type: array
          x-go-package: github.com/docker/docker/api/types/strslice
        Env:
          items:
            type: string
          type: array
        EnvMerge:
          items:
            type: string
          type: array
        ExposedPorts:
          additionalProperties:
            properties: {}
            type: object
          description: PortSet is a collection of structs indexed by Port
          type: object
          x-go-package: github.com/docker/go-connections/nat
        Healthcheck:
          $ref: "#/components/schemas/HealthcheckConfig"
        HostConfig:
          $ref: "#/components/schemas/HostConfig"
        Hostname:
          type: string
        Image:
          type: string
        Labels:
          additionalProperties:
            type: string
          type: object
        MacAddress:
          description: |-
            Mac Address of the container.

            Deprecated: this field is deprecated since API v1.44. Use EndpointSettings.MacAddress instead.
          type: string
        Name:
          type: string
        NetworkDisabled:
          type: boolean
        NetworkingConfig:
          $ref: "#/components/schemas/NetworkingConfig"
        OnBuild:
          items:
            type: string
          type: array
        OpenStdin:
          type: boolean
        Shell:
          description: We need to override the json decoder to accept both options.
          items:
            type: string
          title: StrSlice represents a string or an array of strings.
          type: array
          x-go-package: github.com/docker/docker/api/types/strslice
        StdinOnce:
          type: boolean
        StopSignal:
          type: string
        StopTimeout:
          format: int64
          type: integer
        Tty:
          type: boolean
        UnsetEnv:
          items:
            type: string
          type: array
        UnsetEnvAll:
          type: boolean
        User:
          type: string
        Volumes:
          additionalProperties:
            properties: {}
            type: object
          type: object
        WorkingDir:
          type: string
      type: object
      x-go-package: github.com/containers/podman/v5/pkg/api/handlers
    CreateOptions:
      properties:
        Attachable:
          type: boolean
        ConfigFrom:
          $ref: "#/components/schemas/ConfigReference"
        ConfigOnly:
          type: boolean
        Driver:
          description: Name of the volume driver to use.
          type: string
        EnableIPv6:
          type: boolean
        IPAM:
          $ref: "#/components/schemas/IPAM"
        Ingress:
          type: boolean
        Internal:
          type: boolean
        Labels:
          additionalProperties:
            type: string
          description: User-defined key/value metadata.
          type: object
        Options:
          additionalProperties:
            type: string
          type: object
        Scope:
          type: string
      title: CreateOptions holds options to create a network.
      type: object
      x-go-package: github.com/docker/docker/api/types/network
    CreateRequest:
      example:
        Options:
          key: Options
        Internal: true
        Driver: Driver
        Ingress: true
        Labels:
          key: Labels
        EnableIPv6: true
        Name: Name
        CheckDuplicate: true
        ConfigOnly: true
        IPAM:
          Options:
            key: Options
          Config:
          - AuxiliaryAddresses:
              key: AuxiliaryAddresses
            Gateway: Gateway
            Subnet: Subnet
            IPRange: IPRange
          - AuxiliaryAddresses:
              key: AuxiliaryAddresses
            Gateway: Gateway
            Subnet: Subnet
            IPRange: IPRange
          Driver: Driver
        Scope: Scope
        ConfigFrom:
          Network: Network
        Attachable: true
      properties:
        Attachable:
          type: boolean
        CheckDuplicate:
          description: |-
            Deprecated: CheckDuplicate is deprecated since API v1.44, but it defaults to true when sent by the client
            package to older daemons.
          type: boolean
        ConfigFrom:
          $ref: "#/components/schemas/ConfigReference"
        ConfigOnly:
          type: boolean
        Driver:
          type: string
        EnableIPv6:
          type: boolean
        IPAM:
          $ref: "#/components/schemas/IPAM"
        Ingress:
          type: boolean
        Internal:
          type: boolean
        Labels:
          additionalProperties:
            type: string
          type: object
        Name:
          type: string
        Options:
          additionalProperties:
            type: string
          type: object
        Scope:
          type: string
      title: CreateRequest is the request message sent to the server for network create
        call.
      type: object
      x-go-package: github.com/docker/docker/api/types/network
    CreateResponse:
      description: OK response to ContainerCreate operation
      properties:
        Id:
          description: The ID of the created container
          type: string
          x-go-name: ID
        Warnings:
          description: Warnings encountered when creating the container
          items:
            type: string
          type: array
      required:
      - Id
      - Warnings
      title: CreateResponse ContainerCreateResponse
      type: object
      x-go-package: github.com/docker/docker/api/types/container
    DNSNetworkInfo:
      example:
        path: path
        package: package
        version: version
      properties:
        package:
          type: string
          x-go-name: Package
        path:
          type: string
          x-go-name: Path
        version:
          type: string
          x-go-name: Version
      title: NetworkInfo contains the DNS information.
      type: object
      x-go-package: github.com/containers/common/libnetwork/types
    DeleteResponse:
      description: DeleteResponse delete response
      properties:
        Deleted:
          description: The image ID of an image that was deleted
          type: string
        Untagged:
          description: The image ID of an image that was untagged
          type: string
      type: object
      x-go-package: github.com/docker/docker/api/types/image
    Descriptor:
      description: |-
        This structure provides `application/vnd.oci.descriptor.v1+json` mediatype
        when marshalled to JSON.
      example:
        artifactType: artifactType
        urls:
        - urls
        - urls
        data:
        - 1
        - 1
        size: 5
        digest: digest
        annotations:
          key: annotations
        mediaType: mediaType
        platform:
          os: os
          os.features:
          - os.features
          - os.features
          variant: variant
          architecture: architecture
          os.version: os.version
      properties:
        annotations:
          additionalProperties:
            type: string
          description: Annotations contains arbitrary metadata relating to the targeted
            content.
          type: object
          x-go-name: Annotations
        artifactType:
          description: ArtifactType is the IANA media type of this artifact.
          type: string
          x-go-name: ArtifactType
        data:
          description: |-
            Data is an embedding of the targeted content. This is encoded as a base64
            string when marshalled to JSON (automatically, by encoding/json). If
            present, Data can be used directly to avoid fetching the targeted content.
          items:
            format: uint8
            type: integer
          type: array
          x-go-name: Data
        digest:
          description: |-
            The following is an example of the contents of Digest types:

            sha256:7173b809ca12ec5dee4506cd86be934c4596dd234ee82c0662eac04a8c2c71dc

            This allows to abstract the digest behind this type and work only in those
            terms.
          title: |-
            Digest allows simple protection of hex formatted digest strings, prefixed
            by their algorithm. Strings of type Digest have some guarantee of being in
            the correct format and it provides quick access to the components of a
            digest string.
          type: string
          x-go-package: github.com/opencontainers/go-digest
        mediaType:
          description: MediaType is the media type of the object this schema refers
            to.
          type: string
          x-go-name: MediaType
        platform:
          $ref: "#/components/schemas/Platform"
        size:
          description: Size specifies the size in bytes of the blob.
          format: int64
          type: integer
          x-go-name: Size
        urls:
          description: URLs specifies a list of URLs from which this object MAY be
            downloaded
          items:
            type: string
          type: array
          x-go-name: URLs
      title: Descriptor describes the disposition of targeted content.
      type: object
      x-go-package: github.com/opencontainers/image-spec/specs-go/v1
    DeviceMapping:
      example:
        CgroupPermissions: CgroupPermissions
        PathInContainer: PathInContainer
        PathOnHost: PathOnHost
      properties:
        CgroupPermissions:
          type: string
        PathInContainer:
          type: string
        PathOnHost:
          type: string
      title: DeviceMapping represents the device mapping between the host and the
        container.
      type: object
      x-go-package: github.com/docker/docker/api/types/container
    DeviceRequest:
      description: Used by GPU device drivers.
      example:
        DeviceIDs:
        - DeviceIDs
        - DeviceIDs
        Options:
          key: Options
        Capabilities:
        - - Capabilities
          - Capabilities
        - - Capabilities
          - Capabilities
        Driver: Driver
        Count: 1
      properties:
        Capabilities:
          items:
            items:
              type: string
            type: array
          type: array
        Count:
          format: int64
          type: integer
        DeviceIDs:
          items:
            type: string
          type: array
        Driver:
          type: string
        Options:
          additionalProperties:
            type: string
          type: object
      title: DeviceRequest represents a request for devices from a device driver.
      type: object
      x-go-package: github.com/docker/docker/api/types/container
    Digest:
      description: |-
        The following is an example of the contents of Digest types:

        sha256:7173b809ca12ec5dee4506cd86be934c4596dd234ee82c0662eac04a8c2c71dc

        This allows to abstract the digest behind this type and work only in those
        terms.
      title: |-
        Digest allows simple protection of hex formatted digest strings, prefixed
        by their algorithm. Strings of type Digest have some guarantee of being in
        the correct format and it provides quick access to the components of a
        digest string.
      type: string
      x-go-package: github.com/opencontainers/go-digest
    DisconnectOptions:
      description: |-
        DisconnectOptions represents the data to be used to disconnect a container
        from the network.
      example:
        Container: Container
        Force: true
      properties:
        Container:
          type: string
        Force:
          type: boolean
      type: object
      x-go-package: github.com/docker/docker/api/types/network
    DistributionInfo:
      description: DistributionInfo describes the host distribution for libpod
      example:
        codename: codename
        variant: variant
        distribution: distribution
        version: version
      properties:
        codename:
          type: string
          x-go-name: Codename
        distribution:
          type: string
          x-go-name: Distribution
        variant:
          type: string
          x-go-name: Variant
        version:
          type: string
          x-go-name: Version
      type: object
      x-go-package: github.com/containers/podman/v5/libpod/define
    Driver:
      example:
        Options:
          key: Options
        Name: Name
      properties:
        Name:
          type: string
        Options:
          additionalProperties:
            type: string
          type: object
      title: Driver represents a volume driver.
      type: object
      x-go-package: github.com/docker/docker/api/types/mount
    DriverData:
      description: DriverData handles the data for a storage driver
      example:
        Data:
          key: Data
        Name: Name
      properties:
        Data:
          additionalProperties:
            type: string
          type: object
        Name:
          type: string
      type: object
      x-go-package: github.com/containers/podman/v5/libpod/define
    Duration:
      description: |-
        A Duration represents the elapsed time between two instants
        as an int64 nanosecond count. The representation limits the
        largest representable duration to approximately 290 years.
      format: int64
      type: integer
      x-go-package: time
    EndpointIPAMConfig:
      description: EndpointIPAMConfig represents IPAM configurations for the endpoint
      example:
        LinkLocalIPs:
        - LinkLocalIPs
        - LinkLocalIPs
        IPv6Address: IPv6Address
        IPv4Address: IPv4Address
      properties:
        IPv4Address:
          type: string
        IPv6Address:
          type: string
        LinkLocalIPs:
          items:
            type: string
          type: array
      type: object
      x-go-package: github.com/docker/docker/api/types/network
    EndpointResource:
      description: |-
        EndpointResource contains network resources allocated and used for a
        container in a network.
      example:
        EndpointID: EndpointID
        IPv6Address: IPv6Address
        MacAddress: MacAddress
        IPv4Address: IPv4Address
        Name: Name
      properties:
        EndpointID:
          type: string
        IPv4Address:
          type: string
        IPv6Address:
          type: string
        MacAddress:
          type: string
        Name:
          type: string
      type: object
      x-go-package: github.com/docker/docker/api/types/network
    EndpointSettings:
      description: EndpointSettings stores the network endpoint details
      example:
        GlobalIPv6Address: GlobalIPv6Address
        GlobalIPv6PrefixLen: 7
        IPPrefixLen: 6
        Aliases:
        - Aliases
        - Aliases
        MacAddress: MacAddress
        NetworkID: NetworkID
        DNSNames:
        - DNSNames
        - DNSNames
        IPAMConfig:
          LinkLocalIPs:
          - LinkLocalIPs
          - LinkLocalIPs
          IPv6Address: IPv6Address
          IPv4Address: IPv4Address
        DriverOpts:
          key: DriverOpts
        Gateway: Gateway
        EndpointID: EndpointID
        Links:
        - Links
        - Links
        IPv6Gateway: IPv6Gateway
        IPAddress: IPAddress
      properties:
        Aliases:
          items:
            type: string
          type: array
        DNSNames:
          description: |-
            DNSNames holds all the (non fully qualified) DNS names associated to this endpoint. First entry is used to
            generate PTR records.
          items:
            type: string
          type: array
        DriverOpts:
          additionalProperties:
            type: string
          type: object
        EndpointID:
          type: string
        Gateway:
          type: string
        GlobalIPv6Address:
          type: string
        GlobalIPv6PrefixLen:
          format: int64
          type: integer
        IPAMConfig:
          $ref: "#/components/schemas/EndpointIPAMConfig"
        IPAddress:
          type: string
        IPPrefixLen:
          format: int64
          type: integer
        IPv6Gateway:
          type: string
        Links:
          items:
            type: string
          type: array
        MacAddress:
          description: |-
            MacAddress may be used to specify a MAC address when the container is created.
            Once the container is running, it becomes operational data (it may contain a
            generated address).
          type: string
        NetworkID:
          description: Operational data
          type: string
      type: object
      x-go-package: github.com/docker/docker/api/types/network
    ErrorModel:
      description: ErrorModel is used in remote connections with podman
      example:
        response: 400
        cause: API root cause
        message: human error message
      properties:
        cause:
          description: API root cause formatted for automated parsing
          example: API root cause
          type: string
          x-go-name: Because
        message:
          description: "human error message, formatted for a human to read"
          example: human error message
          type: string
          x-go-name: Message
        response:
          description: HTTP response code
          format: int64
          minimum: 400
          type: integer
          x-go-name: ResponseCode
      type: object
      x-go-package: github.com/containers/podman/v5/pkg/errorhandling
    ErrorResponse:
      properties:
        message:
          description: The error message.
          type: string
          x-go-name: Message
      required:
      - message
      title: ErrorResponse Represents an error.
      type: object
      x-go-package: github.com/docker/docker/api/types
    FileMode:
      description: |-
        The bits have the same definition on all systems, so that
        information about files can be moved from one system
        to another portably. Not all bits apply to all systems.
        The only required bit is [ModeDir] for directories.
      format: uint32
      title: A FileMode represents a file's mode and permission bits.
      type: integer
      x-go-package: io/fs
    FilesystemChange:
      properties:
        Kind:
          description: |-
            Can be one of:

            `0`: Modified ("C")
            `1`: Added ("A")
            `2`: Deleted ("D")
          format: uint8
          title: ChangeType Kind of change
          type: integer
          x-go-package: github.com/docker/docker/api/types/container
        Path:
          description: Path to file or directory that has changed.
          type: string
      required:
      - Kind
      - Path
      title: FilesystemChange Change in the container's filesystem.
      type: object
      x-go-package: github.com/docker/docker/api/types/container
    GraphDriverData:
      description: |-
        GraphDriverData Information about the storage driver used to store the container's and
        image's filesystem.
      example:
        Data:
          key: Data
        Name: Name
      properties:
        Data:
          additionalProperties:
            type: string
          description: |-
            Low-level storage metadata, provided as key/value pairs.

            This information is driver-specific, and depends on the storage-driver
            in use, and should be used for informational purposes only.
          type: object
        Name:
          description: Name of the storage driver.
          type: string
      required:
      - Data
      - Name
      type: object
      x-go-package: github.com/docker/docker/api/types
    HardwareAddr:
      items:
        format: uint8
        type: integer
      title: A HardwareAddr represents a physical hardware address.
      type: array
      x-go-package: net
    Health:
      description: Health stores information about the container's healthcheck results
      example:
        Status: Status
        Log:
        - Start: 2000-01-23T04:56:07.000+00:00
          ExitCode: 3
          Output: Output
          End: 2000-01-23T04:56:07.000+00:00
        - Start: 2000-01-23T04:56:07.000+00:00
          ExitCode: 3
          Output: Output
          End: 2000-01-23T04:56:07.000+00:00
        FailingStreak: 5
      properties:
        FailingStreak:
          format: int64
          type: integer
        Log:
          items:
            $ref: "#/components/schemas/HealthcheckResult"
          type: array
        Status:
          type: string
      type: object
      x-go-package: github.com/docker/docker/api/types
    HealthCheckLog:
      description: HealthCheckLog describes the results of a single healthcheck
      example:
        Start: Start
        ExitCode: 6
        Output: Output
        End: End
      properties:
        End:
          description: End time as a string
          type: string
        ExitCode:
          description: Exitcode is 0 or 1
          format: int64
          type: integer
        Output:
          description: Output is the stdout/stderr from the healthcheck command
          type: string
        Start:
          description: Start time as string
          type: string
      type: object
      x-go-package: github.com/containers/podman/v5/libpod/define
    HealthCheckOnFailureAction:
      description: |-
        HealthCheckOnFailureAction defines how Podman reacts when a container's health
        status turns unhealthy.
      format: int64
      type: integer
      x-go-package: github.com/containers/podman/v5/libpod/define
    HealthCheckResults:
      description: HealthCheckResults describes the results/logs from a healthcheck
      example:
        Status: Status
        Log:
        - Start: Start
          ExitCode: 6
          Output: Output
          End: End
        - Start: Start
          ExitCode: 6
          Output: Output
          End: End
        FailingStreak: 0
      properties:
        FailingStreak:
          description: FailingStreak is the number of consecutive failed healthchecks
          format: int64
          type: integer
        Log:
          description: Log describes healthcheck attempts and results
          items:
            $ref: "#/components/schemas/HealthCheckLog"
          type: array
        Status:
          description: "Status starting, healthy or unhealthy"
          type: string
      type: object
      x-go-package: github.com/containers/podman/v5/libpod/define
    HealthcheckConfig:
      example:
        StartInterval: 1
        Test:
        - Test
        - Test
        Retries: 6
        Timeout: 5
        Interval: 0
        StartPeriod: 5
      properties:
        Interval:
          description: |-
            A Duration represents the elapsed time between two instants
            as an int64 nanosecond count. The representation limits the
            largest representable duration to approximately 290 years.
          format: int64
          type: integer
          x-go-package: time
        Retries:
          description: |-
            Retries is the number of consecutive failures needed to consider a container as unhealthy.
            Zero means inherit.
          format: int64
          type: integer
        StartInterval:
          description: |-
            A Duration represents the elapsed time between two instants
            as an int64 nanosecond count. The representation limits the
            largest representable duration to approximately 290 years.
          format: int64
          type: integer
          x-go-package: time
        StartPeriod:
          description: |-
            A Duration represents the elapsed time between two instants
            as an int64 nanosecond count. The representation limits the
            largest representable duration to approximately 290 years.
          format: int64
          type: integer
          x-go-package: time
        Test:
          description: |-
            Test is the test to perform to check that the container is healthy.
            An empty slice means to inherit the default.
            The options are:
            {} : inherit healthcheck
            {"NONE"} : disable healthcheck
            {"CMD", args...} : exec arguments directly
            {"CMD-SHELL", command} : run command with system's default shell
          items:
            type: string
          type: array
        Timeout:
          description: |-
            A Duration represents the elapsed time between two instants
            as an int64 nanosecond count. The representation limits the
            largest representable duration to approximately 290 years.
          format: int64
          type: integer
          x-go-package: time
      title: HealthcheckConfig holds configuration settings for the HEALTHCHECK feature.
      type: object
      x-go-package: github.com/moby/docker-image-spec/specs-go/v1
    HealthcheckResult:
      description: HealthcheckResult stores information about a single run of a healthcheck
        probe
      example:
        Start: 2000-01-23T04:56:07.000+00:00
        ExitCode: 3
        Output: Output
        End: 2000-01-23T04:56:07.000+00:00
      properties:
        End:
          format: date-time
          type: string
        ExitCode:
          format: int64
          type: integer
        Output:
          type: string
        Start:
          format: date-time
          type: string
      type: object
      x-go-package: github.com/docker/docker/api/types
    History:
      example:
        author: author
        created: 2000-01-23T04:56:07.000+00:00
        empty_layer: true
        comment: comment
        created_by: created_by
      properties:
        author:
          description: Author is the author of the build point.
          type: string
          x-go-name: Author
        comment:
          description: Comment is a custom message set when creating the layer.
          type: string
          x-go-name: Comment
        created:
          description: "Created is the combined date and time at which the layer was\
            \ created, formatted as defined by RFC 3339, section 5.6."
          format: date-time
          type: string
          x-go-name: Created
        created_by:
          description: CreatedBy is the command which created the layer.
          type: string
          x-go-name: CreatedBy
        empty_layer:
          description: EmptyLayer is used to mark if the history item created a filesystem
            diff.
          type: boolean
          x-go-name: EmptyLayer
      title: History describes the history of a layer.
      type: object
      x-go-package: github.com/opencontainers/image-spec/specs-go/v1
    HistoryResponse:
      description: HistoryResponse provides details on image layers
      example:
        Comment: Comment
        CreatedBy: CreatedBy
        Size: 6
        Id: Id
        Tags:
        - Tags
        - Tags
        Created: 0
      properties:
        Comment:
          type: string
        Created:
          format: int64
          type: integer
        CreatedBy:
          type: string
        Id:
          type: string
          x-go-name: ID
        Size:
          format: int64
          type: integer
        Tags:
          items:
            type: string
          type: array
      type: object
      x-go-package: github.com/containers/podman/v5/pkg/api/handlers
    HistoryResponseItem:
      description: HistoryResponseItem individual image layer information in response
        to ImageHistory operation
      properties:
        Comment:
          description: comment
          type: string
        Created:
          description: created
          format: int64
          type: integer
        CreatedBy:
          description: created by
          type: string
        Id:
          description: Id
          type: string
          x-go-name: ID
        Size:
          description: size
          format: int64
          type: integer
        Tags:
          description: tags
          items:
            type: string
          type: array
      required:
      - Comment
      - Created
      - CreatedBy
      - Id
      - Size
      - Tags
      type: object
      x-go-package: github.com/docker/docker/api/types/image
    HostConfig:
      description: |-
        Here, "non-portable" means "dependent of the host we are running on".
        Portable information *should* appear in Config.
      example:
        ReadonlyRootfs: true
        StorageOpt:
          key: StorageOpt
        BlkioWeightDevice:
        - Path: Path
          Weight: 3
        - Path: Path
          Weight: 3
        DnsOptions:
        - DnsOptions
        - DnsOptions
        Memory: 6
        CpuPeriod: 1
        Dns:
        - Dns
        - Dns
        PortBindings:
          key:
          - HostIp: HostIp
            HostPort: HostPort
          - HostIp: HostIp
            HostPort: HostPort
        VolumesFrom:
        - VolumesFrom
        - VolumesFrom
        MaskedPaths:
        - MaskedPaths
        - MaskedPaths
        Devices:
        - CgroupPermissions: CgroupPermissions
          PathInContainer: PathInContainer
          PathOnHost: PathOnHost
        - CgroupPermissions: CgroupPermissions
          PathInContainer: PathInContainer
          PathOnHost: PathOnHost
        MemorySwappiness: 6
        BlkioWeight: 9
        CgroupnsMode: CgroupnsMode
        Init: true
        Runtime: Runtime
        Annotations:
          key: Annotations
        DeviceCgroupRules:
        - DeviceCgroupRules
        - DeviceCgroupRules
        UsernsMode: UsernsMode
        Ulimits:
        - Hard: 6
          Soft: 3
          Name: Name
        - Hard: 6
          Soft: 3
          Name: Name
        CpusetCpus: CpusetCpus
        MemoryReservation: 8
        Mounts:
        - BindOptions:
            ReadOnlyForceRecursive: true
            NonRecursive: true
            Propagation: Propagation
            ReadOnlyNonRecursive: true
            CreateMountpoint: true
          ReadOnly: true
          Target: Target
          Type: Type
          VolumeOptions:
            NoCopy: true
            Subpath: Subpath
            DriverConfig:
              Options:
                key: Options
              Name: Name
            Labels:
              key: Labels
          Consistency: Consistency
          TmpfsOptions:
            Options:
            - - Options
              - Options
            - - Options
              - Options
            Mode: 3
            SizeBytes: 6
          Source: Source
          ClusterOptions: "{}"
        - BindOptions:
            ReadOnlyForceRecursive: true
            NonRecursive: true
            Propagation: Propagation
            ReadOnlyNonRecursive: true
            CreateMountpoint: true
          ReadOnly: true
          Target: Target
          Type: Type
          VolumeOptions:
            NoCopy: true
            Subpath: Subpath
            DriverConfig:
              Options:
                key: Options
              Name: Name
            Labels:
              key: Labels
          Consistency: Consistency
          TmpfsOptions:
            Options:
            - - Options
              - Options
            - - Options
              - Options
            Mode: 3
            SizeBytes: 6
          Source: Source
          ClusterOptions: "{}"
        ExtraHosts:
        - ExtraHosts
        - ExtraHosts
        BlkioDeviceWriteIOps:
        - Path: Path
          Rate: 7
        - Path: Path
          Rate: 7
        ReadonlyPaths:
        - ReadonlyPaths
        - ReadonlyPaths
        UTSMode: UTSMode
        Cgroup: Cgroup
        CpuQuota: 1
        CpuRealtimeRuntime: 6
        DnsSearch:
        - DnsSearch
        - DnsSearch
        CpuShares: 7
        ContainerIDFile: ContainerIDFile
        OomScoreAdj: 2
        KernelMemory: 9
        LogConfig:
          Type: Type
          Config:
            key: Config
        DeviceRequests:
        - DeviceIDs:
          - DeviceIDs
          - DeviceIDs
          Options:
            key: Options
          Capabilities:
          - - Capabilities
            - Capabilities
          - - Capabilities
            - Capabilities
          Driver: Driver
          Count: 1
        - DeviceIDs:
          - DeviceIDs
          - DeviceIDs
          Options:
            key: Options
          Capabilities:
          - - Capabilities
            - Capabilities
          - - Capabilities
            - Capabilities
          Driver: Driver
          Count: 1
        OomKillDisable: true
        IOMaximumBandwidth: 4
        Privileged: true
        Sysctls:
          key: Sysctls
        GroupAdd:
        - GroupAdd
        - GroupAdd
        AutoRemove: true
        KernelMemoryTCP: 9
        CpuPercent: 7
        ConsoleSize:
        - 2
        - 2
        IOMaximumIOps: 5
        CapAdd:
        - CapAdd
        - CapAdd
        VolumeDriver: VolumeDriver
        CapDrop:
        - CapDrop
        - CapDrop
        CpuCount: 4
        PublishAllPorts: true
        Tmpfs:
          key: Tmpfs
        CpuRealtimePeriod: 1
        IpcMode: IpcMode
        Binds:
        - Binds
        - Binds
        CpusetMems: CpusetMems
        BlkioDeviceWriteBps:
        - Path: Path
          Rate: 7
        - Path: Path
          Rate: 7
        RestartPolicy:
          MaximumRetryCount: 6
          Name: Name
        NetworkMode: NetworkMode
        PidMode: PidMode
        BlkioDeviceReadBps:
        - Path: Path
          Rate: 7
        - Path: Path
          Rate: 7
        CgroupParent: CgroupParent
        NanoCpus: 1
        MemorySwap: 9
        Isolation: Isolation
        Links:
        - Links
        - Links
        PidsLimit: 6
        BlkioDeviceReadIOps:
        - Path: Path
          Rate: 7
        - Path: Path
          Rate: 7
        SecurityOpt:
        - SecurityOpt
        - SecurityOpt
        ShmSize: 5
      properties:
        Annotations:
          additionalProperties:
            type: string
          type: object
        AutoRemove:
          type: boolean
        Binds:
          description: Applicable to all platforms
          items:
            type: string
          type: array
        BlkioDeviceReadBps:
          items:
            $ref: "#/components/schemas/ThrottleDevice"
          type: array
        BlkioDeviceReadIOps:
          items:
            $ref: "#/components/schemas/ThrottleDevice"
          type: array
        BlkioDeviceWriteBps:
          items:
            $ref: "#/components/schemas/ThrottleDevice"
          type: array
        BlkioDeviceWriteIOps:
          items:
            $ref: "#/components/schemas/ThrottleDevice"
          type: array
        BlkioWeight:
          format: uint16
          type: integer
        BlkioWeightDevice:
          items:
            $ref: "#/components/schemas/WeightDevice"
          type: array
        CapAdd:
          description: We need to override the json decoder to accept both options.
          items:
            type: string
          title: StrSlice represents a string or an array of strings.
          type: array
          x-go-package: github.com/docker/docker/api/types/strslice
        CapDrop:
          description: We need to override the json decoder to accept both options.
          items:
            type: string
          title: StrSlice represents a string or an array of strings.
          type: array
          x-go-package: github.com/docker/docker/api/types/strslice
        Cgroup:
          title: CgroupSpec represents the cgroup to use for the container.
          type: string
          x-go-package: github.com/docker/docker/api/types/container
        CgroupParent:
          description: Applicable to UNIX platforms
          type: string
        CgroupnsMode:
          description: CgroupnsMode represents the cgroup namespace mode of the container
          type: string
          x-go-package: github.com/docker/docker/api/types/container
        ConsoleSize:
          items:
            format: uint64
            type: integer
          type: array
        ContainerIDFile:
          type: string
        CpuCount:
          description: Applicable to Windows
          format: int64
          type: integer
          x-go-name: CPUCount
        CpuPercent:
          format: int64
          type: integer
          x-go-name: CPUPercent
        CpuPeriod:
          format: int64
          type: integer
          x-go-name: CPUPeriod
        CpuQuota:
          format: int64
          type: integer
          x-go-name: CPUQuota
        CpuRealtimePeriod:
          format: int64
          type: integer
          x-go-name: CPURealtimePeriod
        CpuRealtimeRuntime:
          format: int64
          type: integer
          x-go-name: CPURealtimeRuntime
        CpuShares:
          description: Applicable to all platforms
          format: int64
          type: integer
          x-go-name: CPUShares
        CpusetCpus:
          type: string
        CpusetMems:
          type: string
        DeviceCgroupRules:
          items:
            type: string
          type: array
        DeviceRequests:
          items:
            $ref: "#/components/schemas/DeviceRequest"
          type: array
        Devices:
          items:
            $ref: "#/components/schemas/DeviceMapping"
          type: array
        Dns:
          items:
            type: string
          type: array
          x-go-name: DNS
        DnsOptions:
          items:
            type: string
          type: array
          x-go-name: DNSOptions
        DnsSearch:
          items:
            type: string
          type: array
          x-go-name: DNSSearch
        ExtraHosts:
          items:
            type: string
          type: array
        GroupAdd:
          items:
            type: string
          type: array
        IOMaximumBandwidth:
          format: uint64
          type: integer
        IOMaximumIOps:
          format: uint64
          type: integer
        Init:
          description: "Run a custom init inside the container, if null, use the daemon's\
            \ configured settings"
          type: boolean
        IpcMode:
          title: IpcMode represents the container ipc stack.
          type: string
          x-go-package: github.com/docker/docker/api/types/container
        Isolation:
          description: |-
            Isolation represents the isolation technology of a container. The supported
            values are platform specific
          type: string
          x-go-package: github.com/docker/docker/api/types/container
        KernelMemory:
          description: |-
            KernelMemory specifies the kernel memory limit (in bytes) for the container.
            Deprecated: kernel 5.4 deprecated kmem.limit_in_bytes.
          format: int64
          type: integer
        KernelMemoryTCP:
          format: int64
          type: integer
        Links:
          items:
            type: string
          type: array
        LogConfig:
          $ref: "#/components/schemas/LogConfig"
        MaskedPaths:
          description: MaskedPaths is the list of paths to be masked inside the container
            (this overrides the default set of paths)
          items:
            type: string
          type: array
        Memory:
          format: int64
          type: integer
        MemoryReservation:
          format: int64
          type: integer
        MemorySwap:
          format: int64
          type: integer
        MemorySwappiness:
          format: int64
          type: integer
        Mounts:
          description: Mounts specs used by the container
          items:
            $ref: "#/components/schemas/Mount"
          type: array
        NanoCpus:
          format: int64
          type: integer
          x-go-name: NanoCPUs
        NetworkMode:
          title: NetworkMode represents the container network stack.
          type: string
          x-go-package: github.com/docker/docker/api/types/container
        OomKillDisable:
          type: boolean
        OomScoreAdj:
          format: int64
          type: integer
        PidMode:
          title: PidMode represents the pid namespace of the container.
          type: string
          x-go-package: github.com/docker/docker/api/types/container
        PidsLimit:
          format: int64
          type: integer
        PortBindings:
          additionalProperties:
            items:
              $ref: "#/components/schemas/PortBinding"
            type: array
          description: PortMap is a collection of PortBinding indexed by Port
          type: object
          x-go-package: github.com/docker/go-connections/nat
        Privileged:
          type: boolean
        PublishAllPorts:
          type: boolean
        ReadonlyPaths:
          description: ReadonlyPaths is the list of paths to be set as read-only inside
            the container (this overrides the default set of paths)
          items:
            type: string
          type: array
        ReadonlyRootfs:
          type: boolean
        RestartPolicy:
          $ref: "#/components/schemas/RestartPolicy"
        Runtime:
          type: string
        SecurityOpt:
          items:
            type: string
          type: array
        ShmSize:
          format: int64
          type: integer
        StorageOpt:
          additionalProperties:
            type: string
          type: object
        Sysctls:
          additionalProperties:
            type: string
          type: object
        Tmpfs:
          additionalProperties:
            type: string
          type: object
        UTSMode:
          title: UTSMode represents the UTS namespace of the container.
          type: string
          x-go-package: github.com/docker/docker/api/types/container
        Ulimits:
          items:
            $ref: "#/components/schemas/Ulimit"
          type: array
        UsernsMode:
          title: UsernsMode represents userns mode in the container.
          type: string
          x-go-package: github.com/docker/docker/api/types/container
        VolumeDriver:
          type: string
        VolumesFrom:
          items:
            type: string
          type: array
      title: HostConfig the non-portable Config structure of a container.
      type: object
      x-go-package: github.com/docker/docker/api/types/container
    HostInfo:
      description: HostInfo describes the libpod host
      example:
        networkBackend: networkBackend
        freeLocks: 5
        remoteSocket:
          path: path
          exists: true
        distribution:
          codename: codename
          variant: variant
          distribution: distribution
          version: version
        networkBackendInfo:
          path: path
          package: package
          dns:
            path: path
            package: package
            version: version
          backend: backend
          version: version
        hostname: hostname
        security:
          capabilities: capabilities
          rootless: true
          selinuxEnabled: true
          seccompProfilePath: seccompProfilePath
          apparmorEnabled: true
          seccompEnabled: true
        ociRuntime:
          path: path
          package: package
          name: name
          version: version
        pasta:
          package: package
          version: version
          executable: executable
        variant: variant
        runtimeInfo:
          key: "{}"
        slirp4netns:
          package: package
          version: version
          executable: executable
        cpuUtilization:
          userPercent: 1.4658129805029452
          systemPercent: 6.027456183070403
          idlePercent: 0.8008281904610115
        swapFree: 9
        rootlessNetworkCmd: rootlessNetworkCmd
        memFree: 2
        buildahVersion: buildahVersion
        linkmode: linkmode
        os: os
        cpus: 5
        kernel: kernel
        memTotal: 7
        logDriver: logDriver
        cgroupControllers:
        - cgroupControllers
        - cgroupControllers
        swapTotal: 3
        idMappings:
          uidmap:
          - size: 4
            container_id: 3
            host_id: 2
          - size: 4
            container_id: 3
            host_id: 2
          gidmap:
          - size: 4
            container_id: 3
            host_id: 2
          - size: 4
            container_id: 3
            host_id: 2
        eventLogger: eventLogger
        uptime: uptime
        cgroupVersion: cgroupVersion
        cgroupManager: cgroupManager
        databaseBackend: databaseBackend
        conmon:
          path: path
          package: package
          version: version
        serviceIsRemote: true
        arch: arch
      properties:
        arch:
          type: string
          x-go-name: Arch
        buildahVersion:
          type: string
          x-go-name: BuildahVersion
        cgroupControllers:
          items:
            type: string
          type: array
          x-go-name: CgroupControllers
        cgroupManager:
          type: string
          x-go-name: CgroupManager
        cgroupVersion:
          type: string
          x-go-name: CgroupsVersion
        conmon:
          $ref: "#/components/schemas/ConmonInfo"
        cpuUtilization:
          $ref: "#/components/schemas/CPUUsage"
        cpus:
          format: int64
          type: integer
          x-go-name: CPUs
        databaseBackend:
          type: string
          x-go-name: DatabaseBackend
        distribution:
          $ref: "#/components/schemas/DistributionInfo"
        eventLogger:
          type: string
          x-go-name: EventLogger
        freeLocks:
          format: uint32
          type: integer
          x-go-name: FreeLocks
        hostname:
          type: string
          x-go-name: Hostname
        idMappings:
          $ref: "#/components/schemas/IDMappings"
        kernel:
          type: string
          x-go-name: Kernel
        linkmode:
          type: string
          x-go-name: Linkmode
        logDriver:
          type: string
          x-go-name: LogDriver
        memFree:
          format: int64
          type: integer
          x-go-name: MemFree
        memTotal:
          format: int64
          type: integer
          x-go-name: MemTotal
        networkBackend:
          type: string
          x-go-name: NetworkBackend
        networkBackendInfo:
          $ref: "#/components/schemas/NetworkInfo"
        ociRuntime:
          $ref: "#/components/schemas/OCIRuntimeInfo"
        os:
          type: string
          x-go-name: OS
        pasta:
          $ref: "#/components/schemas/PastaInfo"
        remoteSocket:
          $ref: "#/components/schemas/RemoteSocket"
        rootlessNetworkCmd:
          description: RootlessNetworkCmd returns the default rootless network command
            (slirp4netns or pasta)
          type: string
          x-go-name: RootlessNetworkCmd
        runtimeInfo:
          additionalProperties:
            type: object
          type: object
          x-go-name: RuntimeInfo
        security:
          $ref: "#/components/schemas/SecurityInfo"
        serviceIsRemote:
          description: ServiceIsRemote is true when the podman/libpod service is remote
            to the client
          type: boolean
          x-go-name: ServiceIsRemote
        slirp4netns:
          $ref: "#/components/schemas/SlirpInfo"
        swapFree:
          format: int64
          type: integer
          x-go-name: SwapFree
        swapTotal:
          format: int64
          type: integer
          x-go-name: SwapTotal
        uptime:
          type: string
          x-go-name: Uptime
        variant:
          type: string
          x-go-name: Variant
      type: object
      x-go-package: github.com/containers/podman/v5/libpod/define
    IDMap:
      description: |-
        IDMap contains a single entry for user namespace range remapping. An array
        of IDMap entries represents the structure that will be provided to the Linux
        kernel for creating a user namespace.
      example:
        size: 4
        container_id: 3
        host_id: 2
      properties:
        container_id:
          format: int64
          type: integer
          x-go-name: ContainerID
        host_id:
          format: int64
          type: integer
          x-go-name: HostID
        size:
          format: int64
          type: integer
          x-go-name: Size
      type: object
      x-go-package: github.com/containers/storage/pkg/idtools
    IDMappingOptions:
      description: |-
        IDMappingOptions are used for specifying how ID mapping should be set up for
        a layer or container.
      example:
        HostGIDMapping: true
        AutoUserNsOpts:
          PasswdFile: PasswdFile
          AdditionalGIDMappings:
          - size: 4
            container_id: 3
            host_id: 2
          - size: 4
            container_id: 3
            host_id: 2
          Size: 1
          InitialSize: 7
          AdditionalUIDMappings:
          - size: 4
            container_id: 3
            host_id: 2
          - size: 4
            container_id: 3
            host_id: 2
          GroupFile: GroupFile
        GIDMap:
        - size: 4
          container_id: 3
          host_id: 2
        - size: 4
          container_id: 3
          host_id: 2
        AutoUserNs: true
        UIDMap:
        - size: 4
          container_id: 3
          host_id: 2
        - size: 4
          container_id: 3
          host_id: 2
        HostUIDMapping: true
      properties:
        AutoUserNs:
          type: boolean
        AutoUserNsOpts:
          $ref: "#/components/schemas/AutoUserNsOptions"
        GIDMap:
          items:
            $ref: "#/components/schemas/IDMap"
          type: array
        HostGIDMapping:
          type: boolean
        HostUIDMapping:
          description: |-
            UIDMap and GIDMap are used for setting up a layer's root filesystem
            for use inside of a user namespace where ID mapping is being used.
            If HostUIDMapping/HostGIDMapping is true, no mapping of the
            respective type will be used.  Otherwise, if UIDMap and/or GIDMap
            contain at least one mapping, one or both will be used.  By default,
            if neither of those conditions apply, if the layer has a parent
            layer, the parent layer's mapping will be used, and if it does not
            have a parent layer, the mapping which was passed to the Store
            object when it was initialized will be used.
          type: boolean
        UIDMap:
          items:
            $ref: "#/components/schemas/IDMap"
          type: array
      type: object
      x-go-package: github.com/containers/storage/types
    IDMappings:
      description: IDMappings describe the GID and UID mappings
      example:
        uidmap:
        - size: 4
          container_id: 3
          host_id: 2
        - size: 4
          container_id: 3
          host_id: 2
        gidmap:
        - size: 4
          container_id: 3
          host_id: 2
        - size: 4
          container_id: 3
          host_id: 2
      properties:
        gidmap:
          items:
            $ref: "#/components/schemas/IDMap"
          type: array
          x-go-name: GIDMap
        uidmap:
          items:
            $ref: "#/components/schemas/IDMap"
          type: array
          x-go-name: UIDMap
      type: object
      x-go-package: github.com/containers/podman/v5/libpod/define
    IDResponse:
      $ref: "#/components/schemas/IdResponse"
    IPAM:
      description: IPAM represents IP Address Management
      example:
        Options:
          key: Options
        Config:
        - AuxiliaryAddresses:
            key: AuxiliaryAddresses
          Gateway: Gateway
          Subnet: Subnet
          IPRange: IPRange
        - AuxiliaryAddresses:
            key: AuxiliaryAddresses
          Gateway: Gateway
          Subnet: Subnet
          IPRange: IPRange
        Driver: Driver
      properties:
        Config:
          items:
            $ref: "#/components/schemas/IPAMConfig"
          type: array
        Driver:
          type: string
        Options:
          additionalProperties:
            type: string
          type: object
      type: object
      x-go-package: github.com/docker/docker/api/types/network
    IPAMConfig:
      description: IPAMConfig represents IPAM configurations
      example:
        AuxiliaryAddresses:
          key: AuxiliaryAddresses
        Gateway: Gateway
        Subnet: Subnet
        IPRange: IPRange
      properties:
        AuxiliaryAddresses:
          additionalProperties:
            type: string
          type: object
          x-go-name: AuxAddress
        Gateway:
          type: string
        IPRange:
          type: string
        Subnet:
          type: string
      type: object
      x-go-package: github.com/docker/docker/api/types/network
    IPMask:
      description: "See type [IPNet] and func [ParseCIDR] for details."
      items:
        format: uint8
        type: integer
      title: |-
        An IPMask is a bitmask that can be used to manipulate
        IP addresses for IP addressing and routing.
      type: array
      x-go-package: net
    IPNet:
      example:
        IP: IP
        Mask:
        - 0
        - 0
      properties:
        IP:
          type: string
        Mask:
          description: "See type [IPNet] and func [ParseCIDR] for details."
          items:
            format: uint8
            type: integer
          title: |-
            An IPMask is a bitmask that can be used to manipulate
            IP addresses for IP addressing and routing.
          type: array
          x-go-package: net
      title: An IPNet represents an IP network.
      type: object
      x-go-package: net
    IdResponse:
      description: IDResponse Response to an API call that returns just an Id
      example:
        Id: Id
      properties:
        Id:
          description: The id of the newly created object.
          type: string
          x-go-name: ID
      required:
      - Id
      type: object
      x-go-name: IDResponse
      x-go-package: github.com/docker/docker/api/types
    ImageConfig:
      example:
        WorkingDir: WorkingDir
        StopSignal: StopSignal
        User: User
        Volumes:
          key: "{}"
        Entrypoint:
        - Entrypoint
        - Entrypoint
        ArgsEscaped: true
        Labels:
          key: Labels
        Cmd:
        - Cmd
        - Cmd
        Env:
        - Env
        - Env
        ExposedPorts:
          key: "{}"
      properties:
        ArgsEscaped:
          description: |-
            ArgsEscaped

            Deprecated: This field is present only for legacy compatibility with
            Docker and should not be used by new image builders.  It is used by Docker
            for Windows images to indicate that the `Entrypoint` or `Cmd` or both,
            contains only a single element array, that is a pre-escaped, and combined
            into a single string `CommandLine`. If `true` the value in `Entrypoint` or
            `Cmd` should be used as-is to avoid double escaping.
            https://github.com/opencontainers/image-spec/pull/892
          type: boolean
        Cmd:
          description: Cmd defines the default arguments to the entrypoint of the
            container.
          items:
            type: string
          type: array
        Entrypoint:
          description: Entrypoint defines a list of arguments to use as the command
            to execute when the container starts.
          items:
            type: string
          type: array
        Env:
          description: Env is a list of environment variables to be used in a container.
          items:
            type: string
          type: array
        ExposedPorts:
          additionalProperties:
            properties: {}
            type: object
          description: ExposedPorts a set of ports to expose from a container running
            this image.
          type: object
        Labels:
          additionalProperties:
            type: string
          description: Labels contains arbitrary metadata for the container.
          type: object
        StopSignal:
          description: StopSignal contains the system call signal that will be sent
            to the container to exit.
          type: string
        User:
          description: User defines the username or UID which the process in the container
            should run as.
          type: string
        Volumes:
          additionalProperties:
            properties: {}
            type: object
          description: Volumes is a set of directories describing where the process
            is likely write data specific to a container instance.
          type: object
        WorkingDir:
          description: WorkingDir sets the current working directory of the entrypoint
            process in the container.
          type: string
      title: ImageConfig defines the execution parameters which should be used as
        a base when running a container using an image.
      type: object
      x-go-package: github.com/opencontainers/image-spec/specs-go/v1
    ImageData:
      example:
        NamesHistory:
        - NamesHistory
        - NamesHistory
        RepoDigests:
        - RepoDigests
        - RepoDigests
        Comment: Comment
        VirtualSize: 6
        ManifestType: ManifestType
        User: User
        Architecture: Architecture
        Os: Os
        Digest: Digest
        Parent: Parent
        Config:
          WorkingDir: WorkingDir
          StopSignal: StopSignal
          User: User
          Volumes:
            key: "{}"
          Entrypoint:
          - Entrypoint
          - Entrypoint
          ArgsEscaped: true
          Labels:
            key: Labels
          Cmd:
          - Cmd
          - Cmd
          Env:
          - Env
          - Env
          ExposedPorts:
            key: "{}"
        Size: 0
        Labels:
          key: Labels
        GraphDriver:
          Data:
            key: Data
          Name: Name
        Healthcheck:
          StartInterval: 1
          Test:
          - Test
          - Test
          Retries: 6
          Timeout: 5
          Interval: 0
          StartPeriod: 5
        History:
        - author: author
          created: 2000-01-23T04:56:07.000+00:00
          empty_layer: true
          comment: comment
          created_by: created_by
        - author: author
          created: 2000-01-23T04:56:07.000+00:00
          empty_layer: true
          comment: comment
          created_by: created_by
        Created: 2000-01-23T04:56:07.000+00:00
        RootFS:
          Type: Type
          Layers:
          - null
          - null
        Annotations:
          key: Annotations
        RepoTags:
        - RepoTags
        - RepoTags
        Version: Version
        Author: Author
        Id: Id
      properties:
        Annotations:
          additionalProperties:
            type: string
          type: object
        Architecture:
          type: string
        Author:
          type: string
        Comment:
          type: string
        Config:
          $ref: "#/components/schemas/ImageConfig"
        Created:
          format: date-time
          type: string
        Digest:
          description: |-
            The following is an example of the contents of Digest types:

            sha256:7173b809ca12ec5dee4506cd86be934c4596dd234ee82c0662eac04a8c2c71dc

            This allows to abstract the digest behind this type and work only in those
            terms.
          title: |-
            Digest allows simple protection of hex formatted digest strings, prefixed
            by their algorithm. Strings of type Digest have some guarantee of being in
            the correct format and it provides quick access to the components of a
            digest string.
          type: string
          x-go-package: github.com/opencontainers/go-digest
        GraphDriver:
          $ref: "#/components/schemas/DriverData"
        Healthcheck:
          $ref: "#/components/schemas/Schema2HealthConfig"
        History:
          items:
            $ref: "#/components/schemas/History"
          type: array
        Id:
          type: string
          x-go-name: ID
        Labels:
          additionalProperties:
            type: string
          type: object
        ManifestType:
          type: string
        NamesHistory:
          items:
            type: string
          type: array
        Os:
          type: string
        Parent:
          type: string
        RepoDigests:
          items:
            type: string
          type: array
        RepoTags:
          items:
            type: string
          type: array
        RootFS:
          $ref: "#/components/schemas/RootFS"
        Size:
          format: int64
          type: integer
        User:
          type: string
        Version:
          type: string
        VirtualSize:
          format: int64
          type: integer
      title: ImageData holds the inspect information of an image.
      type: object
      x-go-package: github.com/containers/podman/v5/pkg/inspect
    ImageImportReport:
      example:
        Id: Id
      properties:
        Id:
          type: string
      type: object
      x-go-package: github.com/containers/podman/v5/pkg/domain/entities/types
    ImageInspect:
      example:
        RepoDigests:
        - RepoDigests
        - RepoDigests
        Comment: Comment
        VirtualSize: 6
        Architecture: Architecture
        Os: Os
        Parent: Parent
        Config:
          User: User
          OpenStdin: true
          Env:
          - Env
          - Env
          Image: Image
          StdinOnce: true
          AttachStdout: true
          Shell:
          - Shell
          - Shell
          Volumes:
            key: "{}"
          AttachStdin: true
          Domainname: Domainname
          Tty: true
          Cmd:
          - Cmd
          - Cmd
          StopTimeout: 2
          StopSignal: StopSignal
          Entrypoint:
          - Entrypoint
          - Entrypoint
          AttachStderr: true
          ArgsEscaped: true
          Hostname: Hostname
          Labels:
            key: Labels
          Healthcheck:
            StartInterval: 1
            Test:
            - Test
            - Test
            Retries: 6
            Timeout: 5
            Interval: 0
            StartPeriod: 5
          MacAddress: MacAddress
          NetworkDisabled: true
          ExposedPorts:
            key: "{}"
          WorkingDir: WorkingDir
          OnBuild:
          - OnBuild
          - OnBuild
        Size: 0
        OsVersion: OsVersion
        Metadata:
          LastTagTime: 2000-01-23T04:56:07.000+00:00
        GraphDriver:
          Data:
            key: Data
          Name: Name
        Created: Created
        ContainerConfig:
          User: User
          OpenStdin: true
          Env:
          - Env
          - Env
          Image: Image
          StdinOnce: true
          AttachStdout: true
          Shell:
          - Shell
          - Shell
          Volumes:
            key: "{}"
          AttachStdin: true
          Domainname: Domainname
          Tty: true
          Cmd:
          - Cmd
          - Cmd
          StopTimeout: 2
          StopSignal: StopSignal
          Entrypoint:
          - Entrypoint
          - Entrypoint
          AttachStderr: true
          ArgsEscaped: true
          Hostname: Hostname
          Labels:
            key: Labels
          Healthcheck:
            StartInterval: 1
            Test:
            - Test
            - Test
            Retries: 6
            Timeout: 5
            Interval: 0
            StartPeriod: 5
          MacAddress: MacAddress
          NetworkDisabled: true
          ExposedPorts:
            key: "{}"
          WorkingDir: WorkingDir
          OnBuild:
          - OnBuild
          - OnBuild
        Variant: Variant
        Container: Container
        RootFS:
          Type: Type
          Layers:
          - null
          - null
        DockerVersion: DockerVersion
        RepoTags:
        - RepoTags
        - RepoTags
        Author: Author
        Id: Id
      properties:
        Architecture:
          description: Architecture is the hardware CPU architecture that the image
            runs on.
          type: string
        Author:
          description: |-
            Author is the name of the author that was specified when committing the
            image, or as specified through MAINTAINER (deprecated) in the Dockerfile.
          type: string
        Comment:
          description: |-
            Comment is an optional message that can be set when committing or
            importing the image.
          type: string
        Config:
          $ref: "#/components/schemas/Config"
        Container:
          description: Container is for backwards compat but is basically unused
          type: string
        ContainerConfig:
          $ref: "#/components/schemas/Config"
        Created:
          description: |-
            Created is the date and time at which the image was created, formatted in
            RFC 3339 nano-seconds (time.RFC3339Nano).

            This information is only available if present in the image,
            and omitted otherwise.
          type: string
        DockerVersion:
          description: |-
            DockerVersion is the version of Docker that was used to build the image.

            Depending on how the image was created, this field may be empty.
          type: string
        GraphDriver:
          $ref: "#/components/schemas/GraphDriverData"
        Id:
          description: |-
            ID is the content-addressable ID of an image.

            This identifier is a content-addressable digest calculated from the
            image's configuration (which includes the digests of layers used by
            the image).

            Note that this digest differs from the `RepoDigests` below, which
            holds digests of image manifests that reference the image.
          type: string
          x-go-name: ID
        Metadata:
          $ref: "#/components/schemas/Metadata"
        Os:
          description: OS is the Operating System the image is built to run on.
          type: string
        OsVersion:
          description: |-
            OsVersion is the version of the Operating System the image is built to
            run on (especially for Windows).
          type: string
        Parent:
          description: |-
            Parent is the ID of the parent image.

            Depending on how the image was created, this field may be empty and
            is only set for images that were built/created locally. This field
            is empty if the image was pulled from an image registry.
          type: string
        RepoDigests:
          description: |-
            RepoDigests is a list of content-addressable digests of locally available
            image manifests that the image is referenced from. Multiple manifests can
            refer to the same image.

            These digests are usually only available if the image was either pulled
            from a registry, or if the image was pushed to a registry, which is when
            the manifest is generated and its digest calculated.
          items:
            type: string
          type: array
        RepoTags:
          description: |-
            RepoTags is a list of image names/tags in the local image cache that
            reference this image.

            Multiple image tags can refer to the same image, and this list may be
            empty if no tags reference the image, in which case the image is
            "untagged", in which case it can still be referenced by its ID.
          items:
            type: string
          type: array
        RootFS:
          $ref: "#/components/schemas/RootFS"
        Size:
          description: Size is the total size of the image including all layers it
            is composed of.
          format: int64
          type: integer
        Variant:
          description: Variant is the CPU architecture variant (presently ARM-only).
          type: string
        VirtualSize:
          description: |-
            VirtualSize is the total size of the image including all layers it is
            composed of.

            Deprecated: this field is omitted in API v1.44, but kept for backward compatibility. Use Size instead.
          format: int64
          type: integer
      type: object
      x-go-package: github.com/containers/podman/v5/pkg/api/handlers
    ImageLoadReport:
      example:
        Names:
        - Names
        - Names
      properties:
        Names:
          items:
            type: string
          type: array
      type: object
      x-go-package: github.com/containers/podman/v5/pkg/domain/entities/types
    ImageProperties:
      example:
        Platform:
          os: os
          os.features:
          - os.features
          - os.features
          variant: variant
          architecture: architecture
          os.version: os.version
        Size:
          Unpacked: 5
        Containers:
        - Containers
        - Containers
      properties:
        Containers:
          description: |-
            Containers is an array containing the IDs of the containers that are
            using this image.
          items:
            type: string
          type: array
        Platform:
          $ref: "#/components/schemas/Platform"
        Size:
          $ref: "#/components/schemas/ImageProperties_Size"
      required:
      - Containers
      - Platform
      type: object
      x-go-package: github.com/docker/docker/api/types/image
    ImageStore:
      description: |-
        ImageStore describes the image store.  Right now only the number
        of images present
      example:
        number: 6
      properties:
        number:
          format: int64
          type: integer
          x-go-name: Number
      type: object
      x-go-package: github.com/containers/podman/v5/libpod/define
    ImageTreeReport:
      example:
        Tree: Tree
      properties:
        Tree:
          type: string
      type: object
      x-go-package: github.com/containers/podman/v5/pkg/domain/entities/types
    ImageVolume:
      description: |-
        ImageVolume is a volume based on a container image.  The container image is
        first mounted on the host and is then bind-mounted into the container.  An
        ImageVolume is always mounted read-only.
      example:
        Destination: Destination
        ReadWrite: true
        subPath: subPath
        Source: Source
      properties:
        Destination:
          description: Destination is the absolute path of the mount in the container.
          type: string
        ReadWrite:
          description: ReadWrite sets the volume writable.
          type: boolean
        Source:
          description: |-
            Source is the source of the image volume.  The image can be referred
            to by name and by ID.
          type: string
        subPath:
          description: |-
            SubPath mounts a particular path within the image.
            If empty, the whole image is mounted.
          type: string
          x-go-name: SubPath
      type: object
      x-go-package: github.com/containers/podman/v5/pkg/specgen
    Info:
      description: |-
        Info contains information about the Volume as a whole as provided by
        the CSI storage plugin.
      example:
        VolumeID: VolumeID
        VolumeContext:
          key: VolumeContext
        CapacityBytes: 0
        AccessibleTopology:
        - Segments:
            key: Segments
        - Segments:
            key: Segments
      properties:
        AccessibleTopology:
          description: |-
            AccessibleTopology is the topology this volume is actually accessible
            from.
          items:
            $ref: "#/components/schemas/Topology"
          type: array
        CapacityBytes:
          description: |-
            CapacityBytes is the capacity of the volume in bytes. A value of 0
            indicates that the capacity is unknown.
          format: int64
          type: integer
        VolumeContext:
          additionalProperties:
            type: string
          description: |-
            VolumeContext is the context originating from the CSI storage plugin
            when the Volume is created.
          type: object
        VolumeID:
          description: |-
            VolumeID is the ID of the Volume as seen by the CSI storage plugin. This
            is distinct from the Volume's Swarm ID, which is the ID used by all of
            the Docker Engine to refer to the Volume. If this field is blank, then
            the Volume has not been successfully created yet.
          type: string
      type: object
      x-go-package: github.com/docker/docker/api/types/volume
    Inspect:
      example:
        Options:
          key: Options
        Internal: true
        Peers:
        - IP: IP
          Name: Name
        - IP: IP
          Name: Name
        Containers:
          key:
            EndpointID: EndpointID
            IPv6Address: IPv6Address
            MacAddress: MacAddress
            IPv4Address: IPv4Address
            Name: Name
        Driver: Driver
        Ingress: true
        Labels:
          key: Labels
        EnableIPv6: true
        Created: 2000-01-23T04:56:07.000+00:00
        Name: Name
        ConfigOnly: true
        IPAM:
          Options:
            key: Options
          Config:
          - AuxiliaryAddresses:
              key: AuxiliaryAddresses
            Gateway: Gateway
            Subnet: Subnet
            IPRange: IPRange
          - AuxiliaryAddresses:
              key: AuxiliaryAddresses
            Gateway: Gateway
            Subnet: Subnet
            IPRange: IPRange
          Driver: Driver
        Services:
          key:
            Tasks:
            - EndpointID: EndpointID
              EndpointIP: EndpointIP
              Info:
                key: Info
              Name: Name
            - EndpointID: EndpointID
              EndpointIP: EndpointIP
              Info:
                key: Info
              Name: Name
            Ports:
            - Ports
            - Ports
            LocalLBIndex: 0
            VIP: VIP
        Scope: Scope
        ConfigFrom:
          Network: Network
        Id: Id
        Attachable: true
      properties:
        Attachable:
          type: boolean
        ConfigFrom:
          $ref: "#/components/schemas/ConfigReference"
        ConfigOnly:
          type: boolean
        Containers:
          additionalProperties:
            $ref: "#/components/schemas/EndpointResource"
          type: object
        Created:
          format: date-time
          type: string
        Driver:
          type: string
        EnableIPv6:
          type: boolean
        IPAM:
          $ref: "#/components/schemas/IPAM"
        Id:
          type: string
          x-go-name: ID
        Ingress:
          type: boolean
        Internal:
          type: boolean
        Labels:
          additionalProperties:
            type: string
          type: object
        Name:
          type: string
        Options:
          additionalProperties:
            type: string
          type: object
        Peers:
          items:
            $ref: "#/components/schemas/PeerInfo"
          type: array
        Scope:
          type: string
        Services:
          additionalProperties:
            $ref: "#/components/schemas/ServiceInfo"
          type: object
      title: Inspect is the body of the "get network" http response message.
      type: object
      x-go-package: github.com/docker/docker/api/types/network
    InspectAdditionalNetwork:
      description: |-
        InspectAdditionalNetwork holds information about non-default networks the
        container has been connected to.
        As with InspectNetworkSettings, many fields are unused and maintained only
        for compatibility with Docker.
      example:
        GlobalIPv6Address: GlobalIPv6Address
        GlobalIPv6PrefixLen: 5
        IPPrefixLen: 3
        Aliases:
        - Aliases
        - Aliases
        AdditionalMACAddresses:
        - AdditionalMACAddresses
        - AdditionalMACAddresses
        MacAddress: MacAddress
        NetworkID: NetworkID
        IPAMConfig:
          key: IPAMConfig
        DriverOpts:
          key: DriverOpts
        Gateway: Gateway
        EndpointID: EndpointID
        Links:
        - Links
        - Links
        SecondaryIPv6Addresses:
        - PrefixLength: 0
          Addr: Addr
        - PrefixLength: 0
          Addr: Addr
        IPv6Gateway: IPv6Gateway
        SecondaryIPAddresses:
        - PrefixLength: 0
          Addr: Addr
        - PrefixLength: 0
          Addr: Addr
        IPAddress: IPAddress
      properties:
        AdditionalMACAddresses:
          description: |-
            AdditionalMacAddresses is a set of additional MAC Addresses beyond
            the first. CNI may configure more than one interface for a single
            network, which can cause this.
          items:
            type: string
          type: array
          x-go-name: AdditionalMacAddresses
        Aliases:
          description: Aliases are any network aliases the container has in this network.
          items:
            type: string
          type: array
        DriverOpts:
          additionalProperties:
            type: string
          description: |-
            DriverOpts is presently unused and maintained exclusively for
            compatibility.
          type: object
        EndpointID:
          description: "EndpointID is unused, maintained exclusively for compatibility."
          type: string
        Gateway:
          description: Gateway is the IP address of the gateway this network will
            use.
          type: string
        GlobalIPv6Address:
          description: GlobalIPv6Address is the global-scope IPv6 Address for this
            network.
          type: string
        GlobalIPv6PrefixLen:
          description: GlobalIPv6PrefixLen is the length of the subnet mask of this
            network.
          format: int64
          type: integer
        IPAMConfig:
          additionalProperties:
            type: string
          description: |-
            IPAMConfig is presently unused and maintained exclusively for
            compatibility.
          type: object
        IPAddress:
          description: IPAddress is the IP address for this network.
          type: string
        IPPrefixLen:
          description: IPPrefixLen is the length of the subnet mask of this network.
          format: int64
          type: integer
        IPv6Gateway:
          description: IPv6Gateway is the IPv6 gateway this network will use.
          type: string
        Links:
          description: |-
            Links is presently unused and maintained exclusively for
            compatibility.
          items:
            type: string
          type: array
        MacAddress:
          description: MacAddress is the MAC address for the interface in this network.
          type: string
        NetworkID:
          description: Name of the network we're connecting to.
          type: string
        SecondaryIPAddresses:
          description: |-
            SecondaryIPAddresses is a list of extra IP Addresses that the
            container has been assigned in this network.
          items:
            $ref: "#/components/schemas/Address"
          type: array
        SecondaryIPv6Addresses:
          description: |-
            SecondaryIPv6Addresses is a list of extra IPv6 Addresses that the
            container has been assigned in this network.
          items:
            $ref: "#/components/schemas/Address"
          type: array
      type: object
      x-go-package: github.com/containers/podman/v5/libpod/define
    InspectBlkioThrottleDevice:
      description: |-
        InspectBlkioThrottleDevice holds information about a speed cap for a device
        node. This cap applies to a specific operation (read, write, etc) on the given
        node.
      example:
        Path: Path
        Rate: 4
      properties:
        Path:
          description: Path is the path to the device this applies to.
          type: string
        Rate:
          description: |-
            Rate is the maximum rate. It is in either bytes per second or iops
            per second, determined by where it is used - documentation will
            indicate which is appropriate.
          format: uint64
          type: integer
      type: object
      x-go-package: github.com/containers/podman/v5/libpod/define
    InspectBlkioWeightDevice:
      description: |-
        InspectBlkioWeightDevice holds information about the relative weight
        of an individual device node. Weights are used in the I/O scheduler to give
        relative priority to some accesses.
      example:
        Path: Path
        Weight: 9
      properties:
        Path:
          description: Path is the path to the device this applies to.
          type: string
        Weight:
          description: |-
            Weight is the relative weight the scheduler will use when scheduling
            I/O.
          format: uint16
          type: integer
      type: object
      x-go-package: github.com/containers/podman/v5/libpod/define
    InspectContainerConfig:
      description: |-
        InspectContainerConfig holds further data about how a container was initially
        configured.
      example:
        HealthcheckMaxLogCount: 2
        Timezone: Timezone
        ChrootDirs:
        - ChrootDirs
        - ChrootDirs
        HealthcheckOnFailureAction: HealthcheckOnFailureAction
        User: User
        Secrets:
        - UID: 2
          GID: 9
          Mode: 3
          ID: ID
          Name: Name
        - UID: 2
          GID: 9
          Mode: 3
          ID: ID
          Name: Name
        HealthcheckMaxLogSize: 7
        OpenStdin: true
        Env:
        - Env
        - Env
        Image: Image
        StdinOnce: true
        AttachStdout: true
        StartupHealthCheck:
          StartInterval: 1
          Test:
          - Test
          - Test
          Retries: 7
          Successes: 1
          Timeout: 6
          Interval: 4
          StartPeriod: 1
        Annotations:
          key: Annotations
        Volumes:
          key: "{}"
        AttachStdin: true
        Domainname: Domainname
        Tty: true
        Cmd:
        - Cmd
        - Cmd
        StopTimeout: 7
        Umask: Umask
        StopSignal: StopSignal
        CreateCommand:
        - CreateCommand
        - CreateCommand
        Entrypoint:
        - Entrypoint
        - Entrypoint
        sdNotifySocket: sdNotifySocket
        AttachStderr: true
        SystemdMode: true
        Timeout: 1
        Hostname: Hostname
        Labels:
          key: Labels
        Healthcheck:
          StartInterval: 1
          Test:
          - Test
          - Test
          Retries: 6
          Timeout: 5
          Interval: 0
          StartPeriod: 5
        ExposedPorts:
          key: "{}"
        Passwd: true
        WorkingDir: WorkingDir
        OnBuild: OnBuild
        HealthLogDestination: HealthLogDestination
        sdNotifyMode: sdNotifyMode
      properties:
        Annotations:
          additionalProperties:
            type: string
          description: Container annotations
          type: object
        AttachStderr:
          description: "Unused, at present"
          type: boolean
        AttachStdin:
          description: "Unused, at present"
          type: boolean
        AttachStdout:
          description: "Unused, at present"
          type: boolean
        ChrootDirs:
          description: |-
            ChrootDirs is an additional set of directories that need to be
            treated as root directories. Standard bind mounts will be mounted
            into paths relative to these directories.
          items:
            type: string
          type: array
        Cmd:
          description: Container command
          items:
            type: string
          type: array
        CreateCommand:
          description: |-
            CreateCommand is the full command plus arguments of the process the
            container has been created with.
          items:
            type: string
          type: array
        Domainname:
          description: Container domain name - unused at present
          type: string
          x-go-name: DomainName
        Entrypoint:
          description: Container entrypoint
          items:
            type: string
          type: array
        Env:
          description: Container environment variables
          items:
            type: string
          type: array
        ExposedPorts:
          additionalProperties:
            properties: {}
            type: object
          description: ExposedPorts includes ports the container has exposed.
          type: object
        HealthLogDestination:
          description: HealthLogDestination defines the destination where the log
            is stored
          type: string
        Healthcheck:
          $ref: "#/components/schemas/Schema2HealthConfig"
        HealthcheckMaxLogCount:
          description: |-
            HealthMaxLogCount is maximum number of attempts in the HealthCheck log file.
            ('0' value means an infinite number of attempts in the log file)
          format: uint64
          type: integer
          x-go-name: HealthMaxLogCount
        HealthcheckMaxLogSize:
          description: |-
            HealthMaxLogSize is the maximum length in characters of stored HealthCheck log
            ("0" value means an infinite log length)
          format: uint64
          type: integer
          x-go-name: HealthMaxLogSize
        HealthcheckOnFailureAction:
          description: HealthcheckOnFailureAction defines an action to take once the
            container turns unhealthy.
          type: string
        Hostname:
          description: Container hostname
          type: string
        Image:
          description: Container image
          type: string
        Labels:
          additionalProperties:
            type: string
          description: Container labels
          type: object
        OnBuild:
          description: On-build arguments - presently unused. More of Buildah's domain.
          type: string
        OpenStdin:
          description: Whether the container leaves STDIN open
          type: boolean
        Passwd:
          description: Passwd determines whether or not podman can add entries to
            /etc/passwd and /etc/group
          type: boolean
        Secrets:
          description: Secrets are the secrets mounted in the container
          items:
            $ref: "#/components/schemas/InspectSecret"
          type: array
        StartupHealthCheck:
          $ref: "#/components/schemas/StartupHealthCheck"
        StdinOnce:
          description: |-
            Whether STDIN is only left open once.
            Presently not supported by Podman, unused.
          type: boolean
        StopSignal:
          description: Container stop signal
          type: string
        StopTimeout:
          description: StopTimeout is time before container is stopped when calling
            stop
          format: uint64
          type: integer
        SystemdMode:
          description: |-
            SystemdMode is whether the container is running in systemd mode. In
            systemd mode, the container configuration is customized to optimize
            running systemd in the container.
          type: boolean
        Timeout:
          description: Timeout is time before container is killed by conmon
          format: uint64
          type: integer
        Timezone:
          description: |-
            Timezone is the timezone inside the container.
            Local means it has the same timezone as the host machine
          type: string
        Tty:
          description: Whether the container creates a TTY
          type: boolean
        Umask:
          description: Umask is the umask inside the container.
          type: string
        User:
          description: User the container was launched with
          type: string
        Volumes:
          additionalProperties:
            properties: {}
            type: object
          description: "Unused, at present. I've never seen this field populated."
          type: object
        WorkingDir:
          description: Container working directory
          type: string
        sdNotifyMode:
          description: SdNotifyMode is the sd-notify mode of the container.
          type: string
          x-go-name: SdNotifyMode
        sdNotifySocket:
          description: SdNotifySocket is the NOTIFY_SOCKET in use by/configured for
            the container.
          type: string
          x-go-name: SdNotifySocket
      type: object
      x-go-package: github.com/containers/podman/v5/libpod/define
    InspectContainerData:
      description: |-
        InspectContainerData provides a detailed record of a container's configuration
        and state as viewed by Libpod.
        Large portions of this structure are defined such that the output is
        compatible with `docker inspect` JSON, but additional fields have been added
        as required to share information not in the original output.
      example:
        StaticDir: StaticDir
        ImageDigest: ImageDigest
        Config:
          HealthcheckMaxLogCount: 2
          Timezone: Timezone
          ChrootDirs:
          - ChrootDirs
          - ChrootDirs
          HealthcheckOnFailureAction: HealthcheckOnFailureAction
          User: User
          Secrets:
          - UID: 2
            GID: 9
            Mode: 3
            ID: ID
            Name: Name
          - UID: 2
            GID: 9
            Mode: 3
            ID: ID
            Name: Name
          HealthcheckMaxLogSize: 7
          OpenStdin: true
          Env:
          - Env
          - Env
          Image: Image
          StdinOnce: true
          AttachStdout: true
          StartupHealthCheck:
            StartInterval: 1
            Test:
            - Test
            - Test
            Retries: 7
            Successes: 1
            Timeout: 6
            Interval: 4
            StartPeriod: 1
          Annotations:
            key: Annotations
          Volumes:
            key: "{}"
          AttachStdin: true
          Domainname: Domainname
          Tty: true
          Cmd:
          - Cmd
          - Cmd
          StopTimeout: 7
          Umask: Umask
          StopSignal: StopSignal
          CreateCommand:
          - CreateCommand
          - CreateCommand
          Entrypoint:
          - Entrypoint
          - Entrypoint
          sdNotifySocket: sdNotifySocket
          AttachStderr: true
          SystemdMode: true
          Timeout: 1
          Hostname: Hostname
          Labels:
            key: Labels
          Healthcheck:
            StartInterval: 1
            Test:
            - Test
            - Test
            Retries: 6
            Timeout: 5
            Interval: 0
            StartPeriod: 5
          ExposedPorts:
            key: "{}"
          Passwd: true
          WorkingDir: WorkingDir
          OnBuild: OnBuild
          HealthLogDestination: HealthLogDestination
          sdNotifyMode: sdNotifyMode
        PidFile: PidFile
        AppArmorProfile: AppArmorProfile
        Driver: Driver
        HostsPath: HostsPath
        HostnamePath: HostnamePath
        Image: Image
        Created: 2000-01-23T04:56:07.000+00:00
        Name: Name
        OCIRuntime: OCIRuntime
        MountLabel: MountLabel
        SizeRootFs: 0
        BoundingCaps:
        - BoundingCaps
        - BoundingCaps
        ConmonPidFile: ConmonPidFile
        HostConfig:
          ReadonlyRootfs: true
          DiskQuota: 2
          BlkioWeightDevice:
          - Path: Path
            Weight: 9
          - Path: Path
            Weight: 9
          DnsOptions:
          - DnsOptions
          - DnsOptions
          Memory: 6
          CpuPeriod: 9
          Dns:
          - Dns
          - Dns
          PortBindings:
            key:
            - HostIp: HostIp
              HostPort: HostPort
            - HostIp: HostIp
              HostPort: HostPort
          VolumesFrom:
          - VolumesFrom
          - VolumesFrom
          Devices:
          - CgroupPermissions: CgroupPermissions
            PathInContainer: PathInContainer
            PathOnHost: PathOnHost
          - CgroupPermissions: CgroupPermissions
            PathInContainer: PathInContainer
            PathOnHost: PathOnHost
          MemorySwappiness: 7
          BlkioWeight: 5
          CgroupMode: CgroupMode
          Init: true
          Runtime: Runtime
          Annotations:
            key: Annotations
          UsernsMode: UsernsMode
          Ulimits:
          - Hard: 8
            Soft: 7
            Name: Name
          - Hard: 8
            Soft: 7
            Name: Name
          IntelRdtClosID: IntelRdtClosID
          CpusetCpus: CpusetCpus
          MemoryReservation: 3
          ExtraHosts:
          - ExtraHosts
          - ExtraHosts
          BlkioDeviceWriteIOps:
          - Path: Path
            Rate: 4
          - Path: Path
            Rate: 4
          Cgroups: Cgroups
          UTSMode: UTSMode
          Cgroup: Cgroup
          CpuQuota: 6
          CpuRealtimeRuntime: 6
          DnsSearch:
          - DnsSearch
          - DnsSearch
          CgroupConf:
            key: CgroupConf
          IDMappings:
            GidMap:
            - GidMap
            - GidMap
            UidMap:
            - UidMap
            - UidMap
          CpuShares: 1
          ContainerIDFile: ContainerIDFile
          OomScoreAdj: 7
          KernelMemory: 5
          LogConfig:
            Path: Path
            Type: Type
            Config:
              key: Config
            Size: Size
            Tag: Tag
          AutoRemoveImage: true
          OomKillDisable: true
          IOMaximumBandwidth: 6
          Privileged: true
          GroupAdd:
          - GroupAdd
          - GroupAdd
          AutoRemove: true
          CgroupManager: CgroupManager
          CpuPercent: 8
          ConsoleSize:
          - 9
          - 9
          IOMaximumIOps: 6
          CapAdd:
          - CapAdd
          - CapAdd
          VolumeDriver: VolumeDriver
          CapDrop:
          - CapDrop
          - CapDrop
          CpuCount: 6
          PublishAllPorts: true
          Tmpfs:
            key: Tmpfs
          CpuRealtimePeriod: 3
          IpcMode: IpcMode
          Binds:
          - Binds
          - Binds
          CpusetMems: CpusetMems
          BlkioDeviceWriteBps:
          - Path: Path
            Rate: 4
          - Path: Path
            Rate: 4
          RestartPolicy:
            MaximumRetryCount: 0
            Name: Name
          NetworkMode: NetworkMode
          PidMode: PidMode
          BlkioDeviceReadBps:
          - Path: Path
            Rate: 4
          - Path: Path
            Rate: 4
          CgroupParent: CgroupParent
          NanoCpus: 0
          MemorySwap: 3
          Isolation: Isolation
          Links:
          - Links
          - Links
          PidsLimit: 6
          BlkioDeviceReadIOps:
          - Path: Path
            Rate: 4
          - Path: Path
            Rate: 4
          SecurityOpt:
          - SecurityOpt
          - SecurityOpt
          ShmSize: 4
        OCIConfigPath: OCIConfigPath
        Dependencies:
        - Dependencies
        - Dependencies
        Path: Path
        lockNumber: 7
        Args:
        - Args
        - Args
        EffectiveCaps:
        - EffectiveCaps
        - EffectiveCaps
        Mounts:
        - Destination: Destination
          Options:
          - Options
          - Options
          SubPath: SubPath
          Type: Type
          Propagation: Propagation
          RW: true
          Mode: Mode
          Driver: Driver
          Source: Source
          Name: Name
        - Destination: Destination
          Options:
          - Options
          - Options
          SubPath: SubPath
          Type: Type
          Propagation: Propagation
          RW: true
          Mode: Mode
          Driver: Driver
          Source: Source
          Name: Name
        ProcessLabel: ProcessLabel
        Pod: Pod
        SizeRw: 6
        GraphDriver:
          Data:
            key: Data
          Name: Name
        IsService: true
        Namespace: Namespace
        RestartCount: 4
        ImageName: ImageName
        KubeExitCodePropagation: KubeExitCodePropagation
        NetworkSettings:
          HairpinMode: true
          Networks:
            key:
              GlobalIPv6Address: GlobalIPv6Address
              GlobalIPv6PrefixLen: 5
              IPPrefixLen: 3
              Aliases:
              - Aliases
              - Aliases
              AdditionalMACAddresses:
              - AdditionalMACAddresses
              - AdditionalMACAddresses
              MacAddress: MacAddress
              NetworkID: NetworkID
              IPAMConfig:
                key: IPAMConfig
              DriverOpts:
                key: DriverOpts
              Gateway: Gateway
              EndpointID: EndpointID
              Links:
              - Links
              - Links
              SecondaryIPv6Addresses:
              - PrefixLength: 0
                Addr: Addr
              - PrefixLength: 0
                Addr: Addr
              IPv6Gateway: IPv6Gateway
              SecondaryIPAddresses:
              - PrefixLength: 0
                Addr: Addr
              - PrefixLength: 0
                Addr: Addr
              IPAddress: IPAddress
          SandboxKey: SandboxKey
          GlobalIPv6Address: GlobalIPv6Address
          Ports:
            key:
            - HostIp: HostIp
              HostPort: HostPort
            - HostIp: HostIp
              HostPort: HostPort
          GlobalIPv6PrefixLen: 3
          IPPrefixLen: 3
          AdditionalMACAddresses:
          - AdditionalMACAddresses
          - AdditionalMACAddresses
          MacAddress: MacAddress
          SandboxID: SandboxID
          LinkLocalIPv6Address: LinkLocalIPv6Address
          LinkLocalIPv6PrefixLen: 7
          Gateway: Gateway
          EndpointID: EndpointID
          SecondaryIPv6Addresses:
          - PrefixLength: 0
            Addr: Addr
          - PrefixLength: 0
            Addr: Addr
          IPv6Gateway: IPv6Gateway
          SecondaryIPAddresses:
          - PrefixLength: 0
            Addr: Addr
          - PrefixLength: 0
            Addr: Addr
          IPAddress: IPAddress
          Bridge: Bridge
        Rootfs: Rootfs
        ResolvConfPath: ResolvConfPath
        State:
          Status: Status
          StoppedByUser: true
          Dead: true
          CheckpointLog: CheckpointLog
          Health:
            Status: Status
            Log:
            - Start: Start
              ExitCode: 6
              Output: Output
              End: End
            - Start: Start
              ExitCode: 6
              Output: Output
              End: End
            FailingStreak: 0
          ExitCode: 1
          ConmonPid: 4
          Error: Error
          RestoreLog: RestoreLog
          OciVersion: OciVersion
          Pid: 4
          Restarting: true
          CheckpointedAt: 2000-01-23T04:56:07.000+00:00
          CgroupPath: CgroupPath
          CheckpointPath: CheckpointPath
          Checkpointed: true
          RestoredAt: 2000-01-23T04:56:07.000+00:00
          Running: true
          FinishedAt: 2000-01-23T04:56:07.000+00:00
          OOMKilled: true
          StartedAt: 2000-01-23T04:56:07.000+00:00
          Paused: true
          Restored: true
        ExecIDs:
        - ExecIDs
        - ExecIDs
        IsInfra: true
        Id: Id
      properties:
        AppArmorProfile:
          type: string
        Args:
          items:
            type: string
          type: array
        BoundingCaps:
          items:
            type: string
          type: array
        Config:
          $ref: "#/components/schemas/InspectContainerConfig"
        ConmonPidFile:
          type: string
        Created:
          format: date-time
          type: string
        Dependencies:
          items:
            type: string
          type: array
        Driver:
          type: string
        EffectiveCaps:
          items:
            type: string
          type: array
        ExecIDs:
          items:
            type: string
          type: array
        GraphDriver:
          $ref: "#/components/schemas/DriverData"
        HostConfig:
          $ref: "#/components/schemas/InspectContainerHostConfig"
        HostnamePath:
          type: string
        HostsPath:
          type: string
        Id:
          type: string
          x-go-name: ID
        Image:
          type: string
        ImageDigest:
          type: string
        ImageName:
          type: string
        IsInfra:
          type: boolean
        IsService:
          type: boolean
        KubeExitCodePropagation:
          type: string
        MountLabel:
          type: string
        Mounts:
          items:
            $ref: "#/components/schemas/InspectMount"
          type: array
        Name:
          type: string
        Namespace:
          type: string
        NetworkSettings:
          $ref: "#/components/schemas/InspectNetworkSettings"
        OCIConfigPath:
          type: string
        OCIRuntime:
          type: string
        Path:
          type: string
        PidFile:
          type: string
        Pod:
          type: string
        ProcessLabel:
          type: string
        ResolvConfPath:
          type: string
        RestartCount:
          format: int32
          type: integer
        Rootfs:
          type: string
        SizeRootFs:
          format: int64
          type: integer
        SizeRw:
          format: int64
          type: integer
        State:
          $ref: "#/components/schemas/InspectContainerState"
        StaticDir:
          type: string
        lockNumber:
          format: uint32
          type: integer
          x-go-name: LockNumber
      type: object
      x-go-package: github.com/containers/podman/v5/libpod/define
    InspectContainerHostConfig:
      description: "nolint:revive,stylecheck // Field names are fixed for compatibility\
        \ and cannot be changed."
      example:
        ReadonlyRootfs: true
        DiskQuota: 2
        BlkioWeightDevice:
        - Path: Path
          Weight: 9
        - Path: Path
          Weight: 9
        DnsOptions:
        - DnsOptions
        - DnsOptions
        Memory: 6
        CpuPeriod: 9
        Dns:
        - Dns
        - Dns
        PortBindings:
          key:
          - HostIp: HostIp
            HostPort: HostPort
          - HostIp: HostIp
            HostPort: HostPort
        VolumesFrom:
        - VolumesFrom
        - VolumesFrom
        Devices:
        - CgroupPermissions: CgroupPermissions
          PathInContainer: PathInContainer
          PathOnHost: PathOnHost
        - CgroupPermissions: CgroupPermissions
          PathInContainer: PathInContainer
          PathOnHost: PathOnHost
        MemorySwappiness: 7
        BlkioWeight: 5
        CgroupMode: CgroupMode
        Init: true
        Runtime: Runtime
        Annotations:
          key: Annotations
        UsernsMode: UsernsMode
        Ulimits:
        - Hard: 8
          Soft: 7
          Name: Name
        - Hard: 8
          Soft: 7
          Name: Name
        IntelRdtClosID: IntelRdtClosID
        CpusetCpus: CpusetCpus
        MemoryReservation: 3
        ExtraHosts:
        - ExtraHosts
        - ExtraHosts
        BlkioDeviceWriteIOps:
        - Path: Path
          Rate: 4
        - Path: Path
          Rate: 4
        Cgroups: Cgroups
        UTSMode: UTSMode
        Cgroup: Cgroup
        CpuQuota: 6
        CpuRealtimeRuntime: 6
        DnsSearch:
        - DnsSearch
        - DnsSearch
        CgroupConf:
          key: CgroupConf
        IDMappings:
          GidMap:
          - GidMap
          - GidMap
          UidMap:
          - UidMap
          - UidMap
        CpuShares: 1
        ContainerIDFile: ContainerIDFile
        OomScoreAdj: 7
        KernelMemory: 5
        LogConfig:
          Path: Path
          Type: Type
          Config:
            key: Config
          Size: Size
          Tag: Tag
        AutoRemoveImage: true
        OomKillDisable: true
        IOMaximumBandwidth: 6
        Privileged: true
        GroupAdd:
        - GroupAdd
        - GroupAdd
        AutoRemove: true
        CgroupManager: CgroupManager
        CpuPercent: 8
        ConsoleSize:
        - 9
        - 9
        IOMaximumIOps: 6
        CapAdd:
        - CapAdd
        - CapAdd
        VolumeDriver: VolumeDriver
        CapDrop:
        - CapDrop
        - CapDrop
        CpuCount: 6
        PublishAllPorts: true
        Tmpfs:
          key: Tmpfs
        CpuRealtimePeriod: 3
        IpcMode: IpcMode
        Binds:
        - Binds
        - Binds
        CpusetMems: CpusetMems
        BlkioDeviceWriteBps:
        - Path: Path
          Rate: 4
        - Path: Path
          Rate: 4
        RestartPolicy:
          MaximumRetryCount: 0
          Name: Name
        NetworkMode: NetworkMode
        PidMode: PidMode
        BlkioDeviceReadBps:
        - Path: Path
          Rate: 4
        - Path: Path
          Rate: 4
        CgroupParent: CgroupParent
        NanoCpus: 0
        MemorySwap: 3
        Isolation: Isolation
        Links:
        - Links
        - Links
        PidsLimit: 6
        BlkioDeviceReadIOps:
        - Path: Path
          Rate: 4
        - Path: Path
          Rate: 4
        SecurityOpt:
        - SecurityOpt
        - SecurityOpt
        ShmSize: 4
      properties:
        Annotations:
          additionalProperties:
            type: string
          description: |-
            Annotations are provided to the runtime when the container is
            started.
          type: object
        AutoRemove:
          description: |-
            AutoRemove is whether the container will be automatically removed on
            exiting.
            It is not handled directly within libpod and is stored in an
            annotation.
          type: boolean
        AutoRemoveImage:
          description: |-
            AutoRemoveImage is whether the container's image will be
            automatically removed on exiting.
            It is not handled directly within libpod and is stored in an
            annotation.
          type: boolean
        Binds:
          description: |-
            Binds contains an array of user-added mounts.
            Both volume mounts and named volumes are included.
            Tmpfs mounts are NOT included.
            In 'docker inspect' this is separated into 'Binds' and 'Mounts' based
            on how a mount was added. We do not make this distinction and do not
            include a Mounts field in inspect.
            Format: <src>:<destination>[:<comma-separated options>]
          items:
            type: string
          type: array
        BlkioDeviceReadBps:
          description: |-
            BlkioDeviceReadBps is an array of I/O throttle parameters for
            individual device nodes.
            This specifically sets read rate cap in bytes per second for device
            nodes.
            As with BlkioWeightDevice, we pull the path from /sys/dev, and we
            don't guarantee the path will be identical to the original (though
            the node will be).
          items:
            $ref: "#/components/schemas/InspectBlkioThrottleDevice"
          type: array
        BlkioDeviceReadIOps:
          description: |-
            BlkioDeviceReadIOps is an array of I/O throttle parameters for
            individual device nodes.
            This specifically sets the read rate cap in iops per second for
            device nodes.
            As with BlkioWeightDevice, we pull the path from /sys/dev, and we
            don't guarantee the path will be identical to the original (though
            the node will be).
          items:
            $ref: "#/components/schemas/InspectBlkioThrottleDevice"
          type: array
        BlkioDeviceWriteBps:
          description: |-
            BlkioDeviceWriteBps is an array of I/O throttle parameters for
            individual device nodes.
            this specifically sets write rate cap in bytes per second for device
            nodes.
            as with BlkioWeightDevice, we pull the path from /sys/dev, and we
            don't guarantee the path will be identical to the original (though
            the node will be).
          items:
            $ref: "#/components/schemas/InspectBlkioThrottleDevice"
          type: array
        BlkioDeviceWriteIOps:
          description: |-
            BlkioDeviceWriteIOps is an array of I/O throttle parameters for
            individual device nodes.
            This specifically sets the write rate cap in iops per second for
            device nodes.
            As with BlkioWeightDevice, we pull the path from /sys/dev, and we
            don't guarantee the path will be identical to the original (though
            the node will be).
          items:
            $ref: "#/components/schemas/InspectBlkioThrottleDevice"
          type: array
        BlkioWeight:
          description: |-
            BlkioWeight indicates the I/O resources allocated to the container.
            It is a relative weight in the scheduler for assigning I/O time
            versus other Cgroups.
          format: uint16
          type: integer
        BlkioWeightDevice:
          description: |-
            BlkioWeightDevice is an array of I/O resource priorities for
            individual device nodes.
            Unfortunately, the spec only stores the device's Major/Minor numbers
            and not the path, which is used here.
            Fortunately, the kernel provides an interface for retrieving the path
            of a given node by major:minor at /sys/dev/. However, the exact path
            in use may not be what was used in the original CLI invocation -
            though it is guaranteed that the device node will be the same, and
            using the given path will be functionally identical.
          items:
            $ref: "#/components/schemas/InspectBlkioWeightDevice"
          type: array
        CapAdd:
          description: |-
            CapAdd is a list of capabilities added to the container.
            It is not directly stored by Libpod, and instead computed from the
            capabilities listed in the container's spec, compared against a set
            of default capabilities.
          items:
            type: string
          type: array
        CapDrop:
          description: |-
            CapDrop is a list of capabilities removed from the container.
            It is not directly stored by libpod, and instead computed from the
            capabilities listed in the container's spec, compared against a set
            of default capabilities.
          items:
            type: string
          type: array
        Cgroup:
          description: |-
            Cgroup contains the container's cgroup. It is presently not
            populated.
            TODO.
          type: string
        CgroupConf:
          additionalProperties:
            type: string
          description: CgroupConf is the configuration for cgroup v2.
          type: object
        CgroupManager:
          description: |-
            CgroupManager is the cgroup manager used by the container.
            At present, allowed values are either "cgroupfs" or "systemd".
          type: string
        CgroupMode:
          description: |-
            CgroupMode is the configuration of the container's cgroup namespace.
            Populated as follows:
            private - a cgroup namespace has been created
            host - No cgroup namespace created
            container:<id> - Using another container's cgroup namespace
            ns:<path> - A path to a cgroup namespace has been specified
          type: string
        CgroupParent:
          description: |-
            CgroupParent is the Cgroup parent of the container.
            Only set if not default.
          type: string
        Cgroups:
          description: |-
            Cgroups contains the container's Cgroup mode.
            Allowed values are "default" (container is creating Cgroups) and
            "disabled" (container is not creating Cgroups).
            This is Libpod-specific and not included in `docker inspect`.
          type: string
        ConsoleSize:
          description: |-
            ConsoleSize is an array of 2 integers showing the size of the
            container's console.
            It is only set if the container is creating a terminal.
            TODO.
          items:
            format: uint64
            type: integer
          type: array
        ContainerIDFile:
          description: |-
            ContainerIDFile is a file created during container creation to hold
            the ID of the created container.
            This is not handled within libpod and is stored in an annotation.
          type: string
        CpuCount:
          description: CpuCount is Windows-only and not presently implemented.
          format: uint64
          type: integer
        CpuPercent:
          description: CpuPercent is Windows-only and not presently implemented.
          format: uint64
          type: integer
        CpuPeriod:
          description: |-
            CpuPeriod is the length of a CPU period in microseconds.
            It relates directly to CpuQuota.
          format: uint64
          type: integer
        CpuQuota:
          description: |-
            CpuPeriod is the amount of time (in microseconds) that a container
            can use the CPU in every CpuPeriod.
          format: int64
          type: integer
        CpuRealtimePeriod:
          description: |-
            CpuRealtimePeriod is the length of time (in microseconds) of the CPU
            realtime period. If set to 0, no time will be allocated to realtime
            tasks.
          format: uint64
          type: integer
        CpuRealtimeRuntime:
          description: |-
            CpuRealtimeRuntime is the length of time (in microseconds) allocated
            for realtime tasks within every CpuRealtimePeriod.
          format: int64
          type: integer
        CpuShares:
          description: |-
            CpuShares indicates the CPU resources allocated to the container.
            It is a relative weight in the scheduler for assigning CPU time
            versus other Cgroups.
          format: uint64
          type: integer
        CpusetCpus:
          description: |-
            CpusetCpus is the set of CPUs that the container will execute on.
            Formatted as `0-3` or `0,2`. Default (if unset) is all CPUs.
          type: string
        CpusetMems:
          description: |-
            CpusetMems is the set of memory nodes the container will use.
            Formatted as `0-3` or `0,2`. Default (if unset) is all memory nodes.
          type: string
        Devices:
          description: |-
            Devices is a list of device nodes that will be added to the
            container.
            These are stored in the OCI spec only as type, major, minor while we
            display the host path. We convert this with /sys/dev, but we cannot
            guarantee that the host path will be identical - only that the actual
            device will be.
          items:
            $ref: "#/components/schemas/InspectDevice"
          type: array
        DiskQuota:
          description: |-
            DiskQuota is the maximum amount of disk space the container may use
            (in bytes).
            Presently not populated.
            TODO.
          format: uint64
          type: integer
        Dns:
          description: |-
            Dns is a list of DNS nameservers that will be added to the
            container's resolv.conf
          items:
            type: string
          type: array
        DnsOptions:
          description: |-
            DnsOptions is a list of DNS options that will be set in the
            container's resolv.conf
          items:
            type: string
          type: array
        DnsSearch:
          description: |-
            DnsSearch is a list of DNS search domains that will be set in the
            container's resolv.conf
          items:
            type: string
          type: array
        ExtraHosts:
          description: |-
            ExtraHosts contains hosts that will be added to the container's
            etc/hosts.
          items:
            type: string
          type: array
        GroupAdd:
          description: |-
            GroupAdd contains groups that the user inside the container will be
            added to.
          items:
            type: string
          type: array
        IDMappings:
          $ref: "#/components/schemas/InspectIDMappings"
        IOMaximumBandwidth:
          description: IOMaximumBandwidth is Windows-only and not presently implemented.
          format: uint64
          type: integer
        IOMaximumIOps:
          description: IOMaximumIOps is Windows-only and not presently implemented.
          format: uint64
          type: integer
        Init:
          description: Init indicates whether the container has an init mounted into
            it.
          type: boolean
        IntelRdtClosID:
          description: |-
            IntelRdtClosID defines the Intel RDT CAT Class Of Service (COS) that
            all processes of the container should run in.
          type: string
        IpcMode:
          description: |-
            IpcMode represents the configuration of the container's IPC
            namespace.
            Populated as follows:
            "" (empty string) - Default, an IPC namespace will be created
            host - No IPC namespace created
            container:<id> - Using another container's IPC namespace
            ns:<path> - A path to an IPC namespace has been specified
          type: string
        Isolation:
          description: |-
            Isolation is presently unused and provided solely for Docker
            compatibility.
          type: string
        KernelMemory:
          description: |-
            KernelMemory is the maximum amount of memory the kernel will devote
            to the container.
          format: int64
          type: integer
        Links:
          description: "Links is unused, and provided purely for Docker compatibility."
          items:
            type: string
          type: array
        LogConfig:
          $ref: "#/components/schemas/InspectLogConfig"
        Memory:
          description: |-
            Memory indicates the memory resources allocated to the container.
            This is the limit (in bytes) of RAM the container may use.
          format: int64
          type: integer
        MemoryReservation:
          description: |-
            MemoryReservation is the reservation (soft limit) of memory available
            to the container. Soft limits are warnings only and can be exceeded.
          format: int64
          type: integer
        MemorySwap:
          description: |-
            MemorySwap is the total limit for all memory available to the
            container, including swap. 0 indicates that there is no limit to the
            amount of memory available.
          format: int64
          type: integer
        MemorySwappiness:
          description: |-
            MemorySwappiness is the willingness of the kernel to page container
            memory to swap. It is an integer from 0 to 100, with low numbers
            being more likely to be put into swap.
            1, the default, will not set swappiness and use the system defaults.
          format: int64
          type: integer
        NanoCpus:
          description: |-
            NanoCpus indicates number of CPUs allocated to the container.
            It is an integer where one full CPU is indicated by 1000000000 (one
            billion).
            Thus, 2.5 CPUs (fractional portions of CPUs are allowed) would be
            2500000000 (2.5 billion).
            In 'docker inspect' this is set exclusively of two further options in
            the output (CpuPeriod and CpuQuota) which are both used to implement
            this functionality.
            We can't distinguish here, so if CpuQuota is set to the default of
            100000, we will set both CpuQuota, CpuPeriod, and NanoCpus. If
            CpuQuota is not the default, we will not set NanoCpus.
          format: int64
          type: integer
        NetworkMode:
          description: |-
            NetworkMode is the configuration of the container's network
            namespace.
            Populated as follows:
            default - A network namespace is being created and configured via CNI
            none - A network namespace is being created, not configured via CNI
            host - No network namespace created
            container:<id> - Using another container's network namespace
            ns:<path> - A path to a network namespace has been specified
          type: string
        OomKillDisable:
          description: |-
            OomKillDisable indicates whether the kernel OOM killer is disabled
            for the container.
          type: boolean
        OomScoreAdj:
          description: |-
            OOMScoreAdj is an adjustment that will be made to the container's OOM
            score.
          format: int64
          type: integer
        PidMode:
          description: |-
            PidMode represents the configuration of the container's PID
            namespace.
            Populated as follows:
            "" (empty string) - Default, a PID namespace will be created
            host - No PID namespace created
            container:<id> - Using another container's PID namespace
            ns:<path> - A path to a PID namespace has been specified
          type: string
        PidsLimit:
          description: |-
            PidsLimit is the maximum number of PIDs that may be created within
            the container. 0, the default, indicates no limit.
          format: int64
          type: integer
        PortBindings:
          additionalProperties:
            items:
              $ref: "#/components/schemas/InspectHostPort"
            type: array
          description: |-
            PortBindings contains the container's port bindings.
            It is formatted as map[string][]InspectHostPort.
            The string key here is formatted as <integer port number>/<protocol>
            and represents the container port. A single container port may be
            bound to multiple host ports (on different IPs).
          type: object
        Privileged:
          description: |-
            Privileged indicates whether the container is running with elevated
            privileges.
            This has a very specific meaning in the Docker sense, so it's very
            difficult to decode from the spec and config, and so is stored as an
            annotation.
          type: boolean
        PublishAllPorts:
          description: |-
            PublishAllPorts indicates whether image ports are being published.
            This is not directly stored in libpod and is saved as an annotation.
          type: boolean
        ReadonlyRootfs:
          description: ReadonlyRootfs is whether the container will be mounted read-only.
          type: boolean
        RestartPolicy:
          $ref: "#/components/schemas/InspectRestartPolicy"
        Runtime:
          description: |-
            Runtime is provided purely for Docker compatibility.
            It is set unconditionally to "oci" as Podman does not presently
            support non-OCI runtimes.
          type: string
        SecurityOpt:
          description: |-
            SecurityOpt is a list of security-related options that are set in the
            container.
          items:
            type: string
          type: array
        ShmSize:
          format: int64
          type: integer
        Tmpfs:
          additionalProperties:
            type: string
          description: |-
            Tmpfs is a list of tmpfs filesystems that will be mounted into the
            container.
            It is a map of destination path to options for the mount.
          type: object
        UTSMode:
          description: |-
            UTSMode represents the configuration of the container's UID
            namespace.
            Populated as follows:
            "" (empty string) - Default, a UTS namespace will be created
            host - no UTS namespace created
            container:<id> - Using another container's UTS namespace
            ns:<path> - A path to a UTS namespace has been specified
          type: string
        Ulimits:
          description: Ulimits is a set of ulimits that will be set within the container.
          items:
            $ref: "#/components/schemas/InspectUlimit"
          type: array
        UsernsMode:
          description: |-
            UsernsMode represents the configuration of the container's user
            namespace.
            When running rootless, a user namespace is created outside of libpod
            to allow some privileged operations. This will not be reflected here.
            Populated as follows:
            "" (empty string) - No user namespace will be created
            private - The container will be run in a user namespace
            container:<id> - Using another container's user namespace
            ns:<path> - A path to a user namespace has been specified
            TODO Rootless has an additional 'keep-id' option, presently not
            reflected here.
          type: string
        VolumeDriver:
          description: |-
            VolumeDriver is presently unused and is retained for Docker
            compatibility.
          type: string
        VolumesFrom:
          description: |-
            VolumesFrom is a list of containers which this container uses volumes
            from. This is not handled directly within libpod and is stored in an
            annotation.
            It is formatted as an array of container names and IDs.
          items:
            type: string
          type: array
      title: |-
        InspectContainerHostConfig holds information used when the container was
        created.
        It's very much a Docker-specific struct, retained (mostly) as-is for
        compatibility. We fill individual fields as best as we can, inferring as much
        as possible from the spec and container config.
        Some things cannot be inferred. These will be populated by spec annotations
        (if available).
      type: object
      x-go-package: github.com/containers/podman/v5/libpod/define
    InspectContainerState:
      description: |-
        InspectContainerState provides a detailed record of a container's current
        state. It is returned as part of InspectContainerData.
        As with InspectContainerData, many portions of this struct are matched to
        Docker, but here we see more fields that are unused (nonsensical in the
        context of Libpod).
      example:
        Status: Status
        StoppedByUser: true
        Dead: true
        CheckpointLog: CheckpointLog
        Health:
          Status: Status
          Log:
          - Start: Start
            ExitCode: 6
            Output: Output
            End: End
          - Start: Start
            ExitCode: 6
            Output: Output
            End: End
          FailingStreak: 0
        ExitCode: 1
        ConmonPid: 4
        Error: Error
        RestoreLog: RestoreLog
        OciVersion: OciVersion
        Pid: 4
        Restarting: true
        CheckpointedAt: 2000-01-23T04:56:07.000+00:00
        CgroupPath: CgroupPath
        CheckpointPath: CheckpointPath
        Checkpointed: true
        RestoredAt: 2000-01-23T04:56:07.000+00:00
        Running: true
        FinishedAt: 2000-01-23T04:56:07.000+00:00
        OOMKilled: true
        StartedAt: 2000-01-23T04:56:07.000+00:00
        Paused: true
        Restored: true
      properties:
        CgroupPath:
          type: string
        CheckpointLog:
          type: string
        CheckpointPath:
          type: string
        Checkpointed:
          type: boolean
        CheckpointedAt:
          format: date-time
          type: string
        ConmonPid:
          format: int64
          type: integer
        Dead:
          type: boolean
        Error:
          type: string
        ExitCode:
          format: int32
          type: integer
        FinishedAt:
          format: date-time
          type: string
        Health:
          $ref: "#/components/schemas/HealthCheckResults"
        OOMKilled:
          type: boolean
        OciVersion:
          type: string
        Paused:
          type: boolean
        Pid:
          format: int64
          type: integer
        Restarting:
          type: boolean
        RestoreLog:
          type: string
        Restored:
          type: boolean
        RestoredAt:
          format: date-time
          type: string
        Running:
          type: boolean
        StartedAt:
          format: date-time
          type: string
        Status:
          type: string
        StoppedByUser:
          type: boolean
      type: object
      x-go-package: github.com/containers/podman/v5/libpod/define
    InspectDevice:
      example:
        CgroupPermissions: CgroupPermissions
        PathInContainer: PathInContainer
        PathOnHost: PathOnHost
      properties:
        CgroupPermissions:
          description: |-
            CgroupPermissions is the permissions of the mounted device.
            Presently not populated.
            TODO.
          type: string
        PathInContainer:
          description: PathInContainer is the path of the device within the container.
          type: string
        PathOnHost:
          description: PathOnHost is the path of the device on the host.
          type: string
      title: InspectDevice is a single device that will be mounted into the container.
      type: object
      x-go-package: github.com/containers/podman/v5/libpod/define
    InspectExecProcess:
      description: |-
        InspectExecProcess contains information about the process in a given exec
        session.
      example:
        privileged: true
        entrypoint: entrypoint
        tty: true
        arguments:
        - arguments
        - arguments
        user: user
      properties:
        arguments:
          description: |-
            Arguments are the arguments to the entrypoint command of the exec
            session.
          items:
            type: string
          type: array
          x-go-name: Arguments
        entrypoint:
          description: |-
            Entrypoint is the entrypoint for the exec session (the command that
            will be executed in the container).
          type: string
          x-go-name: Entrypoint
        privileged:
          description: |-
            Privileged is whether the exec session will be started with elevated
            privileges.
          type: boolean
          x-go-name: Privileged
        tty:
          description: Tty is whether the exec session created a terminal.
          type: boolean
          x-go-name: Tty
        user:
          description: User is the user the exec session was started as.
          type: string
          x-go-name: User
      type: object
      x-go-package: github.com/containers/podman/v5/libpod/define
    InspectExecSession:
      example:
        DetachKeys: DetachKeys
        ProcessConfig:
          privileged: true
          entrypoint: entrypoint
          tty: true
          arguments:
          - arguments
          - arguments
          user: user
        ContainerID: ContainerID
        ExitCode: 0
        OpenStdout: true
        Running: true
        OpenStdin: true
        Pid: 6
        ID: ID
        CanRemove: true
        OpenStderr: true
      properties:
        CanRemove:
          description: |-
            CanRemove is legacy and used purely for compatibility reasons.
            Will always be set to true, unless the exec session is running.
          type: boolean
        ContainerID:
          description: |-
            ContainerID is the ID of the container this exec session is attached
            to.
          type: string
        DetachKeys:
          description: |-
            DetachKeys are the detach keys used by the exec session.
            If set to "" the default keys are being used.
            Will show "<none>" if no detach keys are set.
          type: string
        ExitCode:
          description: |-
            ExitCode is the exit code of the exec session. Will be set to 0 if
            the exec session has not yet exited.
          format: int64
          type: integer
        ID:
          description: ID is the ID of the exec session.
          type: string
        OpenStderr:
          description: |-
            OpenStderr is whether the container's STDERR stream will be attached.
            Always set to true if the exec session created a TTY.
          type: boolean
        OpenStdin:
          description: |-
            OpenStdin is whether the container's STDIN stream will be attached
            to.
          type: boolean
        OpenStdout:
          description: |-
            OpenStdout is whether the container's STDOUT stream will be attached.
            Always set to true if the exec session created a TTY.
          type: boolean
        Pid:
          description: |-
            Pid is the PID of the exec session's process.
            Will be set to 0 if the exec session is not running.
          format: int64
          type: integer
        ProcessConfig:
          $ref: "#/components/schemas/InspectExecProcess"
        Running:
          description: Running is whether the exec session is running.
          type: boolean
      title: InspectExecSession contains information about a given exec session.
      type: object
      x-go-package: github.com/containers/podman/v5/libpod/define
    InspectHostPort:
      description: |-
        InspectHostPort provides information on a port on the host that a container's
        port is bound to.
      example:
        HostIp: HostIp
        HostPort: HostPort
      properties:
        HostIp:
          description: |-
            IP on the host we are bound to. "" if not specified (binding to all
            IPs).
          type: string
          x-go-name: HostIP
        HostPort:
          description: |-
            Port on the host we are bound to. No special formatting - just an
            integer stuffed into a string.
          type: string
      type: object
      x-go-package: github.com/containers/podman/v5/libpod/define
    InspectIDMappings:
      example:
        GidMap:
        - GidMap
        - GidMap
        UidMap:
        - UidMap
        - UidMap
      properties:
        GidMap:
          items:
            type: string
          type: array
          x-go-name: GIDMap
        UidMap:
          items:
            type: string
          type: array
          x-go-name: UIDMap
      type: object
      x-go-package: github.com/containers/podman/v5/libpod/define
    InspectLogConfig:
      description: InspectLogConfig holds information about a container's configured
        log driver
      example:
        Path: Path
        Type: Type
        Config:
          key: Config
        Size: Size
        Tag: Tag
      properties:
        Config:
          additionalProperties:
            type: string
          type: object
        Path:
          description: Path specifies a path to the log file
          type: string
        Size:
          description: Size specifies a maximum size of the container log
          type: string
        Tag:
          description: Tag specifies a custom log tag for the container
          type: string
        Type:
          type: string
      type: object
      x-go-package: github.com/containers/podman/v5/libpod/define
    InspectMount:
      description: |-
        InspectMount provides a record of a single mount in a container. It contains
        fields for both named and normal volumes. Only user-specified volumes will be
        included, and tmpfs volumes are not included even if the user specified them.
      example:
        Destination: Destination
        Options:
        - Options
        - Options
        SubPath: SubPath
        Type: Type
        Propagation: Propagation
        RW: true
        Mode: Mode
        Driver: Driver
        Source: Source
        Name: Name
      properties:
        Destination:
          description: |-
            The destination directory for the volume. Specified as a path within
            the container, as it would be passed into the OCI runtime.
          type: string
        Driver:
          description: The driver used for the named volume. Empty for bind mounts.
          type: string
        Mode:
          description: |-
            Contains SELinux :z/:Z mount options. Unclear what, if anything, else
            goes in here.
          type: string
        Name:
          description: The name of the volume. Empty for bind mounts.
          type: string
        Options:
          description: |-
            All remaining mount options. Additional data, not present in the
            original output.
          items:
            type: string
          type: array
        Propagation:
          description: |-
            Mount propagation for the mount. Can be empty if not specified, but
            is always printed - no omitempty.
          type: string
        RW:
          description: Whether the volume is read-write
          type: boolean
        Source:
          description: The source directory for the volume.
          type: string
        SubPath:
          description: |-
            SubPath object from the volume. Specified as a path within
            the source volume to be mounted at the Destination.
          type: string
        Type:
          description: |-
            Whether the mount is a volume or bind mount. Allowed values are
            "volume" and "bind".
          type: string
      type: object
      x-go-package: github.com/containers/podman/v5/libpod/define
    InspectNetworkSettings:
      description: |-
        InspectNetworkSettings holds information about the network settings of the
        container.
        Many fields are maintained only for compatibility with `docker inspect` and
        are unused within Libpod.
      example:
        HairpinMode: true
        Networks:
          key:
            GlobalIPv6Address: GlobalIPv6Address
            GlobalIPv6PrefixLen: 5
            IPPrefixLen: 3
            Aliases:
            - Aliases
            - Aliases
            AdditionalMACAddresses:
            - AdditionalMACAddresses
            - AdditionalMACAddresses
            MacAddress: MacAddress
            NetworkID: NetworkID
            IPAMConfig:
              key: IPAMConfig
            DriverOpts:
              key: DriverOpts
            Gateway: Gateway
            EndpointID: EndpointID
            Links:
            - Links
            - Links
            SecondaryIPv6Addresses:
            - PrefixLength: 0
              Addr: Addr
            - PrefixLength: 0
              Addr: Addr
            IPv6Gateway: IPv6Gateway
            SecondaryIPAddresses:
            - PrefixLength: 0
              Addr: Addr
            - PrefixLength: 0
              Addr: Addr
            IPAddress: IPAddress
        SandboxKey: SandboxKey
        GlobalIPv6Address: GlobalIPv6Address
        Ports:
          key:
          - HostIp: HostIp
            HostPort: HostPort
          - HostIp: HostIp
            HostPort: HostPort
        GlobalIPv6PrefixLen: 3
        IPPrefixLen: 3
        AdditionalMACAddresses:
        - AdditionalMACAddresses
        - AdditionalMACAddresses
        MacAddress: MacAddress
        SandboxID: SandboxID
        LinkLocalIPv6Address: LinkLocalIPv6Address
        LinkLocalIPv6PrefixLen: 7
        Gateway: Gateway
        EndpointID: EndpointID
        SecondaryIPv6Addresses:
        - PrefixLength: 0
          Addr: Addr
        - PrefixLength: 0
          Addr: Addr
        IPv6Gateway: IPv6Gateway
        SecondaryIPAddresses:
        - PrefixLength: 0
          Addr: Addr
        - PrefixLength: 0
          Addr: Addr
        IPAddress: IPAddress
        Bridge: Bridge
      properties:
        AdditionalMACAddresses:
          description: |-
            AdditionalMacAddresses is a set of additional MAC Addresses beyond
            the first. CNI may configure more than one interface for a single
            network, which can cause this.
          items:
            type: string
          type: array
          x-go-name: AdditionalMacAddresses
        Bridge:
          type: string
        EndpointID:
          description: "EndpointID is unused, maintained exclusively for compatibility."
          type: string
        Gateway:
          description: Gateway is the IP address of the gateway this network will
            use.
          type: string
        GlobalIPv6Address:
          description: GlobalIPv6Address is the global-scope IPv6 Address for this
            network.
          type: string
        GlobalIPv6PrefixLen:
          description: GlobalIPv6PrefixLen is the length of the subnet mask of this
            network.
          format: int64
          type: integer
        HairpinMode:
          type: boolean
        IPAddress:
          description: IPAddress is the IP address for this network.
          type: string
        IPPrefixLen:
          description: IPPrefixLen is the length of the subnet mask of this network.
          format: int64
          type: integer
        IPv6Gateway:
          description: IPv6Gateway is the IPv6 gateway this network will use.
          type: string
        LinkLocalIPv6Address:
          type: string
        LinkLocalIPv6PrefixLen:
          format: int64
          type: integer
        MacAddress:
          description: MacAddress is the MAC address for the interface in this network.
          type: string
        Networks:
          additionalProperties:
            $ref: "#/components/schemas/InspectAdditionalNetwork"
          description: |-
            Networks contains information on non-default networks this
            container has joined.
            It is a map of network name to network information.
          type: object
        Ports:
          additionalProperties:
            items:
              $ref: "#/components/schemas/InspectHostPort"
            type: array
          type: object
        SandboxID:
          type: string
        SandboxKey:
          type: string
        SecondaryIPAddresses:
          description: |-
            SecondaryIPAddresses is a list of extra IP Addresses that the
            container has been assigned in this network.
          items:
            $ref: "#/components/schemas/Address"
          type: array
        SecondaryIPv6Addresses:
          description: |-
            SecondaryIPv6Addresses is a list of extra IPv6 Addresses that the
            container has been assigned in this network.
          items:
            $ref: "#/components/schemas/Address"
          type: array
      type: object
      x-go-package: github.com/containers/podman/v5/libpod/define
    InspectPodContainerInfo:
      example:
        State: State
        Id: Id
        Name: Name
      properties:
        Id:
          description: ID is the ID of the container.
          type: string
          x-go-name: ID
        Name:
          description: Name is the name of the container.
          type: string
        State:
          description: State is the current status of the container.
          type: string
      title: InspectPodContainerInfo contains information on a container in a pod.
      type: object
      x-go-package: github.com/containers/podman/v5/libpod/define
    InspectPodData:
      description: |-
        InspectPodData contains detailed information on a pod's configuration and
        state. It is used as the output of Inspect on pods.
      example:
        memory_swap: 2
        cpuset_cpus: cpuset_cpus
        security_opt:
        - security_opt
        - security_opt
        Containers:
        - State: State
          Id: Id
          Name: Name
        - State: State
          Id: Id
          Name: Name
        SharedNamespaces:
        - SharedNamespaces
        - SharedNamespaces
        Created: 2000-01-23T04:56:07.000+00:00
        Name: Name
        CreateInfra: true
        device_read_bps:
        - Path: Path
          Rate: 4
        - Path: Path
          Rate: 4
        blkio_weight: 5
        cpuset_mems: cpuset_mems
        blkio_weight_device:
        - Path: Path
          Weight: 9
        - Path: Path
          Weight: 9
        memory_limit: 3
        cpu_quota: 7
        InfraConfig:
          Networks:
          - Networks
          - Networks
          cpuset_cpus: cpuset_cpus
          DNSOption:
          - DNSOption
          - DNSOption
          PortBindings:
            key:
            - HostIp: HostIp
              HostPort: HostPort
            - HostIp: HostIp
              HostPort: HostPort
          HostNetwork: true
          cpu_period: 0
          pid_ns: pid_ns
          HostAdd:
          - HostAdd
          - HostAdd
          NoManageResolvConf: true
          uts_ns: uts_ns
          NetworkOptions:
            key:
            - NetworkOptions
            - NetworkOptions
          NoManageHosts: true
          DNSServer:
          - DNSServer
          - DNSServer
          StaticIP: StaticIP
          userns: userns
          DNSSearch:
          - DNSSearch
          - DNSSearch
          StaticMAC: StaticMAC
          cpu_quota: 6
        CreateCommand:
        - CreateCommand
        - CreateCommand
        devices:
        - CgroupPermissions: CgroupPermissions
          PathInContainer: PathInContainer
          PathOnHost: PathOnHost
        - CgroupPermissions: CgroupPermissions
          PathInContainer: PathInContainer
          PathOnHost: PathOnHost
        CreateCgroup: true
        Hostname: Hostname
        mounts:
        - Destination: Destination
          Options:
          - Options
          - Options
          SubPath: SubPath
          Type: Type
          Propagation: Propagation
          RW: true
          Mode: Mode
          Driver: Driver
          Source: Source
          Name: Name
        - Destination: Destination
          Options:
          - Options
          - Options
          SubPath: SubPath
          Type: Type
          Propagation: Propagation
          RW: true
          Mode: Mode
          Driver: Driver
          Source: Source
          Name: Name
        Labels:
          key: Labels
        RestartPolicy: RestartPolicy
        cpu_period: 2
        Namespace: Namespace
        NumContainers: 5
        CgroupParent: CgroupParent
        ExitPolicy: ExitPolicy
        LockNumber: 1
        CgroupPath: CgroupPath
        State: State
        device_write_bps:
        - Path: Path
          Rate: 4
        - Path: Path
          Rate: 4
        Id: Id
        volumes_from:
        - volumes_from
        - volumes_from
        InfraContainerID: InfraContainerID
        cpu_shares: 9
      properties:
        CgroupParent:
          description: CgroupParent is the parent of the pod's Cgroup.
          type: string
        CgroupPath:
          description: CgroupPath is the path to the pod's Cgroup.
          type: string
        Containers:
          description: |-
            Containers gives a brief summary of all containers in the pod and
            their current status.
          items:
            $ref: "#/components/schemas/InspectPodContainerInfo"
          type: array
        CreateCgroup:
          description: |-
            CreateCgroup is whether this pod will create its own Cgroup to group
            containers under.
          type: boolean
        CreateCommand:
          description: |-
            CreateCommand is the full command plus arguments of the process the
            container has been created with.
          items:
            type: string
          type: array
        CreateInfra:
          description: |-
            CreateInfra is whether this pod will create an infra container to
            share namespaces.
          type: boolean
        Created:
          description: Created is the time when the pod was created.
          format: date-time
          type: string
        ExitPolicy:
          description: ExitPolicy of the pod.
          type: string
        Hostname:
          description: Hostname is the hostname that the pod will set.
          type: string
        Id:
          description: ID is the ID of the pod.
          type: string
          x-go-name: ID
        InfraConfig:
          $ref: "#/components/schemas/InspectPodInfraConfig"
        InfraContainerID:
          description: |-
            InfraContainerID is the ID of the pod's infra container, if one is
            present.
          type: string
        Labels:
          additionalProperties:
            type: string
          description: |-
            Labels is a set of key-value labels that have been applied to the
            pod.
          type: object
        LockNumber:
          description: Number of the pod's Libpod lock.
          format: uint32
          type: integer
        Name:
          description: Name is the name of the pod.
          type: string
        Namespace:
          description: Namespace is the Libpod namespace the pod is placed in.
          type: string
        NumContainers:
          description: |-
            NumContainers is the number of containers in the pod, including the
            infra container.
          format: uint64
          type: integer
        RestartPolicy:
          description: RestartPolicy of the pod.
          type: string
        SharedNamespaces:
          description: |-
            SharedNamespaces contains a list of namespaces that will be shared by
            containers within the pod. Can only be set if CreateInfra is true.
          items:
            type: string
          type: array
        State:
          description: State represents the current state of the pod.
          type: string
        blkio_weight:
          description: BlkioWeight contains the blkio weight limit for the pod
          format: uint64
          type: integer
          x-go-name: BlkioWeight
        blkio_weight_device:
          description: BlkioWeightDevice contains the blkio weight device limits for
            the pod
          items:
            $ref: "#/components/schemas/InspectBlkioWeightDevice"
          type: array
          x-go-name: BlkioWeightDevice
        cpu_period:
          description: CPUPeriod contains the CPU period of the pod
          format: uint64
          type: integer
          x-go-name: CPUPeriod
        cpu_quota:
          description: CPUQuota contains the CPU quota of the pod
          format: int64
          type: integer
          x-go-name: CPUQuota
        cpu_shares:
          description: CPUShares contains the cpu shares for the pod
          format: uint64
          type: integer
          x-go-name: CPUShares
        cpuset_cpus:
          description: CPUSetCPUs contains linux specific CPU data for the pod
          type: string
          x-go-name: CPUSetCPUs
        cpuset_mems:
          description: CPUSetMems contains linux specific CPU data for the pod
          type: string
          x-go-name: CPUSetMems
        device_read_bps:
          description: BlkioDeviceReadBps contains the Read/Access limit for the pod's
            devices
          items:
            $ref: "#/components/schemas/InspectBlkioThrottleDevice"
          type: array
          x-go-name: BlkioDeviceReadBps
        device_write_bps:
          description: BlkioDeviceReadBps contains the Read/Access limit for the pod's
            devices
          items:
            $ref: "#/components/schemas/InspectBlkioThrottleDevice"
          type: array
          x-go-name: BlkioDeviceWriteBps
        devices:
          description: Devices contains the specified host devices
          items:
            $ref: "#/components/schemas/InspectDevice"
          type: array
          x-go-name: Devices
        memory_limit:
          description: MemoryLimit contains the specified cgroup memory limit for
            the pod
          format: uint64
          type: integer
          x-go-name: MemoryLimit
        memory_swap:
          description: MemorySwap contains the specified memory swap limit for the
            pod
          format: uint64
          type: integer
          x-go-name: MemorySwap
        mounts:
          description: Mounts contains volume related information for the pod
          items:
            $ref: "#/components/schemas/InspectMount"
          type: array
          x-go-name: Mounts
        security_opt:
          description: SecurityOpt contains the specified security labels and related
            SELinux information
          items:
            type: string
          type: array
          x-go-name: SecurityOpts
        volumes_from:
          description: VolumesFrom contains the containers that the pod inherits mounts
            from
          items:
            type: string
          type: array
          x-go-name: VolumesFrom
      type: object
      x-go-package: github.com/containers/podman/v5/libpod/define
    InspectPodInfraConfig:
      description: |-
        InspectPodInfraConfig contains the configuration of the pod's infra
        container.
      example:
        Networks:
        - Networks
        - Networks
        cpuset_cpus: cpuset_cpus
        DNSOption:
        - DNSOption
        - DNSOption
        PortBindings:
          key:
          - HostIp: HostIp
            HostPort: HostPort
          - HostIp: HostIp
            HostPort: HostPort
        HostNetwork: true
        cpu_period: 0
        pid_ns: pid_ns
        HostAdd:
        - HostAdd
        - HostAdd
        NoManageResolvConf: true
        uts_ns: uts_ns
        NetworkOptions:
          key:
          - NetworkOptions
          - NetworkOptions
        NoManageHosts: true
        DNSServer:
        - DNSServer
        - DNSServer
        StaticIP: StaticIP
        userns: userns
        DNSSearch:
        - DNSSearch
        - DNSSearch
        StaticMAC: StaticMAC
        cpu_quota: 6
      properties:
        DNSOption:
          description: |-
            DNSOption is a set of DNS options that will be used by the infra
            container's resolv.conf and shared with the remainder of the pod.
          items:
            type: string
          type: array
        DNSSearch:
          description: |-
            DNSSearch is a set of DNS search domains that will be used by the
            infra container's resolv.conf and shared with the remainder of the
            pod.
          items:
            type: string
          type: array
        DNSServer:
          description: |-
            DNSServer is a set of DNS Servers that will be used by the infra
            container's resolv.conf and shared with the remainder of the pod.
          items:
            type: string
          type: array
        HostAdd:
          description: |-
            HostAdd adds a number of hosts to the infra container's resolv.conf
            which will be shared with the rest of the pod.
          items:
            type: string
          type: array
        HostNetwork:
          description: |-
            HostNetwork is whether the infra container (and thus the whole pod)
            will use the host's network and not create a network namespace.
          type: boolean
        NetworkOptions:
          additionalProperties:
            items:
              type: string
            type: array
          description: NetworkOptions are additional options for each network
          type: object
        Networks:
          description: Networks is a list of networks the pod will join.
          items:
            type: string
          type: array
        NoManageHosts:
          description: |-
            NoManageHosts indicates that the pod will not manage /etc/hosts and
            instead each container will handle their own.
          type: boolean
        NoManageResolvConf:
          description: |-
            NoManageResolvConf indicates that the pod will not manage resolv.conf
            and instead each container will handle their own.
          type: boolean
        PortBindings:
          additionalProperties:
            items:
              $ref: "#/components/schemas/InspectHostPort"
            type: array
          description: |-
            PortBindings are ports that will be forwarded to the infra container
            and then shared with the pod.
          type: object
        StaticIP:
          description: |-
            StaticIP is a static IPv4 that will be assigned to the infra
            container and then used by the pod.
          format: ipv4
          type: string
        StaticMAC:
          description: |-
            StaticMAC is a static MAC address that will be assigned to the infra
            container and then used by the pod.
          type: string
        cpu_period:
          description: CPUPeriod contains the CPU period of the pod
          format: uint64
          type: integer
          x-go-name: CPUPeriod
        cpu_quota:
          description: CPUQuota contains the CPU quota of the pod
          format: int64
          type: integer
          x-go-name: CPUQuota
        cpuset_cpus:
          description: CPUSetCPUs contains linux specific CPU data for the container
          type: string
          x-go-name: CPUSetCPUs
        pid_ns:
          description: Pid is the PID namespace mode of the pod's infra container
          type: string
          x-go-name: PidNS
        userns:
          description: UserNS is the usernamespace that all the containers in the
            pod will join.
          type: string
          x-go-name: UserNS
        uts_ns:
          description: UtsNS is the uts namespace that all containers in the pod will
            join
          type: string
          x-go-name: UtsNS
      type: object
      x-go-package: github.com/containers/podman/v5/libpod/define
    InspectRestartPolicy:
      example:
        MaximumRetryCount: 0
        Name: Name
      properties:
        MaximumRetryCount:
          description: |-
            MaximumRetryCount is the maximum number of retries allowed if the
            "on-failure" restart policy is in use. Not used if "on-failure" is
            not set.
          format: uint64
          type: integer
        Name:
          description: |-
            Name contains the container's restart policy.
            Allowable values are "no" or "" (take no action),
            "on-failure" (restart on non-zero exit code, with an optional max
            retry count), and "always" (always restart on container stop, unless
            explicitly requested by API).
            Note that this is NOT actually a name of any sort - the poor naming
            is for Docker compatibility.
          type: string
      title: InspectRestartPolicy holds information about the container's restart
        policy.
      type: object
      x-go-package: github.com/containers/podman/v5/libpod/define
    InspectSecret:
      description: InspectSecret contains information on secrets mounted inside the
        container
      example:
        UID: 2
        GID: 9
        Mode: 3
        ID: ID
        Name: Name
      properties:
        GID:
          description: ID is the GID of the mounted secret file
          format: uint32
          type: integer
        ID:
          description: ID is the ID of the secret
          type: string
        Mode:
          description: ID is the ID of the mode of the mounted secret file
          format: uint32
          type: integer
        Name:
          description: Name is the name of the secret
          type: string
        UID:
          description: ID is the UID of the mounted secret file
          format: uint32
          type: integer
      type: object
      x-go-package: github.com/containers/podman/v5/libpod/define
    InspectUlimit:
      example:
        Hard: 8
        Soft: 7
        Name: Name
      properties:
        Hard:
          description: Hard is the hard limit that will be applied.
          format: int64
          type: integer
        Name:
          description: Name is the name (type) of the ulimit.
          type: string
        Soft:
          description: Soft is the soft limit that will be applied.
          format: int64
          type: integer
      title: InspectUlimit is a ulimit that will be applied to the container.
      type: object
      x-go-package: github.com/containers/podman/v5/libpod/define
    IpcMode:
      title: IpcMode represents the container ipc stack.
      type: string
      x-go-package: github.com/docker/docker/api/types/container
    Isolation:
      description: |-
        Isolation represents the isolation technology of a container. The supported
        values are platform specific
      type: string
      x-go-package: github.com/docker/docker/api/types/container
    LeaseRange:
      example:
        start_ip: start_ip
        end_ip: end_ip
      properties:
        end_ip:
          description: EndIP last IP in the subnet which should be used to assign
            ips.
          format: string
          type: string
          x-go-name: EndIP
        start_ip:
          description: StartIP first IP in the subnet which should be used to assign
            ips.
          format: string
          type: string
          x-go-name: StartIP
      title: LeaseRange contains the range where IP are leased.
      type: object
      x-go-package: github.com/containers/common/libnetwork/types
    LibpodContainersRmReport:
      example:
        Err: Err
        Id: Id
      properties:
        Err:
          description: |-
            Error which occurred during Rm operation (if any).
            This field is optional and may be omitted if no error occurred.
          nullable: true
          type: string
          x-omitempty: true
          x-go-name: RmError
        Id:
          type: string
          x-go-name: ID
      type: object
      x-go-package: github.com/containers/podman/v5/pkg/api/handlers
    LibpodImageSummary:
      example:
        ParentId: ParentId
        ReadOnly: true
        RepoDigests:
        - RepoDigests
        - RepoDigests
        VirtualSize: 5
        Os: Os
        Digest: Digest
        Size: 5
        Containers: 0
        Arch: Arch
        Labels:
          key: Labels
        History:
        - History
        - History
        Created: 6
        Names:
        - Names
        - Names
        SharedSize: 1
        Dangling: true
        RepoTags:
        - RepoTags
        - RepoTags
        IsManifestList: true
        Id: Id
      properties:
        Arch:
          description: Podman extensions
          type: string
        Containers:
          format: int64
          type: integer
        Created:
          format: int64
          type: integer
        Dangling:
          type: boolean
        Digest:
          type: string
        History:
          items:
            type: string
          type: array
        Id:
          type: string
          x-go-name: ID
        IsManifestList:
          description: |-
            IsManifestList is a ptr so we can distinguish between a true
            json empty response and false.  the docker compat side needs to return
            empty; where as the libpod side needs a value of true or false
          type: boolean
        Labels:
          additionalProperties:
            type: string
          type: object
        Names:
          items:
            type: string
          type: array
        Os:
          type: string
        ParentId:
          type: string
        ReadOnly:
          type: boolean
        RepoDigests:
          items:
            type: string
          type: array
        RepoTags:
          items:
            type: string
          type: array
        SharedSize:
          format: int64
          type: integer
        Size:
          format: int64
          type: integer
        VirtualSize:
          format: int64
          type: integer
      type: object
      x-go-name: ImageSummary
      x-go-package: github.com/containers/podman/v5/pkg/domain/entities/types
    LibpodImagesPullReport:
      example:
        images:
        - images
        - images
        stream: stream
        id: id
        error: error
      properties:
        error:
          description: Error contains text of errors from c/image
          type: string
          x-go-name: Error
        id:
          description: ID contains image id (retained for backwards compatibility)
          type: string
          x-go-name: ID
        images:
          description: Images contains the ID's of the images pulled
          items:
            type: string
          type: array
          x-go-name: Images
        stream:
          description: Stream used to provide output from c/image
          type: string
          x-go-name: Stream
      type: object
      x-go-package: github.com/containers/podman/v5/pkg/api/handlers
    LibpodImagesRemoveReport:
      description: |-
        LibpodImagesRemoveReport is the return type for image removal via the rest
        api.
      example:
        Errors:
        - Errors
        - Errors
        ExitCode: 0
        Deleted:
        - Deleted
        - Deleted
        Untagged:
        - Untagged
        - Untagged
      properties:
        Deleted:
          description: Deleted images.
          items:
            type: string
          type: array
        Errors:
          description: Image removal requires is to return data and an error.
          items:
            type: string
          type: array
        ExitCode:
          description: |-
            ExitCode describes the exit codes as described in the `podman rmi`
            man page.
          format: int64
          type: integer
        Untagged:
          description: Untagged images. Can be longer than Deleted.
          items:
            type: string
          type: array
      type: object
      x-go-package: github.com/containers/podman/v5/pkg/api/handlers
    LibpodInfo:
      description: |-
        Info is the overall struct that describes the host system
        running libpod/podman
      example:
        plugins:
          authorization:
          - authorization
          - authorization
          volume:
          - volume
          - volume
          log:
          - log
          - log
          network:
          - network
          - network
        host:
          networkBackend: networkBackend
          freeLocks: 5
          remoteSocket:
            path: path
            exists: true
          distribution:
            codename: codename
            variant: variant
            distribution: distribution
            version: version
          networkBackendInfo:
            path: path
            package: package
            dns:
              path: path
              package: package
              version: version
            backend: backend
            version: version
          hostname: hostname
          security:
            capabilities: capabilities
            rootless: true
            selinuxEnabled: true
            seccompProfilePath: seccompProfilePath
            apparmorEnabled: true
            seccompEnabled: true
          ociRuntime:
            path: path
            package: package
            name: name
            version: version
          pasta:
            package: package
            version: version
            executable: executable
          variant: variant
          runtimeInfo:
            key: "{}"
          slirp4netns:
            package: package
            version: version
            executable: executable
          cpuUtilization:
            userPercent: 1.4658129805029452
            systemPercent: 6.027456183070403
            idlePercent: 0.8008281904610115
          swapFree: 9
          rootlessNetworkCmd: rootlessNetworkCmd
          memFree: 2
          buildahVersion: buildahVersion
          linkmode: linkmode
          os: os
          cpus: 5
          kernel: kernel
          memTotal: 7
          logDriver: logDriver
          cgroupControllers:
          - cgroupControllers
          - cgroupControllers
          swapTotal: 3
          idMappings:
            uidmap:
            - size: 4
              container_id: 3
              host_id: 2
            - size: 4
              container_id: 3
              host_id: 2
            gidmap:
            - size: 4
              container_id: 3
              host_id: 2
            - size: 4
              container_id: 3
              host_id: 2
          eventLogger: eventLogger
          uptime: uptime
          cgroupVersion: cgroupVersion
          cgroupManager: cgroupManager
          databaseBackend: databaseBackend
          conmon:
            path: path
            package: package
            version: version
          serviceIsRemote: true
          arch: arch
        registries:
          key: "{}"
        store:
          graphStatus:
            key: graphStatus
          imageCopyTmpDir: imageCopyTmpDir
          graphDriverName: graphDriverName
          volumePath: volumePath
          transientStore: true
          runRoot: runRoot
          configFile: configFile
          containerStore:
            running: 7
            number: 2
            paused: 4
            stopped: 1
          graphRootAllocated: 1
          graphRoot: graphRoot
          graphOptions:
            key: "{}"
          imageStore:
            number: 6
          graphRootUsed: 1
        version:
          Index: 7
      properties:
        host:
          $ref: "#/components/schemas/HostInfo"
        plugins:
          $ref: "#/components/schemas/Plugins"
        registries:
          additionalProperties:
            type: object
          type: object
          x-go-name: Registries
        store:
          $ref: "#/components/schemas/StoreInfo"
        version:
          $ref: "#/components/schemas/Version"
      type: object
      x-go-name: Info
      x-go-package: github.com/containers/podman/v5/libpod/define
    LinuxBlockIO:
      description: LinuxBlockIO for Linux cgroup 'blkio' resource management
      example:
        throttleWriteBpsDevice:
        - major: 6
          minor: 1
          rate: 5
        - major: 6
          minor: 1
          rate: 5
        throttleReadBpsDevice:
        - major: 6
          minor: 1
          rate: 5
        - major: 6
          minor: 1
          rate: 5
        leafWeight: 0
        weight: 5
        weightDevice:
        - major: 7
          minor: 9
          leafWeight: 2
          weight: 3
        - major: 7
          minor: 9
          leafWeight: 2
          weight: 3
        throttleWriteIOPSDevice:
        - major: 6
          minor: 1
          rate: 5
        - major: 6
          minor: 1
          rate: 5
        throttleReadIOPSDevice:
        - major: 6
          minor: 1
          rate: 5
        - major: 6
          minor: 1
          rate: 5
      properties:
        leafWeight:
          description: "Specifies tasks' weight in the given cgroup while competing\
            \ with the cgroup's child cgroups, CFQ scheduler only"
          format: uint16
          type: integer
          x-go-name: LeafWeight
        throttleReadBpsDevice:
          description: "IO read rate limit per cgroup per device, bytes per second"
          items:
            $ref: "#/components/schemas/LinuxThrottleDevice"
          type: array
          x-go-name: ThrottleReadBpsDevice
        throttleReadIOPSDevice:
          description: "IO read rate limit per cgroup per device, IO per second"
          items:
            $ref: "#/components/schemas/LinuxThrottleDevice"
          type: array
          x-go-name: ThrottleReadIOPSDevice
        throttleWriteBpsDevice:
          description: "IO write rate limit per cgroup per device, bytes per second"
          items:
            $ref: "#/components/schemas/LinuxThrottleDevice"
          type: array
          x-go-name: ThrottleWriteBpsDevice
        throttleWriteIOPSDevice:
          description: "IO write rate limit per cgroup per device, IO per second"
          items:
            $ref: "#/components/schemas/LinuxThrottleDevice"
          type: array
          x-go-name: ThrottleWriteIOPSDevice
        weight:
          description: Specifies per cgroup weight
          format: uint16
          type: integer
          x-go-name: Weight
        weightDevice:
          description: "Weight per cgroup per device, can override BlkioWeight"
          items:
            $ref: "#/components/schemas/LinuxWeightDevice"
          type: array
          x-go-name: WeightDevice
      type: object
      x-go-package: github.com/opencontainers/runtime-spec/specs-go
    LinuxBlockIODevice:
      description: LinuxBlockIODevice holds major:minor format supported in blkio
        cgroup
      properties:
        major:
          description: Major is the device's major number.
          format: int64
          type: integer
          x-go-name: Major
        minor:
          description: Minor is the device's minor number.
          format: int64
          type: integer
          x-go-name: Minor
      type: object
      x-go-package: github.com/opencontainers/runtime-spec/specs-go
    LinuxCPU:
      description: LinuxCPU for Linux cgroup 'cpu' resource management
      example:
        shares: 6
        period: 7
        cpus: cpus
        idle: 4
        quota: 1
        burst: 2
        realtimePeriod: 1
        realtimeRuntime: 1
        mems: mems
      properties:
        burst:
          description: |-
            CPU hardcap burst limit (in usecs). Allowed accumulated cpu time additionally for burst in a
            given period.
          format: uint64
          type: integer
          x-go-name: Burst
        cpus:
          description: CPUs to use within the cpuset. Default is to use any CPU available.
          type: string
          x-go-name: Cpus
        idle:
          description: "cgroups are configured with minimum weight, 0: default behavior,\
            \ 1: SCHED_IDLE."
          format: int64
          type: integer
          x-go-name: Idle
        mems:
          description: List of memory nodes in the cpuset. Default is to use any available
            memory node.
          type: string
          x-go-name: Mems
        period:
          description: CPU period to be used for hardcapping (in usecs).
          format: uint64
          type: integer
          x-go-name: Period
        quota:
          description: CPU hardcap limit (in usecs). Allowed cpu time in a given period.
          format: int64
          type: integer
          x-go-name: Quota
        realtimePeriod:
          description: CPU period to be used for realtime scheduling (in usecs).
          format: uint64
          type: integer
          x-go-name: RealtimePeriod
        realtimeRuntime:
          description: How much time realtime scheduling may use (in usecs).
          format: int64
          type: integer
          x-go-name: RealtimeRuntime
        shares:
          description: CPU shares (relative weight (ratio) vs. other cgroups with
            cpu shares).
          format: uint64
          type: integer
          x-go-name: Shares
      type: object
      x-go-package: github.com/opencontainers/runtime-spec/specs-go
    LinuxDevice:
      description: LinuxDevice represents the mknod information for a Linux special
        device file
      example:
        path: path
        uid: 5
        gid: 6
        major: 1
        minor: 5
        fileMode: 0
        type: type
      properties:
        fileMode:
          description: |-
            The bits have the same definition on all systems, so that
            information about files can be moved from one system
            to another portably. Not all bits apply to all systems.
            The only required bit is [ModeDir] for directories.
          format: uint32
          title: A FileMode represents a file's mode and permission bits.
          type: integer
          x-go-package: io/fs
        gid:
          description: Gid of the device.
          format: uint32
          type: integer
          x-go-name: GID
        major:
          description: Major is the device's major number.
          format: int64
          type: integer
          x-go-name: Major
        minor:
          description: Minor is the device's minor number.
          format: int64
          type: integer
          x-go-name: Minor
        path:
          description: Path to the device.
          type: string
          x-go-name: Path
        type:
          description: "Device type, block, char, etc."
          type: string
          x-go-name: Type
        uid:
          description: UID of the device.
          format: uint32
          type: integer
          x-go-name: UID
      type: object
      x-go-package: github.com/opencontainers/runtime-spec/specs-go
    LinuxDeviceCgroup:
      description: |-
        LinuxDeviceCgroup represents a device rule for the devices specified to
        the device controller
      example:
        allow: true
        access: access
        major: 7
        minor: 1
        type: type
      properties:
        access:
          description: "Cgroup access permissions format, rwm."
          type: string
          x-go-name: Access
        allow:
          description: Allow or deny
          type: boolean
          x-go-name: Allow
        major:
          description: Major is the device's major number.
          format: int64
          type: integer
          x-go-name: Major
        minor:
          description: Minor is the device's minor number.
          format: int64
          type: integer
          x-go-name: Minor
        type:
          description: "Device type, block, char, etc."
          type: string
          x-go-name: Type
      type: object
      x-go-package: github.com/opencontainers/runtime-spec/specs-go
    LinuxHugepageLimit:
      description: Default to reservation limits if supported. Otherwise fallback
        to page fault limits.
      example:
        limit: 4
        pageSize: pageSize
      properties:
        limit:
          description: Limit is the limit of "hugepagesize" hugetlb reservations (if
            supported) or usage.
          format: uint64
          type: integer
          x-go-name: Limit
        pageSize:
          description: |-
            Pagesize is the hugepage size.
            Format: "<size><unit-prefix>B' (e.g. 64KB, 2MB, 1GB, etc.).
          type: string
          x-go-name: Pagesize
      title: LinuxHugepageLimit structure corresponds to limiting kernel hugepages.
      type: object
      x-go-package: github.com/opencontainers/runtime-spec/specs-go
    LinuxIDMapping:
      description: LinuxIDMapping specifies UID/GID mappings
      properties:
        containerID:
          description: ContainerID is the starting UID/GID in the container
          format: uint32
          type: integer
          x-go-name: ContainerID
        hostID:
          description: HostID is the starting UID/GID on the host to be mapped to
            'ContainerID'
          format: uint32
          type: integer
          x-go-name: HostID
        size:
          description: Size is the number of IDs to be mapped
          format: uint32
          type: integer
          x-go-name: Size
      type: object
      x-go-package: github.com/opencontainers/runtime-spec/specs-go
    LinuxIntelRdt:
      description: |-
        LinuxIntelRdt has container runtime resource constraints for Intel RDT CAT and MBA
        features and flags enabling Intel RDT CMT and MBM features.
        Intel RDT features are available in Linux 4.14 and newer kernel versions.
      example:
        l3CacheSchema: l3CacheSchema
        enableMBM: true
        closID: closID
        memBwSchema: memBwSchema
        enableCMT: true
      properties:
        closID:
          description: The identity for RDT Class of Service
          type: string
          x-go-name: ClosID
        enableCMT:
          description: |-
            EnableCMT is the flag to indicate if the Intel RDT CMT is enabled. CMT (Cache Monitoring Technology) supports monitoring of
            the last-level cache (LLC) occupancy for the container.
          type: boolean
          x-go-name: EnableCMT
        enableMBM:
          description: |-
            EnableMBM is the flag to indicate if the Intel RDT MBM is enabled. MBM (Memory Bandwidth Monitoring) supports monitoring of
            total and local memory bandwidth for the container.
          type: boolean
          x-go-name: EnableMBM
        l3CacheSchema:
          description: |-
            The schema for L3 cache id and capacity bitmask (CBM)
            Format: "L3:<cache_id0>=<cbm0>;<cache_id1>=<cbm1>;..."
          type: string
          x-go-name: L3CacheSchema
        memBwSchema:
          description: |-
            The schema of memory bandwidth per L3 cache id
            Format: "MB:<cache_id0>=bandwidth0;<cache_id1>=bandwidth1;..."
            The unit of memory bandwidth is specified in "percentages" by
            default, and in "MBps" if MBA Software Controller is enabled.
          type: string
          x-go-name: MemBwSchema
      type: object
      x-go-package: github.com/opencontainers/runtime-spec/specs-go
    LinuxInterfacePriority:
      description: LinuxInterfacePriority for network interfaces
      example:
        name: name
        priority: 3
      properties:
        name:
          description: Name is the name of the network interface
          type: string
          x-go-name: Name
        priority:
          description: Priority for the interface
          format: uint32
          type: integer
          x-go-name: Priority
      type: object
      x-go-package: github.com/opencontainers/runtime-spec/specs-go
    LinuxMemory:
      description: LinuxMemory for Linux cgroup 'memory' resource management
      example:
        swappiness: 9
        checkBeforeUpdate: true
        swap: 8
        useHierarchy: true
        kernel: 5
        disableOOMKiller: true
        limit: 9
        reservation: 6
        kernelTCP: 9
      properties:
        checkBeforeUpdate:
          description: |-
            CheckBeforeUpdate enables checking if a new memory limit is lower
            than the current usage during update, and if so, rejecting the new
            limit.
          type: boolean
          x-go-name: CheckBeforeUpdate
        disableOOMKiller:
          description: DisableOOMKiller disables the OOM killer for out of memory
            conditions
          type: boolean
          x-go-name: DisableOOMKiller
        kernel:
          description: |-
            Kernel memory limit (in bytes).

            Deprecated: kernel-memory limits are not supported in cgroups v2, and
            were obsoleted in [kernel v5.4]. This field should no longer be used,
            as it may be ignored by runtimes.

            [kernel v5.4]: https://github.com/torvalds/linux/commit/0158115f702b0ba208ab0
          format: int64
          type: integer
          x-go-name: Kernel
        kernelTCP:
          description: Kernel memory limit for tcp (in bytes)
          format: int64
          type: integer
          x-go-name: KernelTCP
        limit:
          description: Memory limit (in bytes).
          format: int64
          type: integer
          x-go-name: Limit
        reservation:
          description: Memory reservation or soft_limit (in bytes).
          format: int64
          type: integer
          x-go-name: Reservation
        swap:
          description: Total memory limit (memory + swap).
          format: int64
          type: integer
          x-go-name: Swap
        swappiness:
          description: How aggressive the kernel will swap memory pages.
          format: uint64
          type: integer
          x-go-name: Swappiness
        useHierarchy:
          description: Enables hierarchical memory accounting
          type: boolean
          x-go-name: UseHierarchy
      type: object
      x-go-package: github.com/opencontainers/runtime-spec/specs-go
    LinuxNetwork:
      description: LinuxNetwork identification and priority configuration
      example:
        classID: 6
        priorities:
        - name: name
          priority: 3
        - name: name
          priority: 3
      properties:
        classID:
          description: Set class identifier for container's network packets
          format: uint32
          type: integer
          x-go-name: ClassID
        priorities:
          description: Set priority of network traffic for container
          items:
            $ref: "#/components/schemas/LinuxInterfacePriority"
          type: array
          x-go-name: Priorities
      type: object
      x-go-package: github.com/opencontainers/runtime-spec/specs-go
    LinuxPersonality:
      description: LinuxPersonality represents the Linux personality syscall input
      example:
        domain: domain
        flags:
        - null
        - null
      properties:
        domain:
          title: LinuxPersonalityDomain refers to a personality domain.
          type: string
          x-go-package: github.com/opencontainers/runtime-spec/specs-go
        flags:
          description: Additional flags
          items:
            $ref: "#/components/schemas/LinuxPersonalityFlag"
          type: array
          x-go-name: Flags
      type: object
      x-go-package: github.com/opencontainers/runtime-spec/specs-go
    LinuxPersonalityDomain:
      title: LinuxPersonalityDomain refers to a personality domain.
      type: string
      x-go-package: github.com/opencontainers/runtime-spec/specs-go
    LinuxPersonalityFlag:
      title: LinuxPersonalityFlag refers to an additional personality flag. None are
        currently defined.
      type: string
      x-go-package: github.com/opencontainers/runtime-spec/specs-go
    LinuxPids:
      description: LinuxPids for Linux cgroup 'pids' resource management (Linux 4.3)
      example:
        limit: 6
      properties:
        limit:
          description: Maximum number of PIDs. Default is "no limit".
          format: int64
          type: integer
          x-go-name: Limit
      type: object
      x-go-package: github.com/opencontainers/runtime-spec/specs-go
    LinuxRdma:
      description: LinuxRdma for Linux cgroup 'rdma' resource management (Linux 4.11)
      example:
        hcaObjects: 2
        hcaHandles: 1
      properties:
        hcaHandles:
          description: Maximum number of HCA handles that can be opened. Default is
            "no limit".
          format: uint32
          type: integer
          x-go-name: HcaHandles
        hcaObjects:
          description: Maximum number of HCA objects that can be created. Default
            is "no limit".
          format: uint32
          type: integer
          x-go-name: HcaObjects
      type: object
      x-go-package: github.com/opencontainers/runtime-spec/specs-go
    LinuxResources:
      description: LinuxResources has container runtime resource constraints
      example:
        memory:
          swappiness: 9
          checkBeforeUpdate: true
          swap: 8
          useHierarchy: true
          kernel: 5
          disableOOMKiller: true
          limit: 9
          reservation: 6
          kernelTCP: 9
        rdma:
          key:
            hcaObjects: 2
            hcaHandles: 1
        devices:
        - allow: true
          access: access
          major: 7
          minor: 1
          type: type
        - allow: true
          access: access
          major: 7
          minor: 1
          type: type
        unified:
          key: unified
        cpu:
          shares: 6
          period: 7
          cpus: cpus
          idle: 4
          quota: 1
          burst: 2
          realtimePeriod: 1
          realtimeRuntime: 1
          mems: mems
        blockIO:
          throttleWriteBpsDevice:
          - major: 6
            minor: 1
            rate: 5
          - major: 6
            minor: 1
            rate: 5
          throttleReadBpsDevice:
          - major: 6
            minor: 1
            rate: 5
          - major: 6
            minor: 1
            rate: 5
          leafWeight: 0
          weight: 5
          weightDevice:
          - major: 7
            minor: 9
            leafWeight: 2
            weight: 3
          - major: 7
            minor: 9
            leafWeight: 2
            weight: 3
          throttleWriteIOPSDevice:
          - major: 6
            minor: 1
            rate: 5
          - major: 6
            minor: 1
            rate: 5
          throttleReadIOPSDevice:
          - major: 6
            minor: 1
            rate: 5
          - major: 6
            minor: 1
            rate: 5
        hugepageLimits:
        - limit: 4
          pageSize: pageSize
        - limit: 4
          pageSize: pageSize
        pids:
          limit: 6
        network:
          classID: 6
          priorities:
          - name: name
            priority: 3
          - name: name
            priority: 3
      properties:
        blockIO:
          $ref: "#/components/schemas/LinuxBlockIO"
        cpu:
          $ref: "#/components/schemas/LinuxCPU"
        devices:
          description: Devices configures the device allowlist.
          items:
            $ref: "#/components/schemas/LinuxDeviceCgroup"
          type: array
          x-go-name: Devices
        hugepageLimits:
          description: Hugetlb limits (in bytes). Default to reservation limits if
            supported.
          items:
            $ref: "#/components/schemas/LinuxHugepageLimit"
          type: array
          x-go-name: HugepageLimits
        memory:
          $ref: "#/components/schemas/LinuxMemory"
        network:
          $ref: "#/components/schemas/LinuxNetwork"
        pids:
          $ref: "#/components/schemas/LinuxPids"
        rdma:
          additionalProperties:
            $ref: "#/components/schemas/LinuxRdma"
          description: |-
            Rdma resource restriction configuration.
            Limits are a set of key value pairs that define RDMA resource limits,
            where the key is device name and value is resource limits.
          type: object
          x-go-name: Rdma
        unified:
          additionalProperties:
            type: string
          description: Unified resources.
          type: object
          x-go-name: Unified
      type: object
      x-go-package: github.com/opencontainers/runtime-spec/specs-go
    LinuxThrottleDevice:
      description: LinuxThrottleDevice struct holds a `major:minor rate_per_second`
        pair
      example:
        major: 6
        minor: 1
        rate: 5
      properties:
        major:
          description: Major is the device's major number.
          format: int64
          type: integer
          x-go-name: Major
        minor:
          description: Minor is the device's minor number.
          format: int64
          type: integer
          x-go-name: Minor
        rate:
          description: Rate is the IO rate limit per cgroup per device
          format: uint64
          type: integer
          x-go-name: Rate
      type: object
      x-go-package: github.com/opencontainers/runtime-spec/specs-go
    LinuxWeightDevice:
      description: LinuxWeightDevice struct holds a `major:minor weight` pair for
        weightDevice
      example:
        major: 7
        minor: 9
        leafWeight: 2
        weight: 3
      properties:
        leafWeight:
          description: "LeafWeight is the bandwidth rate for the device while competing\
            \ with the cgroup's child cgroups, CFQ scheduler only"
          format: uint16
          type: integer
          x-go-name: LeafWeight
        major:
          description: Major is the device's major number.
          format: int64
          type: integer
          x-go-name: Major
        minor:
          description: Minor is the device's minor number.
          format: int64
          type: integer
          x-go-name: Minor
        weight:
          description: Weight is the bandwidth rate for the device.
          format: uint16
          type: integer
          x-go-name: Weight
      type: object
      x-go-package: github.com/opencontainers/runtime-spec/specs-go
    ListContainer:
      description: ListContainer describes a container suitable for listing
      example:
        Namespaces:
          Mnt: Mnt
          User: User
          Uts: Uts
          Pidns: Pidns
          Cgroup: Cgroup
          Net: Net
          Ipc: Ipc
        Networks:
        - Networks
        - Networks
        Size:
          rootFsSize: 5
          rwSize: 2
        CreatedAt: CreatedAt
        ExitCode: 0
        CIDFile: CIDFile
        AutoRemove: true
        Image: Image
        Created: 2000-01-23T04:56:07.000+00:00
        Names:
        - Names
        - Names
        PodName: PodName
        Exited: true
        Status: Status
        Mounts:
        - Mounts
        - Mounts
        Pod: Pod
        Restarts: 5
        Ports:
        - container_port: 6
          host_ip: host_ip
          protocol: protocol
          host_port: 7
          range: 1
        - container_port: 6
          host_ip: host_ip
          protocol: protocol
          host_port: 7
          range: 1
        Labels:
          key: Labels
        Pid: 1
        ExitedAt: 6
        ExposedPorts: "{}"
        Command:
        - Command
        - Command
        State: State
        ImageID: ImageID
        IsInfra: true
        Id: Id
        StartedAt: 7
      properties:
        AutoRemove:
          description: AutoRemove
          type: boolean
        CIDFile:
          description: CIDFile specified at creation time.
          type: string
        Command:
          description: Container command
          items:
            type: string
          type: array
        Created:
          description: Container creation time
          format: date-time
          type: string
        CreatedAt:
          description: Human-readable container creation time.
          type: string
        ExitCode:
          description: "If container has exited, the return code from the command"
          format: int32
          type: integer
        Exited:
          description: If container has exited/stopped
          type: boolean
        ExitedAt:
          description: Time container exited
          format: int64
          type: integer
        ExposedPorts:
          description: |-
            ExposedPorts contains the ports that are exposed but not forwarded,
            see Ports for forwarded ports.
            The key is the port number and the string slice contains the protocols,
            i.e. "tcp", "udp" and "sctp".
          type: object
        Id:
          description: The unique identifier for the container
          type: string
          x-go-name: ID
        Image:
          description: Container image
          type: string
        ImageID:
          description: Container image ID
          type: string
        IsInfra:
          description: If this container is a Pod infra container
          type: boolean
        Labels:
          additionalProperties:
            type: string
          description: Labels for container
          type: object
        Mounts:
          description: User volume mounts
          items:
            type: string
          type: array
        Names:
          description: The names assigned to the container
          items:
            type: string
          type: array
        Namespaces:
          $ref: "#/components/schemas/ListContainerNamespaces"
        Networks:
          description: The network names assigned to the container
          items:
            type: string
          type: array
        Pid:
          description: The process id of the container
          format: int64
          type: integer
        Pod:
          description: |-
            If the container is part of Pod, the Pod ID. Requires the pod
            boolean to be set
          type: string
        PodName:
          description: |-
            If the container is part of Pod, the Pod name. Requires the pod
            boolean to be set
          type: string
        Ports:
          description: Port mappings
          items:
            $ref: "#/components/schemas/PortMapping"
          type: array
        Restarts:
          description: |-
            Restarts is how many times the container was restarted by its
            restart policy. This is NOT incremented by normal container restarts
            (only by restart policy).
          format: uint64
          type: integer
        Size:
          $ref: "#/components/schemas/ContainerSize"
        StartedAt:
          description: Time when container started
          format: int64
          type: integer
        State:
          description: State of container
          type: string
        Status:
          description: Status is a human-readable approximation of a duration for
            json output
          type: string
      type: object
      x-go-package: github.com/containers/podman/v5/pkg/domain/entities/types
    ListContainerNamespaces:
      description: ListContainerNamespaces contains the identifiers of the container's
        Linux namespaces
      example:
        Mnt: Mnt
        User: User
        Uts: Uts
        Pidns: Pidns
        Cgroup: Cgroup
        Net: Net
        Ipc: Ipc
      properties:
        Cgroup:
          description: Cgroup namespace
          type: string
        Ipc:
          description: IPC namespace
          type: string
          x-go-name: IPC
        Mnt:
          description: Mount namespace
          type: string
          x-go-name: MNT
        Net:
          description: Network namespace
          type: string
          x-go-name: NET
        Pidns:
          description: PID namespace
          type: string
          x-go-name: PIDNS
        User:
          description: User namespace
          type: string
        Uts:
          description: UTS namespace
          type: string
          x-go-name: UTS
      type: object
      x-go-package: github.com/containers/podman/v5/pkg/domain/entities/types
    ListPodContainer:
      example:
        Names: Names
        RestartCount: 0
        Status: Status
        Id: Id
      properties:
        Id:
          type: string
        Names:
          type: string
        RestartCount:
          format: uint64
          type: integer
        Status:
          type: string
      type: object
      x-go-package: github.com/containers/podman/v5/pkg/domain/entities/types
    ListPodsReport:
      example:
        Status: Status
        Networks:
        - Networks
        - Networks
        InfraId: InfraId
        Containers:
        - Names: Names
          RestartCount: 0
          Status: Status
          Id: Id
        - Names: Names
          RestartCount: 0
          Status: Status
          Id: Id
        Cgroup: Cgroup
        Labels:
          key: Labels
        Id: Id
        Namespace: Namespace
        Created: 2000-01-23T04:56:07.000+00:00
        Name: Name
      properties:
        Cgroup:
          type: string
        Containers:
          items:
            $ref: "#/components/schemas/ListPodContainer"
          type: array
        Created:
          format: date-time
          type: string
        Id:
          type: string
        InfraId:
          type: string
        Labels:
          additionalProperties:
            type: string
          type: object
        Name:
          type: string
        Namespace:
          type: string
        Networks:
          description: Network names connected to infra container
          items:
            type: string
          type: array
        Status:
          type: string
      type: object
      x-go-package: github.com/containers/podman/v5/pkg/domain/entities/types
    ListResponse:
      description: Volume list response
      example:
        Volumes:
        - Status:
            key: "{}"
          Options:
            key: Options
          Scope: Scope
          UsageData:
            RefCount: 5
            Size: 5
          CreatedAt: CreatedAt
          Driver: Driver
          Labels:
            key: Labels
          ClusterVolume:
            Version:
              Index: 7
            CreatedAt: 2000-01-23T04:56:07.000+00:00
            ID: ID
            Info:
              VolumeID: VolumeID
              VolumeContext:
                key: VolumeContext
              CapacityBytes: 0
              AccessibleTopology:
              - Segments:
                  key: Segments
              - Segments:
                  key: Segments
            Spec:
              Availability: Availability
              Group: Group
              Secrets:
              - Secret: Secret
                Key: Key
              - Secret: Secret
                Key: Key
              AccessMode:
                Scope: Scope
                Sharing: Sharing
                BlockVolume: "{}"
                MountVolume:
                  MountFlags:
                  - MountFlags
                  - MountFlags
                  FsType: FsType
              AccessibilityRequirements:
                Preferred:
                - Segments:
                    key: Segments
                - Segments:
                    key: Segments
                Requisite:
                - Segments:
                    key: Segments
                - Segments:
                    key: Segments
              CapacityRange:
                RequiredBytes: 1
                LimitBytes: 6
            UpdatedAt: 2000-01-23T04:56:07.000+00:00
            PublishStatus:
            - PublishContext:
                key: PublishContext
              State: State
              NodeID: NodeID
            - PublishContext:
                key: PublishContext
              State: State
              NodeID: NodeID
          Mountpoint: Mountpoint
          Name: Name
        - Status:
            key: "{}"
          Options:
            key: Options
          Scope: Scope
          UsageData:
            RefCount: 5
            Size: 5
          CreatedAt: CreatedAt
          Driver: Driver
          Labels:
            key: Labels
          ClusterVolume:
            Version:
              Index: 7
            CreatedAt: 2000-01-23T04:56:07.000+00:00
            ID: ID
            Info:
              VolumeID: VolumeID
              VolumeContext:
                key: VolumeContext
              CapacityBytes: 0
              AccessibleTopology:
              - Segments:
                  key: Segments
              - Segments:
                  key: Segments
            Spec:
              Availability: Availability
              Group: Group
              Secrets:
              - Secret: Secret
                Key: Key
              - Secret: Secret
                Key: Key
              AccessMode:
                Scope: Scope
                Sharing: Sharing
                BlockVolume: "{}"
                MountVolume:
                  MountFlags:
                  - MountFlags
                  - MountFlags
                  FsType: FsType
              AccessibilityRequirements:
                Preferred:
                - Segments:
                    key: Segments
                - Segments:
                    key: Segments
                Requisite:
                - Segments:
                    key: Segments
                - Segments:
                    key: Segments
              CapacityRange:
                RequiredBytes: 1
                LimitBytes: 6
            UpdatedAt: 2000-01-23T04:56:07.000+00:00
            PublishStatus:
            - PublishContext:
                key: PublishContext
              State: State
              NodeID: NodeID
            - PublishContext:
                key: PublishContext
              State: State
              NodeID: NodeID
          Mountpoint: Mountpoint
          Name: Name
        Warnings:
        - Warnings
        - Warnings
      properties:
        Volumes:
          description: List of volumes
          items:
            $ref: "#/components/schemas/Volume"
          type: array
        Warnings:
          description: Warnings that occurred when fetching the list of volumes.
          items:
            type: string
          type: array
      title: ListResponse VolumeListResponse
      type: object
      x-go-package: github.com/docker/docker/api/types/volume
    LogConfig:
      example:
        Type: Type
        Config:
          key: Config
      properties:
        Config:
          additionalProperties:
            type: string
          type: object
        Type:
          type: string
      title: LogConfig represents the logging configuration of the container.
      type: object
      x-go-package: github.com/docker/docker/api/types/container
    LogConfigLibpod:
      description: LogConfig describes the logging characteristics for a container
      example:
        path: path
        driver: driver
        size: 1
        options:
          key: options
      properties:
        driver:
          description: |-
            LogDriver is the container's log driver.
            Optional.
          type: string
          x-go-name: Driver
        options:
          additionalProperties:
            type: string
          description: |-
            A set of options to accompany the log driver.
            Optional.
          type: object
          x-go-name: Options
        path:
          description: |-
            LogPath is the path the container's logs will be stored at.
            Only available if LogDriver is set to "json-file" or "k8s-file".
            Optional.
          type: string
          x-go-name: Path
        size:
          description: |-
            Size is the maximum size of the log file
            Optional.
          format: int64
          type: integer
          x-go-name: Size
      type: object
      x-go-name: LogConfig
      x-go-package: github.com/containers/podman/v5/pkg/specgen
    MacAddress:
      $ref: "#/components/schemas/HardwareAddr"
    ManifestAddArtifactOptions:
      description: |-
        ManifestAddArtifactOptions provides the model for creating artifact manifests
        for files and adding those manifests to a manifest list
      properties:
        annotation:
          description: Annotation to add to the item in the manifest list
          items:
            type: string
          type: array
          x-go-name: Annotation
        annotations:
          additionalProperties:
            type: string
          description: Annotations to add to the item in the manifest list by a map
            which is preferred over Annotation
          type: object
          x-go-name: Annotations
        arch:
          description: Arch overrides the architecture for the item in the manifest
            list
          type: string
          x-go-name: Arch
        artifact_annotations:
          additionalProperties:
            type: string
          type: object
          x-go-name: Annotations
        artifact_config:
          type: string
          x-go-name: Config
        artifact_config_type:
          type: string
          x-go-name: ConfigType
        artifact_exclude_titles:
          type: boolean
          x-go-name: ExcludeTitles
        artifact_files:
          items:
            type: string
          type: array
          x-go-name: Files
        artifact_layer_type:
          type: string
          x-go-name: LayerType
        artifact_subject:
          type: string
          x-go-name: Subject
        artifact_type:
          description: "Note to future maintainers: keep these fields synchronized\
            \ with ManifestModifyOptions!"
          type: string
          x-go-name: Type
        features:
          description: Feature list for the item in the manifest list
          items:
            type: string
          type: array
          x-go-name: Features
        index_annotation:
          description: IndexAnnotation is a slice of key=value annotations to add
            to the manifest list itself
          items:
            type: string
          type: array
          x-go-name: IndexAnnotation
        index_annotations:
          additionalProperties:
            type: string
          description: "IndexAnnotations is a map of key:value annotations to add\
            \ to the manifest list itself, by a map which is preferred over IndexAnnotation"
          type: object
          x-go-name: IndexAnnotations
        os:
          description: OS overrides the operating system for the item in the manifest
            list
          type: string
          x-go-name: OS
        os_features:
          description: OS features for the item in the manifest list
          items:
            type: string
          type: array
          x-go-name: OSFeatures
        os_version:
          description: OSVersion overrides the operating system for the item in the
            manifest list
          type: string
          x-go-name: OSVersion
        subject:
          description: IndexSubject is a subject value to set in the manifest list
            itself
          type: string
          x-go-name: IndexSubject
        variant:
          description: Variant for the item in the manifest list
          type: string
          x-go-name: Variant
      type: object
      x-go-package: github.com/containers/podman/v5/pkg/domain/entities
    ManifestAddOptions:
      description: ManifestAddOptions provides model for adding digests to manifest
        list
      example:
        all: true
        annotation:
        - annotation
        - annotation
        os_features:
        - os_features
        - os_features
        images:
        - images
        - images
        index_annotations:
          key: index_annotations
        os: os
        subject: subject
        os_version: os_version
        annotations:
          key: annotations
        features:
        - features
        - features
        variant: variant
        arch: arch
        index_annotation:
        - index_annotation
        - index_annotation
      properties:
        all:
          description: True when operating on a list to include all images
          type: boolean
          x-go-name: All
        annotation:
          description: Annotation to add to the item in the manifest list
          items:
            type: string
          type: array
          x-go-name: Annotation
        annotations:
          additionalProperties:
            type: string
          description: Annotations to add to the item in the manifest list by a map
            which is preferred over Annotation
          type: object
          x-go-name: Annotations
        arch:
          description: Arch overrides the architecture for the item in the manifest
            list
          type: string
          x-go-name: Arch
        features:
          description: Feature list for the item in the manifest list
          items:
            type: string
          type: array
          x-go-name: Features
        images:
          description: Images is an optional list of image references to add to manifest
            list
          items:
            type: string
          type: array
          x-go-name: Images
        index_annotation:
          description: IndexAnnotation is a slice of key=value annotations to add
            to the manifest list itself
          items:
            type: string
          type: array
          x-go-name: IndexAnnotation
        index_annotations:
          additionalProperties:
            type: string
          description: "IndexAnnotations is a map of key:value annotations to add\
            \ to the manifest list itself, by a map which is preferred over IndexAnnotation"
          type: object
          x-go-name: IndexAnnotations
        os:
          description: OS overrides the operating system for the item in the manifest
            list
          type: string
          x-go-name: OS
        os_features:
          description: OS features for the item in the manifest list
          items:
            type: string
          type: array
          x-go-name: OSFeatures
        os_version:
          description: OSVersion overrides the operating system for the item in the
            manifest list
          type: string
          x-go-name: OSVersion
        subject:
          description: IndexSubject is a subject value to set in the manifest list
            itself
          type: string
          x-go-name: IndexSubject
        variant:
          description: Variant for the item in the manifest list
          type: string
          x-go-name: Variant
      type: object
      x-go-package: github.com/containers/podman/v5/pkg/domain/entities
    ManifestAnnotateOptions:
      description: ManifestAnnotateOptions provides model for annotating manifest
        list
      properties:
        annotation:
          description: Annotation to add to the item in the manifest list
          items:
            type: string
          type: array
          x-go-name: Annotation
        annotations:
          additionalProperties:
            type: string
          description: Annotations to add to the item in the manifest list by a map
            which is preferred over Annotation
          type: object
          x-go-name: Annotations
        arch:
          description: Arch overrides the architecture for the item in the manifest
            list
          type: string
          x-go-name: Arch
        features:
          description: Feature list for the item in the manifest list
          items:
            type: string
          type: array
          x-go-name: Features
        index_annotation:
          description: IndexAnnotation is a slice of key=value annotations to add
            to the manifest list itself
          items:
            type: string
          type: array
          x-go-name: IndexAnnotation
        index_annotations:
          additionalProperties:
            type: string
          description: "IndexAnnotations is a map of key:value annotations to add\
            \ to the manifest list itself, by a map which is preferred over IndexAnnotation"
          type: object
          x-go-name: IndexAnnotations
        os:
          description: OS overrides the operating system for the item in the manifest
            list
          type: string
          x-go-name: OS
        os_features:
          description: OS features for the item in the manifest list
          items:
            type: string
          type: array
          x-go-name: OSFeatures
        os_version:
          description: OSVersion overrides the operating system for the item in the
            manifest list
          type: string
          x-go-name: OSVersion
        subject:
          description: IndexSubject is a subject value to set in the manifest list
            itself
          type: string
          x-go-name: IndexSubject
        variant:
          description: Variant for the item in the manifest list
          type: string
          x-go-name: Variant
      type: object
      x-go-package: github.com/containers/podman/v5/pkg/domain/entities
    ManifestKind:
      type: string
      x-go-package: github.com/docker/docker/api/types/image
    ManifestModifyOptions:
      description: |-
        swagger 2.0 does not support oneOf for schema validation.

        Operation "update" uses all fields.
        Operation "remove" uses fields: Operation and Images
        Operation "annotate" uses fields: Operation and Annotations
      example:
        all: true
        annotation:
        - annotation
        - annotation
        artifact_annotations:
          key: artifact_annotations
        os_features:
        - os_features
        - os_features
        artifact_layer_type: artifact_layer_type
        images:
        - images
        - images
        artifact_type: artifact_type
        index_annotations:
          key: index_annotations
        os: os
        subject: subject
        os_version: os_version
        annotations:
          key: annotations
        artifact_exclude_titles: true
        artifact_config: artifact_config
        features:
        - features
        - features
        artifact_subject: artifact_subject
        variant: variant
        arch: arch
        artifact_files:
        - artifact_files
        - artifact_files
        operation: operation
        artifact_config_type: artifact_config_type
        index_annotation:
        - index_annotation
        - index_annotation
      properties:
        all:
          description: True when operating on a list to include all images
          type: boolean
          x-go-name: All
        annotation:
          description: Annotation to add to the item in the manifest list
          items:
            type: string
          type: array
          x-go-name: Annotation
        annotations:
          additionalProperties:
            type: string
          description: Annotations to add to the item in the manifest list by a map
            which is preferred over Annotation
          type: object
          x-go-name: Annotations
        arch:
          description: Arch overrides the architecture for the item in the manifest
            list
          type: string
          x-go-name: Arch
        artifact_annotations:
          additionalProperties:
            type: string
          type: object
          x-go-name: ArtifactAnnotations
        artifact_config:
          type: string
          x-go-name: ArtifactConfig
        artifact_config_type:
          type: string
          x-go-name: ArtifactConfigType
        artifact_exclude_titles:
          type: boolean
          x-go-name: ArtifactExcludeTitles
        artifact_files:
          items:
            type: string
          type: array
          x-go-name: ArtifactFiles
        artifact_layer_type:
          type: string
          x-go-name: ArtifactLayerType
        artifact_subject:
          type: string
          x-go-name: ArtifactSubject
        artifact_type:
          description: |-
            The following are all of the fields from ManifestAddArtifactOptions.
            We can't just embed the whole structure because it embeds a
            ManifestAnnotateOptions, which would conflict with the one that
            ManifestAddOptions embeds.
          type: string
          x-go-name: ArtifactType
        features:
          description: Feature list for the item in the manifest list
          items:
            type: string
          type: array
          x-go-name: Features
        images:
          description: Images is an optional list of image references to add to manifest
            list
          items:
            type: string
          type: array
          x-go-name: Images
        index_annotation:
          description: IndexAnnotation is a slice of key=value annotations to add
            to the manifest list itself
          items:
            type: string
          type: array
          x-go-name: IndexAnnotation
        index_annotations:
          additionalProperties:
            type: string
          description: "IndexAnnotations is a map of key:value annotations to add\
            \ to the manifest list itself, by a map which is preferred over IndexAnnotation"
          type: object
          x-go-name: IndexAnnotations
        operation:
          type: string
          x-go-name: Operation
        os:
          description: OS overrides the operating system for the item in the manifest
            list
          type: string
          x-go-name: OS
        os_features:
          description: OS features for the item in the manifest list
          items:
            type: string
          type: array
          x-go-name: OSFeatures
        os_version:
          description: OSVersion overrides the operating system for the item in the
            manifest list
          type: string
          x-go-name: OSVersion
        subject:
          description: IndexSubject is a subject value to set in the manifest list
            itself
          type: string
          x-go-name: IndexSubject
        variant:
          description: Variant for the item in the manifest list
          type: string
          x-go-name: Variant
      title: ManifestModifyOptions provides the model for mutating a manifest
      type: object
      x-go-package: github.com/containers/podman/v5/pkg/domain/entities
    ManifestModifyReport:
      example:
        images:
        - images
        - images
        files:
        - files
        - files
        Id: Id
        errors:
        - errors
        - errors
      properties:
        Id:
          description: Manifest List ID
          type: string
          x-go-name: ID
        errors:
          description: Errors associated with operation
          items:
            type: string
          type: array
          x-go-name: Errors
        files:
          description: "Files added to manifest list, otherwise not provided."
          items:
            type: string
          type: array
          x-go-name: Files
        images:
          description: "Images added to or removed from manifest list, otherwise not\
            \ provided."
          items:
            type: string
          type: array
          x-go-name: Images
      type: object
      x-go-package: github.com/containers/podman/v5/pkg/domain/entities/types
    ManifestPushReport:
      properties:
        Id:
          description: ID of the pushed manifest
          type: string
          x-go-name: ID
        error:
          description: Error contains text of errors from pushing
          type: string
          x-go-name: Error
        stream:
          description: Stream used to provide push progress
          type: string
          x-go-name: Stream
      type: object
      x-go-package: github.com/containers/podman/v5/pkg/domain/entities/types
    ManifestRemoveOptions:
      description: ManifestRemoveOptions provides the model for removing digests from
        a manifest
      type: object
      x-go-package: github.com/containers/podman/v5/pkg/domain/entities
    ManifestRemoveReport:
      properties:
        Deleted:
          description: Deleted manifest list.
          items:
            type: string
          type: array
        Errors:
          description: Errors associated with operation
          items:
            type: string
          type: array
        ExitCode:
          description: |-
            ExitCode describes the exit codes as described in the `podman rmi`
            man page.
          format: int64
          type: integer
        Untagged:
          description: Untagged images. Can be longer than Deleted.
          items:
            type: string
          type: array
      type: object
      x-go-package: github.com/containers/podman/v5/pkg/domain/entities/types
    ManifestSummary:
      example:
        AttestationData:
          For: For
        ImageData:
          Platform:
            os: os
            os.features:
            - os.features
            - os.features
            variant: variant
            architecture: architecture
            os.version: os.version
          Size:
            Unpacked: 5
          Containers:
          - Containers
          - Containers
        Size:
          Content: 2
          Total: 7
        Kind: Kind
        Descriptor:
          artifactType: artifactType
          urls:
          - urls
          - urls
          data:
          - 1
          - 1
          size: 5
          digest: digest
          annotations:
            key: annotations
          mediaType: mediaType
          platform:
            os: os
            os.features:
            - os.features
            - os.features
            variant: variant
            architecture: architecture
            os.version: os.version
        Available: true
        ID: ID
      properties:
        AttestationData:
          $ref: "#/components/schemas/AttestationProperties"
        Available:
          description: |-
            Indicates whether all the child content (image config, layers) is
            fully available locally
          type: boolean
        Descriptor:
          $ref: "#/components/schemas/Descriptor"
        ID:
          description: |-
            ID is the content-addressable ID of an image and is the same as the
            digest of the image manifest.
          type: string
        ImageData:
          $ref: "#/components/schemas/ImageProperties"
        Kind:
          type: string
          x-go-package: github.com/docker/docker/api/types/image
        Size:
          $ref: "#/components/schemas/ManifestSummary_Size"
      required:
      - Available
      - Descriptor
      - ID
      - Kind
      - Size
      type: object
      x-go-package: github.com/docker/docker/api/types/image
    Meta:
      properties:
        CreatedAt:
          format: date-time
          type: string
        UpdatedAt:
          format: date-time
          type: string
        Version:
          $ref: "#/components/schemas/Version"
      title: Meta is a base object inherited by most of the other once.
      type: object
      x-go-package: github.com/docker/docker/api/types/swarm
    Metadata:
      example:
        LastTagTime: 2000-01-23T04:56:07.000+00:00
      properties:
        LastTagTime:
          description: LastTagTime is the date and time at which the image was last
            tagged.
          format: date-time
          type: string
      title: Metadata contains engine-local data about the image.
      type: object
      x-go-package: github.com/docker/docker/api/types/image
    Mount:
      example:
        BindOptions:
          ReadOnlyForceRecursive: true
          NonRecursive: true
          Propagation: Propagation
          ReadOnlyNonRecursive: true
          CreateMountpoint: true
        ReadOnly: true
        Target: Target
        Type: Type
        VolumeOptions:
          NoCopy: true
          Subpath: Subpath
          DriverConfig:
            Options:
              key: Options
            Name: Name
          Labels:
            key: Labels
        Consistency: Consistency
        TmpfsOptions:
          Options:
          - - Options
            - Options
          - - Options
            - Options
          Mode: 3
          SizeBytes: 6
        Source: Source
        ClusterOptions: "{}"
      properties:
        BindOptions:
          $ref: "#/components/schemas/BindOptions"
        ClusterOptions:
          title: ClusterOptions specifies options for a Cluster volume.
          type: object
          x-go-package: github.com/docker/docker/api/types/mount
        Consistency:
          title: Consistency represents the consistency requirements of a mount.
          type: string
          x-go-package: github.com/docker/docker/api/types/mount
        ReadOnly:
          type: boolean
        Source:
          description: |-
            Source specifies the name of the mount. Depending on mount type, this
            may be a volume name or a host path, or even ignored.
            Source is not supported for tmpfs (must be an empty value)
          type: string
        Target:
          type: string
        TmpfsOptions:
          $ref: "#/components/schemas/TmpfsOptions"
        Type:
          title: Type represents the type of a mount.
          type: string
          x-go-package: github.com/docker/docker/api/types/mount
        VolumeOptions:
          $ref: "#/components/schemas/VolumeOptions"
      title: Mount represents a mount (volume).
      type: object
      x-go-package: github.com/docker/docker/api/types/mount
    MountPoint:
      description: This is used for reporting the mountpoints in use by a container.
      example:
        Destination: Destination
        Type: Type
        Propagation: Propagation
        RW: true
        Mode: Mode
        Driver: Driver
        Source: Source
        Name: Name
      properties:
        Destination:
          description: |-
            Destination is the path relative to the container root (`/`) where the
            Source is mounted inside the container.
          type: string
        Driver:
          description: Driver is the volume driver used to create the volume (if it
            is a volume).
          type: string
        Mode:
          description: |-
            Mode is a comma separated list of options supplied by the user when
            creating the bind/volume mount.

            The default is platform-specific (`"z"` on Linux, empty on Windows).
          type: string
        Name:
          description: |-
            Name is the name reference to the underlying data defined by `Source`
            e.g., the volume name.
          type: string
        Propagation:
          title: Propagation represents the propagation of a mount.
          type: string
          x-go-package: github.com/docker/docker/api/types/mount
        RW:
          description: RW indicates whether the mount is mounted writable (read-write).
          type: boolean
        Source:
          description: |-
            Source is the source location of the mount.

            For volumes, this contains the storage location of the volume (within
            `/var/lib/docker/volumes/`). For bind-mounts, and `npipe`, this contains
            the source (host) part of the bind-mount. For `tmpfs` mount points, this
            field is empty.
          type: string
        Type:
          title: Type represents the type of a mount.
          type: string
          x-go-package: github.com/docker/docker/api/types/mount
      title: MountPoint represents a mount point configuration inside the container.
      type: object
      x-go-package: github.com/docker/docker/api/types
    NamedVolume:
      description: |-
        NamedVolume holds information about a named volume that will be mounted into
        the container.
      example:
        Options:
        - Options
        - Options
        Dest: Dest
        SubPath: SubPath
        IsAnonymous: true
        Name: Name
      properties:
        Dest:
          description: |-
            Destination to mount the named volume within the container. Must be
            an absolute path. Path will be created if it does not exist.
          type: string
        IsAnonymous:
          description: |-
            IsAnonymous sets the named volume as anonymous even if it has a name
            This is used for emptyDir volumes from a kube yaml
          type: boolean
        Name:
          description: |-
            Name is the name of the named volume to be mounted. May be empty.
            If empty, a new named volume with a pseudorandomly generated name
            will be mounted at the given destination.
          type: string
        Options:
          description: Options are options that the named volume will be mounted with.
          items:
            type: string
          type: array
        SubPath:
          description: SubPath stores the sub directory of the named volume to be
            mounted in the container
          type: string
      type: object
      x-go-package: github.com/containers/podman/v5/pkg/specgen
    Namespace:
      description: Namespace describes the namespace
      example:
        nsmode: nsmode
        value: value
      properties:
        nsmode:
          type: string
          x-go-package: github.com/containers/podman/v5/pkg/specgen
        value:
          type: string
          x-go-name: Value
      type: object
      x-go-package: github.com/containers/podman/v5/pkg/specgen
    NamespaceMode:
      type: string
      x-go-package: github.com/containers/podman/v5/pkg/specgen
    NetAddress:
      example:
        ipnet:
          IP: IP
          Mask:
          - 0
          - 0
        gateway: gateway
      properties:
        gateway:
          description: "Gateway for the network. This can be empty if there is no\
            \ gateway, e.g. internal network."
          type: string
          x-go-name: Gateway
        ipnet:
          $ref: "#/components/schemas/IPNet"
      title: "NetAddress contains the ip address, subnet and gateway."
      type: object
      x-go-package: github.com/containers/common/libnetwork/types
    NetInterface:
      example:
        mac_address: mac_address
        subnets:
        - ipnet:
            IP: IP
            Mask:
            - 0
            - 0
          gateway: gateway
        - ipnet:
            IP: IP
            Mask:
            - 0
            - 0
          gateway: gateway
      properties:
        mac_address:
          description: MacAddress for this Interface.
          type: string
          x-go-name: MacAddress
        subnets:
          description: Subnets list of assigned subnets with their gateway.
          items:
            $ref: "#/components/schemas/NetAddress"
          type: array
          x-go-name: Subnets
      title: NetInterface contains the settings for a given network interface.
      type: object
      x-go-package: github.com/containers/common/libnetwork/types
    NetOptions:
      description: |-
        NetOptions reflect the shared network options between
        pods and containers
      properties:
        dns_option:
          items:
            type: string
          type: array
          x-go-name: DNSOptions
        dns_search:
          items:
            type: string
          type: array
          x-go-name: DNSSearch
        dns_server:
          items:
            type: string
          type: array
          x-go-name: DNSServers
        hostadd:
          items:
            type: string
          type: array
          x-go-name: AddHosts
        netns:
          $ref: "#/components/schemas/Namespace"
        network_alias:
          items:
            type: string
          type: array
          x-go-name: Aliases
        network_options:
          additionalProperties:
            items:
              type: string
            type: array
          description: NetworkOptions are additional options for each network
          type: object
          x-go-name: NetworkOptions
        networks:
          additionalProperties:
            $ref: "#/components/schemas/PerNetworkOptions"
          type: object
          x-go-name: Networks
        no_manage_hosts:
          type: boolean
          x-go-name: NoHosts
        no_manage_resolv_conf:
          type: boolean
          x-go-name: UseImageResolvConf
        portmappings:
          items:
            $ref: "#/components/schemas/PortMapping"
          type: array
          x-go-name: PublishPorts
      type: object
      x-go-package: github.com/containers/podman/v5/pkg/domain/entities
    Network:
      example:
        internal: true
        created: 2000-01-23T04:56:07.000+00:00
        dns_enabled: true
        ipam_options:
          key: ipam_options
        labels:
          key: labels
        network_interface: network_interface
        routes:
        - metric: 6
          destination: destination
          gateway: gateway
        - metric: 6
          destination: destination
          gateway: gateway
        driver: driver
        name: name
        options:
          key: options
        ipv6_enabled: true
        subnets:
        - subnet: subnet
          lease_range:
            start_ip: start_ip
            end_ip: end_ip
          gateway: gateway
        - subnet: subnet
          lease_range:
            start_ip: start_ip
            end_ip: end_ip
          gateway: gateway
        id: id
        network_dns_servers:
        - network_dns_servers
        - network_dns_servers
      properties:
        created:
          description: Created contains the timestamp when this network was created.
          format: date-time
          type: string
          x-go-name: Created
        dns_enabled:
          description: |-
            DNSEnabled is whether name resolution is active for container on
            this Network. Only supported with the bridge driver.
          type: boolean
          x-go-name: DNSEnabled
        driver:
          description: "Driver for this Network, e.g. bridge, macvlan..."
          type: string
          x-go-name: Driver
        id:
          description: ID of the Network.
          type: string
          x-go-name: ID
        internal:
          description: |-
            Internal is whether the Network should not have external routes
            to public or other Networks.
          type: boolean
          x-go-name: Internal
        ipam_options:
          additionalProperties:
            type: string
          description: IPAMOptions contains options used for the ip assignment.
          type: object
          x-go-name: IPAMOptions
        ipv6_enabled:
          description: IPv6Enabled if set to true an ipv6 subnet should be created
            for this net.
          type: boolean
          x-go-name: IPv6Enabled
        labels:
          additionalProperties:
            type: string
          description: |-
            Labels is a set of key-value labels that have been applied to the
            Network.
          type: object
          x-go-name: Labels
        name:
          description: Name of the Network.
          type: string
          x-go-name: Name
        network_dns_servers:
          description: |-
            List of custom DNS server for podman's DNS resolver at network level,
            all the containers attached to this network will consider resolvers
            configured at network level.
          items:
            type: string
          type: array
          x-go-name: NetworkDNSServers
        network_interface:
          description: NetworkInterface is the network interface name on the host.
          type: string
          x-go-name: NetworkInterface
        options:
          additionalProperties:
            type: string
          description: |-
            Options is a set of key-value options that have been applied to
            the Network.
          type: object
          x-go-name: Options
        routes:
          description: Routes to use for this network.
          items:
            $ref: "#/components/schemas/Route"
          type: array
          x-go-name: Routes
        subnets:
          description: Subnets to use for this network.
          items:
            $ref: "#/components/schemas/Subnet"
          type: array
          x-go-name: Subnets
      title: Network describes the Network attributes.
      type: object
      x-go-package: github.com/containers/common/libnetwork/types
    NetworkBackend:
      type: string
      x-go-package: github.com/containers/common/libnetwork/types
    NetworkConnectOptions:
      description: |-
        NetworkConnectOptions describes options for connecting
        a container to a network
      example:
        container: container
        aliases:
        - aliases
        - aliases
        interface_name: interface_name
        options:
          key: options
        static_ips:
        - static_ips
        - static_ips
        static_mac: static_mac
      properties:
        aliases:
          description: |-
            Aliases contains a list of names which the dns server should resolve
            to this container. Should only be set when DNSEnabled is true on the Network.
            If aliases are set but there is no dns support for this network the
            network interface implementation should ignore this and NOT error.
            Optional.
          items:
            type: string
          type: array
          x-go-name: Aliases
        container:
          type: string
          x-go-name: Container
        interface_name:
          description: |-
            InterfaceName for this container. Required in the backend.
            Optional in the frontend. Will be filled with ethX (where X is a integer) when empty.
          type: string
          x-go-name: InterfaceName
        options:
          additionalProperties:
            type: string
          description: Driver-specific options for this container.
          type: object
          x-go-name: Options
        static_ips:
          description: StaticIPs for this container. Optional.
          items:
            type: string
          type: array
          x-go-name: StaticIPs
        static_mac:
          description: StaticMac for this container. Optional.
          format: string
          type: string
          x-go-name: StaticMAC
      type: object
      x-go-package: github.com/containers/podman/v5/pkg/domain/entities/types
    NetworkContainerInfo:
      example:
        interfaces:
          key:
            mac_address: mac_address
            subnets:
            - ipnet:
                IP: IP
                Mask:
                - 0
                - 0
              gateway: gateway
            - ipnet:
                IP: IP
                Mask:
                - 0
                - 0
              gateway: gateway
        name: name
      properties:
        interfaces:
          additionalProperties:
            $ref: "#/components/schemas/NetInterface"
          description: Interfaces configured for this container with their addresses
          type: object
          x-go-name: Interfaces
        name:
          description: Name of the container
          type: string
          x-go-name: Name
      type: object
      x-go-package: github.com/containers/podman/v5/pkg/domain/entities/types
    NetworkInfo:
      example:
        path: path
        package: package
        dns:
          path: path
          package: package
          version: version
        backend: backend
        version: version
      properties:
        backend:
          type: string
          x-go-package: github.com/containers/common/libnetwork/types
        dns:
          $ref: "#/components/schemas/DNSNetworkInfo"
        package:
          type: string
          x-go-name: Package
        path:
          type: string
          x-go-name: Path
        version:
          type: string
          x-go-name: Version
      title: NetworkInfo contains the network information.
      type: object
      x-go-package: github.com/containers/common/libnetwork/types
    NetworkInspectReport:
      example:
        internal: true
        created: 2000-01-23T04:56:07.000+00:00
        dns_enabled: true
        ipam_options:
          key: ipam_options
        labels:
          key: labels
        network_interface: network_interface
        routes:
        - metric: 6
          destination: destination
          gateway: gateway
        - metric: 6
          destination: destination
          gateway: gateway
        driver: driver
        name: name
        options:
          key: options
        containers:
          key:
            interfaces:
              key:
                mac_address: mac_address
                subnets:
                - ipnet:
                    IP: IP
                    Mask:
                    - 0
                    - 0
                  gateway: gateway
                - ipnet:
                    IP: IP
                    Mask:
                    - 0
                    - 0
                  gateway: gateway
            name: name
        ipv6_enabled: true
        subnets:
        - subnet: subnet
          lease_range:
            start_ip: start_ip
            end_ip: end_ip
          gateway: gateway
        - subnet: subnet
          lease_range:
            start_ip: start_ip
            end_ip: end_ip
          gateway: gateway
        id: id
        network_dns_servers:
        - network_dns_servers
        - network_dns_servers
      properties:
        containers:
          additionalProperties:
            $ref: "#/components/schemas/NetworkContainerInfo"
          type: object
          x-go-name: Containers
        created:
          description: Created contains the timestamp when this network was created.
          format: date-time
          type: string
          x-go-name: Created
        dns_enabled:
          description: |-
            DNSEnabled is whether name resolution is active for container on
            this Network. Only supported with the bridge driver.
          type: boolean
          x-go-name: DNSEnabled
        driver:
          description: "Driver for this Network, e.g. bridge, macvlan..."
          type: string
          x-go-name: Driver
        id:
          description: ID of the Network.
          type: string
          x-go-name: ID
        internal:
          description: |-
            Internal is whether the Network should not have external routes
            to public or other Networks.
          type: boolean
          x-go-name: Internal
        ipam_options:
          additionalProperties:
            type: string
          description: IPAMOptions contains options used for the ip assignment.
          type: object
          x-go-name: IPAMOptions
        ipv6_enabled:
          description: IPv6Enabled if set to true an ipv6 subnet should be created
            for this net.
          type: boolean
          x-go-name: IPv6Enabled
        labels:
          additionalProperties:
            type: string
          description: |-
            Labels is a set of key-value labels that have been applied to the
            Network.
          type: object
          x-go-name: Labels
        name:
          description: Name of the Network.
          type: string
          x-go-name: Name
        network_dns_servers:
          description: |-
            List of custom DNS server for podman's DNS resolver at network level,
            all the containers attached to this network will consider resolvers
            configured at network level.
          items:
            type: string
          type: array
          x-go-name: NetworkDNSServers
        network_interface:
          description: NetworkInterface is the network interface name on the host.
          type: string
          x-go-name: NetworkInterface
        options:
          additionalProperties:
            type: string
          description: |-
            Options is a set of key-value options that have been applied to
            the Network.
          type: object
          x-go-name: Options
        routes:
          description: Routes to use for this network.
          items:
            $ref: "#/components/schemas/Route"
          type: array
          x-go-name: Routes
        subnets:
          description: Subnets to use for this network.
          items:
            $ref: "#/components/schemas/Subnet"
          type: array
          x-go-name: Subnets
      type: object
      x-go-package: github.com/containers/podman/v5/pkg/domain/entities/types
    NetworkMode:
      title: NetworkMode represents the container network stack.
      type: string
      x-go-package: github.com/docker/docker/api/types/container
    NetworkPruneReport:
      description: |-
        NetworkPruneReport containers the name of network and an error
        associated in its pruning (removal)
      example:
        Error: Error
        Name: Name
      properties:
        Error:
          type: string
        Name:
          type: string
      type: object
      x-go-package: github.com/containers/podman/v5/pkg/domain/entities/types
    NetworkRmReport:
      description: NetworkRmReport describes the results of network removal
      example:
        Err: Err
        Name: Name
      properties:
        Err:
          type: string
        Name:
          type: string
      type: object
      x-go-package: github.com/containers/podman/v5/pkg/domain/entities/types
    NetworkSettings:
      description: NetworkSettings exposes the network settings in the api
      example:
        HairpinMode: true
        Networks:
          key:
            GlobalIPv6Address: GlobalIPv6Address
            GlobalIPv6PrefixLen: 7
            IPPrefixLen: 6
            Aliases:
            - Aliases
            - Aliases
            MacAddress: MacAddress
            NetworkID: NetworkID
            DNSNames:
            - DNSNames
            - DNSNames
            IPAMConfig:
              LinkLocalIPs:
              - LinkLocalIPs
              - LinkLocalIPs
              IPv6Address: IPv6Address
              IPv4Address: IPv4Address
            DriverOpts:
              key: DriverOpts
            Gateway: Gateway
            EndpointID: EndpointID
            Links:
            - Links
            - Links
            IPv6Gateway: IPv6Gateway
            IPAddress: IPAddress
        SandboxKey: SandboxKey
        GlobalIPv6Address: GlobalIPv6Address
        Ports:
          key:
          - HostIp: HostIp
            HostPort: HostPort
          - HostIp: HostIp
            HostPort: HostPort
        GlobalIPv6PrefixLen: 3
        IPPrefixLen: 7
        MacAddress: MacAddress
        SandboxID: SandboxID
        LinkLocalIPv6Address: LinkLocalIPv6Address
        LinkLocalIPv6PrefixLen: 0
        Gateway: Gateway
        EndpointID: EndpointID
        SecondaryIPv6Addresses:
        - PrefixLength: 0
          Addr: Addr
        - PrefixLength: 0
          Addr: Addr
        IPv6Gateway: IPv6Gateway
        SecondaryIPAddresses:
        - PrefixLength: 0
          Addr: Addr
        - PrefixLength: 0
          Addr: Addr
        IPAddress: IPAddress
        Bridge: Bridge
      properties:
        Bridge:
          type: string
        EndpointID:
          type: string
        Gateway:
          type: string
        GlobalIPv6Address:
          type: string
        GlobalIPv6PrefixLen:
          format: int64
          type: integer
        HairpinMode:
          description: |-
            HairpinMode specifies if hairpin NAT should be enabled on the virtual interface

            Deprecated: This field is never set and will be removed in a future release.
          type: boolean
        IPAddress:
          type: string
        IPPrefixLen:
          format: int64
          type: integer
        IPv6Gateway:
          type: string
        LinkLocalIPv6Address:
          description: |-
            LinkLocalIPv6Address is an IPv6 unicast address using the link-local prefix

            Deprecated: This field is never set and will be removed in a future release.
          type: string
        LinkLocalIPv6PrefixLen:
          description: |-
            LinkLocalIPv6PrefixLen is the prefix length of an IPv6 unicast address

            Deprecated: This field is never set and will be removed in a future release.
          format: int64
          type: integer
        MacAddress:
          type: string
        Networks:
          additionalProperties:
            $ref: "#/components/schemas/EndpointSettings"
          type: object
        Ports:
          additionalProperties:
            items:
              $ref: "#/components/schemas/PortBinding"
            type: array
          description: PortMap is a collection of PortBinding indexed by Port
          type: object
          x-go-package: github.com/docker/go-connections/nat
        SandboxID:
          type: string
        SandboxKey:
          type: string
        SecondaryIPAddresses:
          items:
            $ref: "#/components/schemas/Address"
          type: array
        SecondaryIPv6Addresses:
          items:
            $ref: "#/components/schemas/Address"
          type: array
      type: object
      x-go-package: github.com/docker/docker/api/types
    NetworkUpdateOptions:
      description: NetworkUpdateOptions describes options to update a network
      example:
        removednsservers:
        - removednsservers
        - removednsservers
        adddnsservers:
        - adddnsservers
        - adddnsservers
      properties:
        adddnsservers:
          items:
            type: string
          type: array
          x-go-name: AddDNSServers
        removednsservers:
          items:
            type: string
          type: array
          x-go-name: RemoveDNSServers
      type: object
      x-go-package: github.com/containers/podman/v5/pkg/domain/entities
    NetworkingConfig:
      description: |-
        NetworkingConfig represents the container's networking configuration for each of its interfaces
        Carries the networking configs specified in the `docker run` and `docker network connect` commands
      example:
        EndpointsConfig:
          key:
            GlobalIPv6Address: GlobalIPv6Address
            GlobalIPv6PrefixLen: 7
            IPPrefixLen: 6
            Aliases:
            - Aliases
            - Aliases
            MacAddress: MacAddress
            NetworkID: NetworkID
            DNSNames:
            - DNSNames
            - DNSNames
            IPAMConfig:
              LinkLocalIPs:
              - LinkLocalIPs
              - LinkLocalIPs
              IPv6Address: IPv6Address
              IPv4Address: IPv4Address
            DriverOpts:
              key: DriverOpts
            Gateway: Gateway
            EndpointID: EndpointID
            Links:
            - Links
            - Links
            IPv6Gateway: IPv6Gateway
            IPAddress: IPAddress
      properties:
        EndpointsConfig:
          additionalProperties:
            $ref: "#/components/schemas/EndpointSettings"
          type: object
      type: object
      x-go-package: github.com/docker/docker/api/types/network
    OCIRuntimeInfo:
      description: |-
        OCIRuntimeInfo describes the runtime (crun or runc) being
        used with podman
      example:
        path: path
        package: package
        name: name
        version: version
      properties:
        name:
          type: string
          x-go-name: Name
        package:
          type: string
          x-go-name: Package
        path:
          type: string
          x-go-name: Path
        version:
          type: string
          x-go-name: Version
      type: object
      x-go-package: github.com/containers/podman/v5/libpod/define
    OverlayVolume:
      description: |-
        OverlayVolume holds information about an overlay volume that will be mounted into
        the container.
      example:
        destination: destination
        options:
        - options
        - options
        source: source
      properties:
        destination:
          description: Destination is the absolute path where the mount will be placed
            in the container.
          type: string
          x-go-name: Destination
        options:
          description: Options holds overlay volume options.
          items:
            type: string
          type: array
          x-go-name: Options
        source:
          description: Source specifies the source path of the mount.
          type: string
          x-go-name: Source
      type: object
      x-go-package: github.com/containers/podman/v5/pkg/specgen
    POSIXRlimit:
      description: POSIXRlimit type and restrictions
      example:
        hard: 4
        type: type
        soft: 5
      properties:
        hard:
          description: Hard is the hard limit for the specified type
          format: uint64
          type: integer
          x-go-name: Hard
        soft:
          description: Soft is the soft limit for the specified type
          format: uint64
          type: integer
          x-go-name: Soft
        type:
          description: Type of the rlimit to set
          type: string
          x-go-name: Type
      type: object
      x-go-package: github.com/opencontainers/runtime-spec/specs-go
    PastaInfo:
      description: PastaInfo describes the pasta executable that is being used
      example:
        package: package
        version: version
        executable: executable
      properties:
        executable:
          type: string
          x-go-name: Executable
        package:
          type: string
          x-go-name: Package
        version:
          type: string
          x-go-name: Version
      type: object
      x-go-package: github.com/containers/podman/v5/libpod/define
    PeerInfo:
      description: PeerInfo represents one peer of an overlay network
      example:
        IP: IP
        Name: Name
      properties:
        IP:
          type: string
        Name:
          type: string
      type: object
      x-go-package: github.com/docker/docker/api/types/network
    PerNetworkOptions:
      example:
        aliases:
        - aliases
        - aliases
        interface_name: interface_name
        options:
          key: options
        static_ips:
        - static_ips
        - static_ips
        static_mac: static_mac
      properties:
        aliases:
          description: |-
            Aliases contains a list of names which the dns server should resolve
            to this container. Should only be set when DNSEnabled is true on the Network.
            If aliases are set but there is no dns support for this network the
            network interface implementation should ignore this and NOT error.
            Optional.
          items:
            type: string
          type: array
          x-go-name: Aliases
        interface_name:
          description: |-
            InterfaceName for this container. Required in the backend.
            Optional in the frontend. Will be filled with ethX (where X is a integer) when empty.
          type: string
          x-go-name: InterfaceName
        options:
          additionalProperties:
            type: string
          description: Driver-specific options for this container.
          type: object
          x-go-name: Options
        static_ips:
          description: StaticIPs for this container. Optional.
          items:
            type: string
          type: array
          x-go-name: StaticIPs
        static_mac:
          description: StaticMac for this container. Optional.
          format: string
          type: string
          x-go-name: StaticMAC
      title: PerNetworkOptions are options which should be set on a per network basis.
      type: object
      x-go-package: github.com/containers/common/libnetwork/types
    PidMode:
      title: PidMode represents the pid namespace of the container.
      type: string
      x-go-package: github.com/docker/docker/api/types/container
    Platform:
      example:
        os: os
        os.features:
        - os.features
        - os.features
        variant: variant
        architecture: architecture
        os.version: os.version
      properties:
        architecture:
          description: |-
            Architecture field specifies the CPU architecture, for example
            `amd64` or `ppc64le`.
          type: string
          x-go-name: Architecture
        os:
          description: "OS specifies the operating system, for example `linux` or\
            \ `windows`."
          type: string
          x-go-name: OS
        os.features:
          description: |-
            OSFeatures is an optional field specifying an array of strings,
            each listing a required OS feature (for example on Windows `win32k`).
          items:
            type: string
          type: array
          x-go-name: OSFeatures
        os.version:
          description: |-
            OSVersion is an optional field specifying the operating system
            version, for example on Windows `10.0.14393.1066`.
          type: string
          x-go-name: OSVersion
        variant:
          description: |-
            Variant is an optional field specifying a variant of the CPU, for
            example `v7` to specify ARMv7 when architecture is `arm`.
          type: string
          x-go-name: Variant
      title: Platform describes the platform which the image in the manifest runs
        on.
      type: object
      x-go-package: github.com/opencontainers/image-spec/specs-go/v1
    PlayKubePod:
      example:
        InitContainers:
        - InitContainers
        - InitContainers
        ContainerErrors:
        - ContainerErrors
        - ContainerErrors
        Containers:
        - Containers
        - Containers
        ID: ID
        Logs:
        - Logs
        - Logs
      properties:
        ContainerErrors:
          description: |-
            ContainerErrors - any errors that occurred while starting containers
            in the pod.
          items:
            type: string
          type: array
        Containers:
          description: Containers - the IDs of the containers running in the created
            pod.
          items:
            type: string
          type: array
        ID:
          description: ID - ID of the pod created as a result of play kube.
          type: string
        InitContainers:
          description: InitContainers - the IDs of the init containers to be run in
            the created pod.
          items:
            type: string
          type: array
        Logs:
          description: Logs - non-fatal errors and log messages while processing.
          items:
            type: string
          type: array
      type: object
      x-go-package: github.com/containers/podman/v5/pkg/domain/entities/types
    PlayKubeReport:
      example:
        Volumes:
        - Name: Name
        - Name: Name
        Secrets:
        - CreateReport:
            ID: ID
        - CreateReport:
            ID: ID
        SecretRmReport:
        - Err: Err
          ID: ID
        - Err: Err
          ID: ID
        ExitCode: 0
        RmReport:
        - Err: Err
          RemovedCtrs:
            key: RemovedCtrs
          Id: Id
        - Err: Err
          RemovedCtrs:
            key: RemovedCtrs
          Id: Id
        Pods:
        - InitContainers:
          - InitContainers
          - InitContainers
          ContainerErrors:
          - ContainerErrors
          - ContainerErrors
          Containers:
          - Containers
          - Containers
          ID: ID
          Logs:
          - Logs
          - Logs
        - InitContainers:
          - InitContainers
          - InitContainers
          ContainerErrors:
          - ContainerErrors
          - ContainerErrors
          Containers:
          - Containers
          - Containers
          ID: ID
          Logs:
          - Logs
          - Logs
        StopReport:
        - RawInput: RawInput
          Id: Id
          Errs:
          - Errs
          - Errs
        - RawInput: RawInput
          Id: Id
          Errs:
          - Errs
          - Errs
        ServiceContainerID: ServiceContainerID
        VolumeRmReport:
        - Err: Err
          Id: Id
        - Err: Err
          Id: Id
      properties:
        ExitCode:
          description: "If set, exit with the specified exit code."
          format: int32
          type: integer
        Pods:
          description: Pods - pods created by play kube.
          items:
            $ref: "#/components/schemas/PlayKubePod"
          type: array
        RmReport:
          items:
            $ref: "#/components/schemas/PodRmReport"
          type: array
        SecretRmReport:
          items:
            $ref: "#/components/schemas/SecretRmReport"
          type: array
        Secrets:
          description: Secrets - secrets created by play kube
          items:
            $ref: "#/components/schemas/PlaySecret"
          type: array
        ServiceContainerID:
          description: ServiceContainerID - ID of the service container if one is
            created
          type: string
        StopReport:
          items:
            $ref: "#/components/schemas/PodStopReport"
          type: array
        VolumeRmReport:
          items:
            $ref: "#/components/schemas/VolumeRmReport"
          type: array
        Volumes:
          description: Volumes - volumes created by play kube.
          items:
            $ref: "#/components/schemas/PlayKubeVolume"
          type: array
      type: object
      x-go-package: github.com/containers/podman/v5/pkg/domain/entities/types
    PlayKubeVolume:
      example:
        Name: Name
      properties:
        Name:
          description: Name - Name of the volume created by play kube.
          type: string
      type: object
      x-go-package: github.com/containers/podman/v5/pkg/domain/entities/types
    PlaySecret:
      example:
        CreateReport:
          ID: ID
      properties:
        CreateReport:
          $ref: "#/components/schemas/SecretCreateReport"
      type: object
      x-go-package: github.com/containers/podman/v5/pkg/domain/entities/types
    Plugin:
      description: Plugin A plugin for the Engine API
      properties:
        Config:
          $ref: "#/components/schemas/PluginConfig"
        Enabled:
          description: "True if the plugin is running. False if the plugin is not\
            \ running, only installed."
          type: boolean
        Id:
          description: Id
          type: string
          x-go-name: ID
        Name:
          description: name
          type: string
        PluginReference:
          description: plugin remote reference used to push/pull the plugin
          type: string
        Settings:
          $ref: "#/components/schemas/PluginSettings"
      required:
      - Config
      - Enabled
      - Name
      - Settings
      type: object
      x-go-package: github.com/docker/docker/api/types
    PluginConfig:
      properties:
        Args:
          $ref: "#/components/schemas/PluginConfigArgs"
        Description:
          description: description
          type: string
        DockerVersion:
          description: Docker Version used to create the plugin
          type: string
        Documentation:
          description: documentation
          type: string
        Entrypoint:
          description: entrypoint
          items:
            type: string
          type: array
        Env:
          description: env
          items:
            $ref: "#/components/schemas/PluginEnv"
          type: array
        Interface:
          $ref: "#/components/schemas/PluginConfigInterface"
        IpcHost:
          description: ipc host
          type: boolean
        Linux:
          $ref: "#/components/schemas/PluginConfigLinux"
        Mounts:
          description: mounts
          items:
            $ref: "#/components/schemas/PluginMount"
          type: array
        Network:
          $ref: "#/components/schemas/PluginConfigNetwork"
        PidHost:
          description: pid host
          type: boolean
        PropagatedMount:
          description: propagated mount
          type: string
        User:
          $ref: "#/components/schemas/PluginConfigUser"
        WorkDir:
          description: work dir
          type: string
        rootfs:
          $ref: "#/components/schemas/PluginConfigRootfs"
      required:
      - Args
      - Description
      - Documentation
      - Entrypoint
      - Env
      - Interface
      - IpcHost
      - Linux
      - Mounts
      - Network
      - PidHost
      - PropagatedMount
      - WorkDir
      title: PluginConfig The config of a plugin.
      type: object
      x-go-package: github.com/docker/docker/api/types
    PluginConfigArgs:
      description: PluginConfigArgs plugin config args
      properties:
        Description:
          description: description
          type: string
        Name:
          description: name
          type: string
        Settable:
          description: settable
          items:
            type: string
          type: array
        Value:
          description: value
          items:
            type: string
          type: array
      required:
      - Description
      - Name
      - Settable
      - Value
      type: object
      x-go-package: github.com/docker/docker/api/types
    PluginConfigInterface:
      description: PluginConfigInterface The interface between Docker and the plugin
      properties:
        ProtocolScheme:
          description: Protocol to use for clients connecting to the plugin.
          type: string
        Socket:
          description: socket
          type: string
        Types:
          description: types
          items:
            $ref: "#/components/schemas/PluginInterfaceType"
          type: array
      required:
      - Socket
      - Types
      type: object
      x-go-package: github.com/docker/docker/api/types
    PluginConfigLinux:
      description: PluginConfigLinux plugin config linux
      properties:
        AllowAllDevices:
          description: allow all devices
          type: boolean
        Capabilities:
          description: capabilities
          items:
            type: string
          type: array
        Devices:
          description: devices
          items:
            $ref: "#/components/schemas/PluginDevice"
          type: array
      required:
      - AllowAllDevices
      - Capabilities
      - Devices
      type: object
      x-go-package: github.com/docker/docker/api/types
    PluginConfigNetwork:
      description: PluginConfigNetwork plugin config network
      properties:
        Type:
          description: type
          type: string
      required:
      - Type
      type: object
      x-go-package: github.com/docker/docker/api/types
    PluginConfigRootfs:
      description: PluginConfigRootfs plugin config rootfs
      properties:
        diff_ids:
          description: diff ids
          items:
            type: string
          type: array
          x-go-name: DiffIds
        type:
          description: type
          type: string
          x-go-name: Type
      type: object
      x-go-package: github.com/docker/docker/api/types
    PluginConfigUser:
      description: PluginConfigUser plugin config user
      properties:
        GID:
          description: g ID
          format: uint32
          type: integer
        UID:
          description: UID
          format: uint32
          type: integer
      type: object
      x-go-package: github.com/docker/docker/api/types
    PluginDevice:
      description: PluginDevice plugin device
      properties:
        Description:
          description: description
          type: string
        Name:
          description: name
          type: string
        Path:
          description: path
          type: string
        Settable:
          description: settable
          items:
            type: string
          type: array
      required:
      - Description
      - Name
      - Path
      - Settable
      type: object
      x-go-package: github.com/docker/docker/api/types
    PluginEnv:
      description: PluginEnv plugin env
      properties:
        Description:
          description: description
          type: string
        Name:
          description: name
          type: string
        Settable:
          description: settable
          items:
            type: string
          type: array
        Value:
          description: value
          type: string
      required:
      - Description
      - Name
      - Settable
      - Value
      type: object
      x-go-package: github.com/docker/docker/api/types
    PluginInterfaceType:
      description: PluginInterfaceType plugin interface type
      properties:
        Capability:
          description: capability
          type: string
        Prefix:
          description: prefix
          type: string
        Version:
          description: version
          type: string
      required:
      - Capability
      - Prefix
      - Version
      type: object
      x-go-package: github.com/docker/docker/api/types
    PluginMount:
      description: PluginMount plugin mount
      properties:
        Description:
          description: description
          type: string
        Destination:
          description: destination
          type: string
        Name:
          description: name
          type: string
        Options:
          description: options
          items:
            type: string
          type: array
        Settable:
          description: settable
          items:
            type: string
          type: array
        Source:
          description: source
          type: string
        Type:
          description: type
          type: string
      required:
      - Description
      - Destination
      - Name
      - Options
      - Settable
      - Source
      - Type
      type: object
      x-go-package: github.com/docker/docker/api/types
    PluginSettings:
      properties:
        Args:
          description: args
          items:
            type: string
          type: array
        Devices:
          description: devices
          items:
            $ref: "#/components/schemas/PluginDevice"
          type: array
        Env:
          description: env
          items:
            type: string
          type: array
        Mounts:
          description: mounts
          items:
            $ref: "#/components/schemas/PluginMount"
          type: array
      required:
      - Args
      - Devices
      - Env
      - Mounts
      title: PluginSettings Settings that can be modified by users.
      type: object
      x-go-package: github.com/docker/docker/api/types
    Plugins:
      example:
        authorization:
        - authorization
        - authorization
        volume:
        - volume
        - volume
        log:
        - log
        - log
        network:
        - network
        - network
      properties:
        authorization:
          description: "Authorization is provided for compatibility, will always be\
            \ nil as Podman has no daemon"
          items:
            type: string
          type: array
          x-go-name: Authorization
        log:
          items:
            type: string
          type: array
          x-go-name: Log
        network:
          items:
            type: string
          type: array
          x-go-name: Network
        volume:
          items:
            type: string
          type: array
          x-go-name: Volume
      type: object
      x-go-package: github.com/containers/podman/v5/libpod/define
    PodBasicConfig:
      properties:
        exit_policy:
          description: ExitPolicy determines the pod's exit and stop behaviour.
          type: string
          x-go-name: ExitPolicy
        hostname:
          description: |-
            Hostname is the pod's hostname. If not set, the name of the pod will
            be used (if a name was not provided here, the name auto-generated for
            the pod will be used). This will be used by the infra container and
            all containers in the pod as long as the UTS namespace is shared.
            Optional.
          type: string
          x-go-name: Hostname
        infra_command:
          description: |-
            InfraCommand sets the command that will be used to start the infra
            container.
            If not set, the default set in the Libpod configuration file will be
            used.
            Conflicts with NoInfra=true.
            Optional.
          items:
            type: string
          type: array
          x-go-name: InfraCommand
        infra_conmon_pid_file:
          description: |-
            InfraConmonPidFile is a custom path to store the infra container's
            conmon PID.
          type: string
          x-go-name: InfraConmonPidFile
        infra_image:
          description: |-
            InfraImage is the image that will be used for the infra container.
            If not set, the default set in the Libpod configuration file will be
            used.
            Conflicts with NoInfra=true.
            Optional.
          type: string
          x-go-name: InfraImage
        infra_name:
          description: |-
            InfraName is the name that will be used for the infra container.
            If not set, the default set in the Libpod configuration file will be
            used.
            Conflicts with NoInfra=true.
            Optional.
          type: string
          x-go-name: InfraName
        ipcns:
          $ref: "#/components/schemas/Namespace"
        labels:
          additionalProperties:
            type: string
          description: |-
            Labels are key-value pairs that are used to add metadata to pods.
            Optional.
          type: object
          x-go-name: Labels
        name:
          description: |-
            Name is the name of the pod.
            If not provided, a name will be generated when the pod is created.
            Optional.
          type: string
          x-go-name: Name
        no_infra:
          description: |-
            NoInfra tells the pod not to create an infra container. If this is
            done, many networking-related options will become unavailable.
            Conflicts with setting any options in PodNetworkConfig, and the
            InfraCommand and InfraImages in this struct.
            Optional.
          type: boolean
          x-go-name: NoInfra
        pidns:
          $ref: "#/components/schemas/Namespace"
        pod_create_command:
          items:
            type: string
          type: array
          x-go-name: PodCreateCommand
        pod_devices:
          description: Devices contains user specified Devices to be added to the
            Pod
          items:
            type: string
          type: array
          x-go-name: Devices
        restart_policy:
          description: |-
            RestartPolicy is the pod's restart policy - an action which
            will be taken when one or all the containers in the pod exits.
            If not given, the default policy will be set to Always, which
            restarts the containers in the pod when they exit indefinitely.
            Optional.
          type: string
          x-go-name: RestartPolicy
        restart_tries:
          description: |-
            RestartRetries is the number of attempts that will be made to restart
            the container.
            Only available when RestartPolicy is set to "on-failure".
            Optional.
          format: uint64
          type: integer
          x-go-name: RestartRetries
        share_parent:
          description: |-
            PodCreateCommand is the command used to create this pod.
            This will be shown in the output of Inspect() on the pod, and may
            also be used by some tools that wish to recreate the pod
            (e.g. `podman generate systemd --new`).
            Optional.
            ShareParent determines if all containers in the pod will share the pod's cgroup as the cgroup parent
          type: boolean
          x-go-name: ShareParent
        shared_namespaces:
          description: |-
            SharedNamespaces instructs the pod to share a set of namespaces.
            Shared namespaces will be joined (by default) by every container
            which joins the pod.
            If not set and NoInfra is false, the pod will set a default set of
            namespaces to share.
            Conflicts with NoInfra=true.
            Optional.
          items:
            type: string
          type: array
          x-go-name: SharedNamespaces
        sysctl:
          additionalProperties:
            type: string
          description: Sysctl sets kernel parameters for the pod
          type: object
          x-go-name: Sysctl
        userns:
          $ref: "#/components/schemas/Namespace"
        utsns:
          $ref: "#/components/schemas/Namespace"
      title: PodBasicConfig contains basic configuration options for pods.
      type: object
      x-go-package: github.com/containers/podman/v5/pkg/specgen
    PodCgroupConfig:
      description: This will be expanded in future updates to pods.
      properties:
        cgroup_parent:
          description: |-
            CgroupParent is the parent for the Cgroup that the pod will create.
            This pod cgroup will, in turn, be the default cgroup parent for all
            containers in the pod.
            Optional.
          type: string
          x-go-name: CgroupParent
      title: PodCgroupConfig contains configuration options about a pod's cgroups.
      type: object
      x-go-package: github.com/containers/podman/v5/pkg/specgen
    PodCreateOptions:
      description: The JSON tags below are made to match the respective field in ContainerCreateOptions
        for the purpose of mapping.
      properties:
        cgroup_parent:
          type: string
          x-go-name: CgroupParent
        container_command:
          type: string
          x-go-name: InfraCommand
        container_conmon_pidfile:
          type: string
          x-go-name: InfraConmonPidFile
        container_name:
          type: string
          x-go-name: InfraName
        cpus:
          format: double
          type: number
          x-go-name: Cpus
        cpuset_cpus:
          type: string
          x-go-name: CpusetCpus
        create_command:
          items:
            type: string
          type: array
          x-go-name: CreateCommand
        device_read_bps:
          items:
            type: string
          type: array
          x-go-name: DeviceReadBPs
        devices:
          items:
            type: string
          type: array
          x-go-name: Devices
        exit_policy:
          type: string
          x-go-name: ExitPolicy
        hostname:
          type: string
          x-go-name: Hostname
        infra:
          type: boolean
          x-go-name: Infra
        infra_image:
          type: string
          x-go-name: InfraImage
        ipc:
          type: string
          x-go-name: Ipc
        labels:
          additionalProperties:
            type: string
          type: object
          x-go-name: Labels
        name:
          type: string
          x-go-name: Name
        net:
          $ref: "#/components/schemas/NetOptions"
        pid:
          type: string
          x-go-name: Pid
        restart:
          type: string
          x-go-name: Restart
        security_opt:
          items:
            type: string
          type: array
          x-go-name: SecurityOpt
        share:
          items:
            type: string
          type: array
          x-go-name: Share
        share_parent:
          type: boolean
          x-go-name: ShareParent
        sysctl:
          items:
            type: string
          type: array
          x-go-name: Sysctl
        uts:
          type: string
          x-go-name: Uts
        volume:
          items:
            type: string
          type: array
          x-go-name: Volume
        volumes_from:
          items:
            type: string
          type: array
          x-go-name: VolumesFrom
      title: PodCreateOptions provides all possible options for creating a pod and
        its infra container.
      type: object
      x-go-package: github.com/containers/podman/v5/pkg/domain/entities
    PodKillReport:
      example:
        Id: Id
        Errs:
        - Errs
        - Errs
      properties:
        Errs:
          items:
            type: string
          type: array
        Id:
          type: string
      type: object
      x-go-package: github.com/containers/podman/v5/pkg/domain/entities/types
    PodNetworkConfig:
      properties:
        Networks:
          additionalProperties:
            $ref: "#/components/schemas/PerNetworkOptions"
          description: |-
            Map of networks names to ids the container should join to.
            You can request additional settings for each network, you can
            set network aliases, static ips, static mac address  and the
            network interface name for this container on the specific network.
            If the map is empty and the bridge network mode is set the container
            will be joined to the default network.
          type: object
        cni_networks:
          description: |-
            CNINetworks is a list of CNI networks to join the container to.
            If this list is empty, the default CNI network will be joined
            instead. If at least one entry is present, we will not join the
            default network (unless it is part of this list).
            Only available if NetNS is set to bridge.
            Optional.
            Deprecated: as of podman 4.0 use "Networks" instead.
          items:
            type: string
          type: array
          x-go-name: CNINetworks
        dns_option:
          description: |-
            DNSOption is a set of DNS options that will be used in the infra
            container's resolv.conf, which will, by default, be shared with all
            containers in the pod.
            Conflicts with NoInfra=true.
            Optional.
          items:
            type: string
          type: array
          x-go-name: DNSOption
        dns_search:
          description: |-
            DNSSearch is a set of DNS search domains that will be used in the
            infra container's resolv.conf, which will, by default, be shared with
            all containers in the pod.
            If not provided, DNS search domains from the host's resolv.conf will
            be used.
            Conflicts with NoInfra=true.
            Optional.
          items:
            type: string
          type: array
          x-go-name: DNSSearch
        dns_server:
          description: |-
            DNSServer is a set of DNS servers that will be used in the infra
            container's resolv.conf, which will, by default, be shared with all
            containers in the pod.
            If not provided, the host's DNS servers will be used, unless the only
            server set is a localhost address. As the container cannot connect to
            the host's localhost, a default server will instead be set.
            Conflicts with NoInfra=true.
            Optional.
          items:
            type: string
          type: array
          x-go-name: DNSServer
        hostadd:
          description: |-
            HostAdd is a set of hosts that will be added to the infra container's
            etc/hosts that will, by default, be shared with all containers in
            the pod.
            Conflicts with NoInfra=true and NoManageHosts.
            Optional.
          items:
            type: string
          type: array
          x-go-name: HostAdd
        netns:
          $ref: "#/components/schemas/Namespace"
        network_options:
          additionalProperties:
            items:
              type: string
            type: array
          description: |-
            NetworkOptions are additional options for each network
            Optional.
          type: object
          x-go-name: NetworkOptions
        no_manage_hosts:
          description: |-
            NoManageHosts indicates that /etc/hosts should not be managed by the
            pod. Instead, each container will create a separate /etc/hosts as
            they would if not in a pod.
            Conflicts with HostAdd.
          type: boolean
          x-go-name: NoManageHosts
        no_manage_resolv_conf:
          description: |-
            NoManageResolvConf indicates that /etc/resolv.conf should not be
            managed by the pod. Instead, each container will create and manage a
            separate resolv.conf as if they had not joined a pod.
            Conflicts with NoInfra=true and DNSServer, DNSSearch, DNSOption.
            Optional.
          type: boolean
          x-go-name: NoManageResolvConf
        portmappings:
          description: |-
            PortMappings is a set of ports to map into the infra container.
            As, by default, containers share their network with the infra
            container, this will forward the ports to the entire pod.
            Only available if NetNS is set to Bridge, Slirp, or Pasta.
            Optional.
          items:
            $ref: "#/components/schemas/PortMapping"
          type: array
          x-go-name: PortMappings
      title: PodNetworkConfig contains networking configuration for a pod.
      type: object
      x-go-package: github.com/containers/podman/v5/pkg/specgen
    PodPauseReport:
      example:
        Id: Id
        Errs:
        - Errs
        - Errs
      properties:
        Errs:
          items:
            type: string
          type: array
        Id:
          type: string
      type: object
      x-go-package: github.com/containers/podman/v5/pkg/domain/entities/types
    PodPruneReport:
      example:
        Err: Err
        Id: Id
      properties:
        Err:
          type: string
        Id:
          type: string
      type: object
      x-go-package: github.com/containers/podman/v5/pkg/domain/entities/types
    PodResourceConfig:
      properties:
        cpu_period:
          description: "CPU period of the cpuset, determined by --cpus"
          format: uint64
          type: integer
          x-go-name: CPUPeriod
        cpu_quota:
          description: "CPU quota of the cpuset, determined by --cpus"
          format: int64
          type: integer
          x-go-name: CPUQuota
        resource_limits:
          $ref: "#/components/schemas/LinuxResources"
        throttleReadBpsDevice:
          additionalProperties:
            $ref: "#/components/schemas/LinuxThrottleDevice"
          description: ThrottleReadBpsDevice contains the rate at which the devices
            in the pod can be read from/accessed
          type: object
          x-go-name: ThrottleReadBpsDevice
      type: object
      x-go-package: github.com/containers/podman/v5/pkg/specgen
    PodRestartReport:
      example:
        Id: Id
        Errs:
        - Errs
        - Errs
      properties:
        Errs:
          items:
            type: string
          type: array
        Id:
          type: string
      type: object
      x-go-package: github.com/containers/podman/v5/pkg/domain/entities/types
    PodRmReport:
      example:
        Err: Err
        RemovedCtrs:
          key: RemovedCtrs
        Id: Id
      properties:
        Err:
          type: string
        Id:
          type: string
        RemovedCtrs:
          additionalProperties:
            type: string
          type: object
      type: object
      x-go-package: github.com/containers/podman/v5/pkg/domain/entities/types
    PodSecurityConfig:
      properties:
        idmappings:
          $ref: "#/components/schemas/IDMappingOptions"
        security_opt:
          items:
            type: string
          type: array
          x-go-name: SecurityOpt
      type: object
      x-go-package: github.com/containers/podman/v5/pkg/specgen
    PodSpecGenerator:
      description: PodSpecGenerator describes options to create a pod
      example:
        cni_networks:
        - cni_networks
        - cni_networks
        Networks:
          key:
            aliases:
            - aliases
            - aliases
            interface_name: interface_name
            options:
              key: options
            static_ips:
            - static_ips
            - static_ips
            static_mac: static_mac
        network_options:
          key:
          - network_options
          - network_options
        hostadd:
        - hostadd
        - hostadd
        security_opt:
        - security_opt
        - security_opt
        restart_tries: 1
        throttleReadBpsDevice:
          key:
            major: 6
            minor: 1
            rate: 5
        shm_size: 5
        portmappings:
        - container_port: 6
          host_ip: host_ip
          protocol: protocol
          host_port: 7
          range: 1
        - container_port: 6
          host_ip: host_ip
          protocol: protocol
          host_port: 7
          range: 1
        pod_devices:
        - pod_devices
        - pod_devices
        pidns:
          nsmode: nsmode
          value: value
        serviceContainerID: serviceContainerID
        hostname: hostname
        infra_command:
        - infra_command
        - infra_command
        infra_image: infra_image
        dns_search:
        - dns_search
        - dns_search
        ipcns:
          nsmode: nsmode
          value: value
        cpu_quota: 6
        utsns:
          nsmode: nsmode
          value: value
        netns:
          nsmode: nsmode
          value: value
        shared_namespaces:
        - shared_namespaces
        - shared_namespaces
        image_volumes:
        - Destination: Destination
          ReadWrite: true
          subPath: subPath
          Source: Source
        - Destination: Destination
          ReadWrite: true
          subPath: subPath
          Source: Source
        infra_name: infra_name
        infra_conmon_pid_file: infra_conmon_pid_file
        dns_server:
        - dns_server
        - dns_server
        volumes:
        - Options:
          - Options
          - Options
          Dest: Dest
          SubPath: SubPath
          IsAnonymous: true
          Name: Name
        - Options:
          - Options
          - Options
          Dest: Dest
          SubPath: SubPath
          IsAnonymous: true
          Name: Name
        mounts:
        - BindOptions:
            ReadOnlyForceRecursive: true
            NonRecursive: true
            Propagation: Propagation
            ReadOnlyNonRecursive: true
            CreateMountpoint: true
          ReadOnly: true
          Target: Target
          Type: Type
          VolumeOptions:
            NoCopy: true
            Subpath: Subpath
            DriverConfig:
              Options:
                key: Options
              Name: Name
            Labels:
              key: Labels
          Consistency: Consistency
          TmpfsOptions:
            Options:
            - - Options
              - Options
            - - Options
              - Options
            Mode: 3
            SizeBytes: 6
          Source: Source
          ClusterOptions: "{}"
        - BindOptions:
            ReadOnlyForceRecursive: true
            NonRecursive: true
            Propagation: Propagation
            ReadOnlyNonRecursive: true
            CreateMountpoint: true
          ReadOnly: true
          Target: Target
          Type: Type
          VolumeOptions:
            NoCopy: true
            Subpath: Subpath
            DriverConfig:
              Options:
                key: Options
              Name: Name
            Labels:
              key: Labels
          Consistency: Consistency
          TmpfsOptions:
            Options:
            - - Options
              - Options
            - - Options
              - Options
            Mode: 3
            SizeBytes: 6
          Source: Source
          ClusterOptions: "{}"
        cpu_period: 0
        exit_policy: exit_policy
        shm_size_systemd: 5
        labels:
          key: labels
        idmappings:
          HostGIDMapping: true
          AutoUserNsOpts:
            PasswdFile: PasswdFile
            AdditionalGIDMappings:
            - size: 4
              container_id: 3
              host_id: 2
            - size: 4
              container_id: 3
              host_id: 2
            Size: 1
            InitialSize: 7
            AdditionalUIDMappings:
            - size: 4
              container_id: 3
              host_id: 2
            - size: 4
              container_id: 3
              host_id: 2
            GroupFile: GroupFile
          GIDMap:
          - size: 4
            container_id: 3
            host_id: 2
          - size: 4
            container_id: 3
            host_id: 2
          AutoUserNs: true
          UIDMap:
          - size: 4
            container_id: 3
            host_id: 2
          - size: 4
            container_id: 3
            host_id: 2
          HostUIDMapping: true
        dns_option:
        - dns_option
        - dns_option
        no_manage_resolv_conf: true
        sysctl:
          key: sysctl
        restart_policy: restart_policy
        cgroup_parent: cgroup_parent
        name: name
        pod_create_command:
        - pod_create_command
        - pod_create_command
        userns:
          nsmode: nsmode
          value: value
        volumes_from:
        - volumes_from
        - volumes_from
        no_infra: true
        no_manage_hosts: true
        overlay_volumes:
        - destination: destination
          options:
          - options
          - options
          source: source
        - destination: destination
          options:
          - options
          - options
          source: source
        share_parent: true
        resource_limits:
          memory:
            swappiness: 9
            checkBeforeUpdate: true
            swap: 8
            useHierarchy: true
            kernel: 5
            disableOOMKiller: true
            limit: 9
            reservation: 6
            kernelTCP: 9
          rdma:
            key:
              hcaObjects: 2
              hcaHandles: 1
          devices:
          - allow: true
            access: access
            major: 7
            minor: 1
            type: type
          - allow: true
            access: access
            major: 7
            minor: 1
            type: type
          unified:
            key: unified
          cpu:
            shares: 6
            period: 7
            cpus: cpus
            idle: 4
            quota: 1
            burst: 2
            realtimePeriod: 1
            realtimeRuntime: 1
            mems: mems
          blockIO:
            throttleWriteBpsDevice:
            - major: 6
              minor: 1
              rate: 5
            - major: 6
              minor: 1
              rate: 5
            throttleReadBpsDevice:
            - major: 6
              minor: 1
              rate: 5
            - major: 6
              minor: 1
              rate: 5
            leafWeight: 0
            weight: 5
            weightDevice:
            - major: 7
              minor: 9
              leafWeight: 2
              weight: 3
            - major: 7
              minor: 9
              leafWeight: 2
              weight: 3
            throttleWriteIOPSDevice:
            - major: 6
              minor: 1
              rate: 5
            - major: 6
              minor: 1
              rate: 5
            throttleReadIOPSDevice:
            - major: 6
              minor: 1
              rate: 5
            - major: 6
              minor: 1
              rate: 5
          hugepageLimits:
          - limit: 4
            pageSize: pageSize
          - limit: 4
            pageSize: pageSize
          pids:
            limit: 6
          network:
            classID: 6
            priorities:
            - name: name
              priority: 3
            - name: name
              priority: 3
      properties:
        Networks:
          additionalProperties:
            $ref: "#/components/schemas/PerNetworkOptions"
          description: |-
            Map of networks names to ids the container should join to.
            You can request additional settings for each network, you can
            set network aliases, static ips, static mac address  and the
            network interface name for this container on the specific network.
            If the map is empty and the bridge network mode is set the container
            will be joined to the default network.
          type: object
        cgroup_parent:
          description: |-
            CgroupParent is the parent for the Cgroup that the pod will create.
            This pod cgroup will, in turn, be the default cgroup parent for all
            containers in the pod.
            Optional.
          type: string
          x-go-name: CgroupParent
        cni_networks:
          description: |-
            CNINetworks is a list of CNI networks to join the container to.
            If this list is empty, the default CNI network will be joined
            instead. If at least one entry is present, we will not join the
            default network (unless it is part of this list).
            Only available if NetNS is set to bridge.
            Optional.
            Deprecated: as of podman 4.0 use "Networks" instead.
          items:
            type: string
          type: array
          x-go-name: CNINetworks
        cpu_period:
          description: "CPU period of the cpuset, determined by --cpus"
          format: uint64
          type: integer
          x-go-name: CPUPeriod
        cpu_quota:
          description: "CPU quota of the cpuset, determined by --cpus"
          format: int64
          type: integer
          x-go-name: CPUQuota
        dns_option:
          description: |-
            DNSOption is a set of DNS options that will be used in the infra
            container's resolv.conf, which will, by default, be shared with all
            containers in the pod.
            Conflicts with NoInfra=true.
            Optional.
          items:
            type: string
          type: array
          x-go-name: DNSOption
        dns_search:
          description: |-
            DNSSearch is a set of DNS search domains that will be used in the
            infra container's resolv.conf, which will, by default, be shared with
            all containers in the pod.
            If not provided, DNS search domains from the host's resolv.conf will
            be used.
            Conflicts with NoInfra=true.
            Optional.
          items:
            type: string
          type: array
          x-go-name: DNSSearch
        dns_server:
          description: |-
            DNSServer is a set of DNS servers that will be used in the infra
            container's resolv.conf, which will, by default, be shared with all
            containers in the pod.
            If not provided, the host's DNS servers will be used, unless the only
            server set is a localhost address. As the container cannot connect to
            the host's localhost, a default server will instead be set.
            Conflicts with NoInfra=true.
            Optional.
          items:
            type: string
          type: array
          x-go-name: DNSServer
        exit_policy:
          description: ExitPolicy determines the pod's exit and stop behaviour.
          type: string
          x-go-name: ExitPolicy
        hostadd:
          description: |-
            HostAdd is a set of hosts that will be added to the infra container's
            etc/hosts that will, by default, be shared with all containers in
            the pod.
            Conflicts with NoInfra=true and NoManageHosts.
            Optional.
          items:
            type: string
          type: array
          x-go-name: HostAdd
        hostname:
          description: |-
            Hostname is the pod's hostname. If not set, the name of the pod will
            be used (if a name was not provided here, the name auto-generated for
            the pod will be used). This will be used by the infra container and
            all containers in the pod as long as the UTS namespace is shared.
            Optional.
          type: string
          x-go-name: Hostname
        idmappings:
          $ref: "#/components/schemas/IDMappingOptions"
        image_volumes:
          description: |-
            Image volumes bind-mount a container-image mount into the pod's infra container.
            Optional.
          items:
            $ref: "#/components/schemas/ImageVolume"
          type: array
          x-go-name: ImageVolumes
        infra_command:
          description: |-
            InfraCommand sets the command that will be used to start the infra
            container.
            If not set, the default set in the Libpod configuration file will be
            used.
            Conflicts with NoInfra=true.
            Optional.
          items:
            type: string
          type: array
          x-go-name: InfraCommand
        infra_conmon_pid_file:
          description: |-
            InfraConmonPidFile is a custom path to store the infra container's
            conmon PID.
          type: string
          x-go-name: InfraConmonPidFile
        infra_image:
          description: |-
            InfraImage is the image that will be used for the infra container.
            If not set, the default set in the Libpod configuration file will be
            used.
            Conflicts with NoInfra=true.
            Optional.
          type: string
          x-go-name: InfraImage
        infra_name:
          description: |-
            InfraName is the name that will be used for the infra container.
            If not set, the default set in the Libpod configuration file will be
            used.
            Conflicts with NoInfra=true.
            Optional.
          type: string
          x-go-name: InfraName
        ipcns:
          $ref: "#/components/schemas/Namespace"
        labels:
          additionalProperties:
            type: string
          description: |-
            Labels are key-value pairs that are used to add metadata to pods.
            Optional.
          type: object
          x-go-name: Labels
        mounts:
          description: |-
            Mounts are mounts that will be added to the pod.
            These will supersede Image Volumes and VolumesFrom volumes where
            there are conflicts.
            Optional.
          items:
            $ref: "#/components/schemas/Mount"
          type: array
          x-go-name: Mounts
        name:
          description: |-
            Name is the name of the pod.
            If not provided, a name will be generated when the pod is created.
            Optional.
          type: string
          x-go-name: Name
        netns:
          $ref: "#/components/schemas/Namespace"
        network_options:
          additionalProperties:
            items:
              type: string
            type: array
          description: |-
            NetworkOptions are additional options for each network
            Optional.
          type: object
          x-go-name: NetworkOptions
        no_infra:
          description: |-
            NoInfra tells the pod not to create an infra container. If this is
            done, many networking-related options will become unavailable.
            Conflicts with setting any options in PodNetworkConfig, and the
            InfraCommand and InfraImages in this struct.
            Optional.
          type: boolean
          x-go-name: NoInfra
        no_manage_hosts:
          description: |-
            NoManageHosts indicates that /etc/hosts should not be managed by the
            pod. Instead, each container will create a separate /etc/hosts as
            they would if not in a pod.
            Conflicts with HostAdd.
          type: boolean
          x-go-name: NoManageHosts
        no_manage_resolv_conf:
          description: |-
            NoManageResolvConf indicates that /etc/resolv.conf should not be
            managed by the pod. Instead, each container will create and manage a
            separate resolv.conf as if they had not joined a pod.
            Conflicts with NoInfra=true and DNSServer, DNSSearch, DNSOption.
            Optional.
          type: boolean
          x-go-name: NoManageResolvConf
        overlay_volumes:
          description: |-
            Overlay volumes are named volumes that will be added to the pod.
            Optional.
          items:
            $ref: "#/components/schemas/OverlayVolume"
          type: array
          x-go-name: OverlayVolumes
        pidns:
          $ref: "#/components/schemas/Namespace"
        pod_create_command:
          items:
            type: string
          type: array
          x-go-name: PodCreateCommand
        pod_devices:
          description: Devices contains user specified Devices to be added to the
            Pod
          items:
            type: string
          type: array
          x-go-name: Devices
        portmappings:
          description: |-
            PortMappings is a set of ports to map into the infra container.
            As, by default, containers share their network with the infra
            container, this will forward the ports to the entire pod.
            Only available if NetNS is set to Bridge, Slirp, or Pasta.
            Optional.
          items:
            $ref: "#/components/schemas/PortMapping"
          type: array
          x-go-name: PortMappings
        resource_limits:
          $ref: "#/components/schemas/LinuxResources"
        restart_policy:
          description: |-
            RestartPolicy is the pod's restart policy - an action which
            will be taken when one or all the containers in the pod exits.
            If not given, the default policy will be set to Always, which
            restarts the containers in the pod when they exit indefinitely.
            Optional.
          type: string
          x-go-name: RestartPolicy
        restart_tries:
          description: |-
            RestartRetries is the number of attempts that will be made to restart
            the container.
            Only available when RestartPolicy is set to "on-failure".
            Optional.
          format: uint64
          type: integer
          x-go-name: RestartRetries
        security_opt:
          items:
            type: string
          type: array
          x-go-name: SecurityOpt
        serviceContainerID:
          description: The ID of the pod's service container.
          type: string
          x-go-name: ServiceContainerID
        share_parent:
          description: |-
            PodCreateCommand is the command used to create this pod.
            This will be shown in the output of Inspect() on the pod, and may
            also be used by some tools that wish to recreate the pod
            (e.g. `podman generate systemd --new`).
            Optional.
            ShareParent determines if all containers in the pod will share the pod's cgroup as the cgroup parent
          type: boolean
          x-go-name: ShareParent
        shared_namespaces:
          description: |-
            SharedNamespaces instructs the pod to share a set of namespaces.
            Shared namespaces will be joined (by default) by every container
            which joins the pod.
            If not set and NoInfra is false, the pod will set a default set of
            namespaces to share.
            Conflicts with NoInfra=true.
            Optional.
          items:
            type: string
          type: array
          x-go-name: SharedNamespaces
        shm_size:
          description: |-
            ShmSize is the size of the tmpfs to mount in at /dev/shm, in bytes.
            Conflicts with ShmSize if IpcNS is not private.
            Optional.
          format: int64
          type: integer
          x-go-name: ShmSize
        shm_size_systemd:
          description: |-
            ShmSizeSystemd is the size of systemd-specific tmpfs mounts
            specifically /run, /run/lock, /var/log/journal and /tmp.
            Optional
          format: int64
          type: integer
          x-go-name: ShmSizeSystemd
        sysctl:
          additionalProperties:
            type: string
          description: Sysctl sets kernel parameters for the pod
          type: object
          x-go-name: Sysctl
        throttleReadBpsDevice:
          additionalProperties:
            $ref: "#/components/schemas/LinuxThrottleDevice"
          description: ThrottleReadBpsDevice contains the rate at which the devices
            in the pod can be read from/accessed
          type: object
          x-go-name: ThrottleReadBpsDevice
        userns:
          $ref: "#/components/schemas/Namespace"
        utsns:
          $ref: "#/components/schemas/Namespace"
        volumes:
          description: |-
            Volumes are named volumes that will be added to the pod.
            These will supersede Image Volumes and VolumesFrom  volumes where
            there are conflicts.
            Optional.
          items:
            $ref: "#/components/schemas/NamedVolume"
          type: array
          x-go-name: Volumes
        volumes_from:
          description: |-
            VolumesFrom is a set of containers whose volumes will be added to
            this pod. The name or ID of the container must be provided, and
            may optionally be followed by a : and then one or more
            comma-separated options. Valid options are 'ro', 'rw', and 'z'.
            Options will be used for all volumes sourced from the container.
          items:
            type: string
          type: array
          x-go-name: VolumesFrom
      type: object
      x-go-package: github.com/containers/podman/v5/pkg/specgen
    PodStartReport:
      example:
        RawInput: RawInput
        Id: Id
        Errs:
        - Errs
        - Errs
      properties:
        Errs:
          items:
            type: string
          type: array
        Id:
          type: string
        RawInput:
          type: string
      type: object
      x-go-package: github.com/containers/podman/v5/pkg/domain/entities/types
    PodStatsReport:
      example:
        BlockIO: BlockIO
        Mem: 50.5%
        Pod: 62310217a19e
        MemUsageBytes: "1,000,000 / 4,000,000"
        CPU: 75.5%
        NetIO: NetIO
        PIDS: PIDS
        CID: e43534f89a7d
        MemUsage: 12mb / 24mb
        Name: elastic_pascal
      properties:
        BlockIO:
          description: Humanized disk usage read + write
          type: string
        CID:
          description: Container ID
          example: e43534f89a7d
          type: string
        CPU:
          description: Percentage of CPU utilized by pod
          example: 75.5%
          type: string
        Mem:
          description: Percentage of Memory utilized by pod
          example: 50.5%
          type: string
        MemUsage:
          description: Humanized Memory usage and maximum
          example: 12mb / 24mb
          type: string
        MemUsageBytes:
          description: Memory usage and maximum in bytes
          example: "1,000,000 / 4,000,000"
          type: string
        Name:
          description: Pod Name
          example: elastic_pascal
          type: string
        NetIO:
          description: Network usage inbound + outbound
          type: string
        PIDS:
          description: Container PID
          type: string
        Pod:
          description: Pod ID
          example: 62310217a19e
          type: string
      title: PodStatsReport includes pod-resource statistics data.
      type: object
      x-go-package: github.com/containers/podman/v5/pkg/domain/entities/types
    PodStopReport:
      example:
        RawInput: RawInput
        Id: Id
        Errs:
        - Errs
        - Errs
      properties:
        Errs:
          items:
            type: string
          type: array
        Id:
          type: string
        RawInput:
          type: string
      type: object
      x-go-package: github.com/containers/podman/v5/pkg/domain/entities/types
    PodStorageConfig:
      properties:
        image_volumes:
          description: |-
            Image volumes bind-mount a container-image mount into the pod's infra container.
            Optional.
          items:
            $ref: "#/components/schemas/ImageVolume"
          type: array
          x-go-name: ImageVolumes
        mounts:
          description: |-
            Mounts are mounts that will be added to the pod.
            These will supersede Image Volumes and VolumesFrom volumes where
            there are conflicts.
            Optional.
          items:
            $ref: "#/components/schemas/Mount"
          type: array
          x-go-name: Mounts
        overlay_volumes:
          description: |-
            Overlay volumes are named volumes that will be added to the pod.
            Optional.
          items:
            $ref: "#/components/schemas/OverlayVolume"
          type: array
          x-go-name: OverlayVolumes
        shm_size:
          description: |-
            ShmSize is the size of the tmpfs to mount in at /dev/shm, in bytes.
            Conflicts with ShmSize if IpcNS is not private.
            Optional.
          format: int64
          type: integer
          x-go-name: ShmSize
        shm_size_systemd:
          description: |-
            ShmSizeSystemd is the size of systemd-specific tmpfs mounts
            specifically /run, /run/lock, /var/log/journal and /tmp.
            Optional
          format: int64
          type: integer
          x-go-name: ShmSizeSystemd
        volumes:
          description: |-
            Volumes are named volumes that will be added to the pod.
            These will supersede Image Volumes and VolumesFrom  volumes where
            there are conflicts.
            Optional.
          items:
            $ref: "#/components/schemas/NamedVolume"
          type: array
          x-go-name: Volumes
        volumes_from:
          description: |-
            VolumesFrom is a set of containers whose volumes will be added to
            this pod. The name or ID of the container must be provided, and
            may optionally be followed by a : and then one or more
            comma-separated options. Valid options are 'ro', 'rw', and 'z'.
            Options will be used for all volumes sourced from the container.
          items:
            type: string
          type: array
          x-go-name: VolumesFrom
      title: PodStorageConfig contains all of the storage related options for the
        pod and its infra container.
      type: object
      x-go-package: github.com/containers/podman/v5/pkg/specgen
    PodTopOKBody:
      example:
        Processes:
        - - Processes
          - Processes
        - - Processes
          - Processes
        Titles:
        - Titles
        - Titles
      properties:
        Processes:
          description: |-
            Each process running in the container, where each is process
            is an array of values corresponding to the titles.
          items:
            items:
              type: string
            type: array
          type: array
        Titles:
          description: The ps column titles
          items:
            type: string
          type: array
      required:
      - Processes
      - Titles
      type: object
      x-go-package: github.com/containers/podman/v5/pkg/api/handlers
    PodUnpauseReport:
      example:
        Id: Id
        Errs:
        - Errs
        - Errs
      properties:
        Errs:
          items:
            type: string
          type: array
        Id:
          type: string
      type: object
      x-go-package: github.com/containers/podman/v5/pkg/domain/entities/types
    Port:
      description: Port An open port on a container
      example:
        Type: Type
        IP: IP
        PrivatePort: 6
        PublicPort: 1
      properties:
        IP:
          description: Host IP address that the container's port is mapped to
          type: string
        PrivatePort:
          description: Port on the container
          format: uint16
          type: integer
        PublicPort:
          description: Port exposed on the host
          format: uint16
          type: integer
        Type:
          description: type
          type: string
      required:
      - PrivatePort
      - Type
      type: object
      x-go-package: github.com/docker/docker/api/types
    PortBinding:
      description: PortBinding represents a binding between a Host IP address and
        a Host Port
      example:
        HostIp: HostIp
        HostPort: HostPort
      properties:
        HostIp:
          description: HostIP is the host IP Address
          type: string
          x-go-name: HostIP
        HostPort:
          description: HostPort is the host port number
          type: string
      type: object
      x-go-package: github.com/docker/go-connections/nat
    PortMap:
      additionalProperties:
        items:
          $ref: "#/components/schemas/PortBinding"
        type: array
      description: PortMap is a collection of PortBinding indexed by Port
      type: object
      x-go-package: github.com/docker/go-connections/nat
    PortMapping:
      example:
        container_port: 6
        host_ip: host_ip
        protocol: protocol
        host_port: 7
        range: 1
      properties:
        container_port:
          description: |-
            ContainerPort is the port number that will be exposed from the
            container.
            Mandatory.
          format: uint16
          type: integer
          x-go-name: ContainerPort
        host_ip:
          description: |-
            HostIP is the IP that we will bind to on the host.
            If unset, assumed to be 0.0.0.0 (all interfaces).
          type: string
          x-go-name: HostIP
        host_port:
          description: |-
            HostPort is the port number that will be forwarded from the host into
            the container.
            If omitted, a random port on the host (guaranteed to be over 1024)
            will be assigned.
          format: uint16
          type: integer
          x-go-name: HostPort
        protocol:
          description: |-
            Protocol is the protocol forward.
            Must be either "tcp", "udp", and "sctp", or some combination of these
            separated by commas.
            If unset, assumed to be TCP.
          type: string
          x-go-name: Protocol
        range:
          description: |-
            Range is the number of ports that will be forwarded, starting at
            HostPort and ContainerPort and counting up.
            This is 1-indexed, so 1 is assumed to be a single port (only the
            Hostport:Containerport mapping will be added), 2 is two ports (both
            Hostport:Containerport and Hostport+1:Containerport+1), etc.
            If unset, assumed to be 1 (a single port).
            Both hostport + range and containerport + range must be less than
            65536.
          format: uint16
          type: integer
          x-go-name: Range
      title: PortMapping is one or more ports that will be mapped into the container.
      type: object
      x-go-package: github.com/containers/common/libnetwork/types
    PortSet:
      additionalProperties:
        properties: {}
        type: object
      description: PortSet is a collection of structs indexed by Port
      type: object
      x-go-package: github.com/docker/go-connections/nat
    Propagation:
      title: Propagation represents the propagation of a mount.
      type: string
      x-go-package: github.com/docker/docker/api/types/mount
    PruneReport:
      description: POST "/volumes/prune"
      example:
        Err: Err
        Size: 0
        Id: Id
      properties:
        Err:
          type: string
        Id:
          type: string
        Size:
          format: uint64
          type: integer
      title: "PruneReport contains the response for Engine API:"
      type: object
      x-go-package: github.com/containers/podman/v5/pkg/domain/entities/reports
    PublishState:
      description: |-
        PublishState represents the state of a Volume as it pertains to its
        use on a particular Node.
      type: string
      x-go-package: github.com/docker/docker/api/types/volume
    PublishStatus:
      description: |-
        PublishStatus represents the status of the volume as published to an
        individual node
      example:
        PublishContext:
          key: PublishContext
        State: State
        NodeID: NodeID
      properties:
        NodeID:
          description: NodeID is the ID of the swarm node this Volume is published
            to.
          type: string
        PublishContext:
          additionalProperties:
            type: string
          description: |-
            PublishContext is the PublishContext returned by the CSI plugin when
            a volume is published.
          type: object
        State:
          description: |-
            PublishState represents the state of a Volume as it pertains to its
            use on a particular Node.
          type: string
          x-go-package: github.com/docker/docker/api/types/volume
      type: object
      x-go-package: github.com/docker/docker/api/types/volume
    RemoteSocket:
      description: RemoteSocket describes information about the API socket
      example:
        path: path
        exists: true
      properties:
        exists:
          type: boolean
          x-go-name: Exists
        path:
          type: string
          x-go-name: Path
      type: object
      x-go-package: github.com/containers/podman/v5/libpod/define
    Resources:
      description: "Resources contains container's resources (cgroups config, ulimits...)"
      properties:
        BlkioDeviceReadBps:
          items:
            $ref: "#/components/schemas/ThrottleDevice"
          type: array
        BlkioDeviceReadIOps:
          items:
            $ref: "#/components/schemas/ThrottleDevice"
          type: array
        BlkioDeviceWriteBps:
          items:
            $ref: "#/components/schemas/ThrottleDevice"
          type: array
        BlkioDeviceWriteIOps:
          items:
            $ref: "#/components/schemas/ThrottleDevice"
          type: array
        BlkioWeight:
          format: uint16
          type: integer
        BlkioWeightDevice:
          items:
            $ref: "#/components/schemas/WeightDevice"
          type: array
        CgroupParent:
          description: Applicable to UNIX platforms
          type: string
        CpuCount:
          description: Applicable to Windows
          format: int64
          type: integer
          x-go-name: CPUCount
        CpuPercent:
          format: int64
          type: integer
          x-go-name: CPUPercent
        CpuPeriod:
          format: int64
          type: integer
          x-go-name: CPUPeriod
        CpuQuota:
          format: int64
          type: integer
          x-go-name: CPUQuota
        CpuRealtimePeriod:
          format: int64
          type: integer
          x-go-name: CPURealtimePeriod
        CpuRealtimeRuntime:
          format: int64
          type: integer
          x-go-name: CPURealtimeRuntime
        CpuShares:
          description: Applicable to all platforms
          format: int64
          type: integer
          x-go-name: CPUShares
        CpusetCpus:
          type: string
        CpusetMems:
          type: string
        DeviceCgroupRules:
          items:
            type: string
          type: array
        DeviceRequests:
          items:
            $ref: "#/components/schemas/DeviceRequest"
          type: array
        Devices:
          items:
            $ref: "#/components/schemas/DeviceMapping"
          type: array
        IOMaximumBandwidth:
          format: uint64
          type: integer
        IOMaximumIOps:
          format: uint64
          type: integer
        KernelMemory:
          description: |-
            KernelMemory specifies the kernel memory limit (in bytes) for the container.
            Deprecated: kernel 5.4 deprecated kmem.limit_in_bytes.
          format: int64
          type: integer
        KernelMemoryTCP:
          format: int64
          type: integer
        Memory:
          format: int64
          type: integer
        MemoryReservation:
          format: int64
          type: integer
        MemorySwap:
          format: int64
          type: integer
        MemorySwappiness:
          format: int64
          type: integer
        NanoCpus:
          format: int64
          type: integer
          x-go-name: NanoCPUs
        OomKillDisable:
          type: boolean
        PidsLimit:
          format: int64
          type: integer
        Ulimits:
          items:
            $ref: "#/components/schemas/Ulimit"
          type: array
      type: object
      x-go-package: github.com/docker/docker/api/types/container
    RestartPolicy:
      example:
        MaximumRetryCount: 6
        Name: Name
      properties:
        MaximumRetryCount:
          format: int64
          type: integer
        Name:
          type: string
          x-go-package: github.com/docker/docker/api/types/container
      title: RestartPolicy represents the restart policies of the container.
      type: object
      x-go-package: github.com/docker/docker/api/types/container
    RestartPolicyMode:
      type: string
      x-go-package: github.com/docker/docker/api/types/container
    RootFS:
      example:
        Type: Type
        Layers:
        - null
        - null
      properties:
        Layers:
          items:
            $ref: "#/components/schemas/Digest"
          type: array
        Type:
          type: string
      title: RootFS holds the root fs information of an image.
      type: object
      x-go-package: github.com/containers/podman/v5/pkg/inspect
    Route:
      example:
        metric: 6
        destination: destination
        gateway: gateway
      properties:
        destination:
          description: Destination for this route in CIDR form.
          format: string
          type: string
          x-go-name: Destination
        gateway:
          description: Gateway IP for this route.
          format: string
          type: string
          x-go-name: Gateway
        metric:
          description: Metric for this route. Optional.
          format: uint32
          type: integer
          x-go-name: Metric
      type: object
      x-go-package: github.com/containers/common/libnetwork/types
    Schema2HealthConfig:
      description: |-
        Schema2HealthConfig is a HealthConfig, which holds configuration settings
        for the HEALTHCHECK feature, from docker/docker/api/types/container.
      example:
        StartInterval: 1
        Test:
        - Test
        - Test
        Retries: 6
        Timeout: 5
        Interval: 0
        StartPeriod: 5
      properties:
        Interval:
          description: |-
            A Duration represents the elapsed time between two instants
            as an int64 nanosecond count. The representation limits the
            largest representable duration to approximately 290 years.
          format: int64
          type: integer
          x-go-package: time
        Retries:
          description: |-
            Retries is the number of consecutive failures needed to consider a container as unhealthy.
            Zero means inherit.
          format: int64
          type: integer
        StartInterval:
          description: |-
            A Duration represents the elapsed time between two instants
            as an int64 nanosecond count. The representation limits the
            largest representable duration to approximately 290 years.
          format: int64
          type: integer
          x-go-package: time
        StartPeriod:
          description: |-
            A Duration represents the elapsed time between two instants
            as an int64 nanosecond count. The representation limits the
            largest representable duration to approximately 290 years.
          format: int64
          type: integer
          x-go-package: time
        Test:
          description: |-
            Test is the test to perform to check that the container is healthy.
            An empty slice means to inherit the default.
            The options are:
            {} : inherit healthcheck
            {"NONE"} : disable healthcheck
            {"CMD", args...} : exec arguments directly
            {"CMD-SHELL", command} : run command with system's default shell
          items:
            type: string
          type: array
        Timeout:
          description: |-
            A Duration represents the elapsed time between two instants
            as an int64 nanosecond count. The representation limits the
            largest representable duration to approximately 290 years.
          format: int64
          type: integer
          x-go-package: time
      type: object
      x-go-package: github.com/containers/image/v5/manifest
    Schema2ListPublic:
      description: |-
        This is publicly visible as c/image/manifest.Schema2List.
        Internal users should usually use Schema2List instead.
      example:
        schemaVersion: 6
        manifests:
        - urls:
          - urls
          - urls
          size: 0
          digest: digest
          mediaType: mediaType
          platform:
            features:
            - features
            - features
            os: os
            os.features:
            - os.features
            - os.features
            variant: variant
            architecture: architecture
            os.version: os.version
        - urls:
          - urls
          - urls
          size: 0
          digest: digest
          mediaType: mediaType
          platform:
            features:
            - features
            - features
            os: os
            os.features:
            - os.features
            - os.features
            variant: variant
            architecture: architecture
            os.version: os.version
        mediaType: mediaType
      properties:
        manifests:
          items:
            $ref: "#/components/schemas/Schema2ManifestDescriptor"
          type: array
          x-go-name: Manifests
        mediaType:
          type: string
          x-go-name: MediaType
        schemaVersion:
          format: int64
          type: integer
          x-go-name: SchemaVersion
      title: Schema2ListPublic is a list of platform-specific manifests.
      type: object
      x-go-package: github.com/containers/image/v5/internal/manifest
    Schema2ManifestDescriptor:
      description: This is publicly visible as c/image/manifest.Schema2ManifestDescriptor.
      example:
        urls:
        - urls
        - urls
        size: 0
        digest: digest
        mediaType: mediaType
        platform:
          features:
          - features
          - features
          os: os
          os.features:
          - os.features
          - os.features
          variant: variant
          architecture: architecture
          os.version: os.version
      properties:
        digest:
          description: |-
            The following is an example of the contents of Digest types:

            sha256:7173b809ca12ec5dee4506cd86be934c4596dd234ee82c0662eac04a8c2c71dc

            This allows to abstract the digest behind this type and work only in those
            terms.
          title: |-
            Digest allows simple protection of hex formatted digest strings, prefixed
            by their algorithm. Strings of type Digest have some guarantee of being in
            the correct format and it provides quick access to the components of a
            digest string.
          type: string
          x-go-package: github.com/opencontainers/go-digest
        mediaType:
          type: string
          x-go-name: MediaType
        platform:
          $ref: "#/components/schemas/Schema2PlatformSpec"
        size:
          format: int64
          type: integer
          x-go-name: Size
        urls:
          items:
            type: string
          type: array
          x-go-name: URLs
      title: Schema2ManifestDescriptor references a platform-specific manifest.
      type: object
      x-go-package: github.com/containers/image/v5/internal/manifest
    Schema2PlatformSpec:
      description: |-
        Schema2PlatformSpec describes the platform which a particular manifest is
        specialized for.
        This is publicly visible as c/image/manifest.Schema2PlatformSpec.
      example:
        features:
        - features
        - features
        os: os
        os.features:
        - os.features
        - os.features
        variant: variant
        architecture: architecture
        os.version: os.version
      properties:
        architecture:
          type: string
          x-go-name: Architecture
        features:
          items:
            type: string
          type: array
          x-go-name: Features
        os:
          type: string
          x-go-name: OS
        os.features:
          items:
            type: string
          type: array
          x-go-name: OSFeatures
        os.version:
          type: string
          x-go-name: OSVersion
        variant:
          type: string
          x-go-name: Variant
      type: object
      x-go-package: github.com/containers/image/v5/internal/manifest
    Scope:
      description: |-
        Scope defines the Scope of a Cluster Volume. This is how many nodes a
        Volume can be accessed simultaneously on.
      type: string
      x-go-package: github.com/docker/docker/api/types/volume
    ScpReport:
      example:
        Id: Id
      properties:
        Id:
          type: string
      type: object
      x-go-package: github.com/containers/podman/v5/pkg/domain/entities/reports
    Secret:
      description: |-
        Secret represents a Swarm Secret value that must be passed to the CSI
        storage plugin when operating on this Volume. It represents one key-value
        pair of possibly many.
      example:
        Secret: Secret
        Key: Key
      properties:
        Key:
          description: Key is the name of the key of the key-value pair passed to
            the plugin.
          type: string
        Secret:
          description: |-
            Secret is the swarm Secret object from which to read data. This can be a
            Secret name or ID. The Secret data is retrieved by Swarm and used as the
            value of the key-value pair passed to the plugin.
          type: string
      type: object
      x-go-package: github.com/docker/docker/api/types/volume
    SecretCreate:
      example:
        Driver:
          Options:
            key: Options
          Name: Name
        Data: Data
        Labels:
          key: Labels
        Name: Name
      properties:
        Data:
          description: Base64-url-safe-encoded (RFC 4648) data to store as secret.
          type: string
        Driver:
          $ref: "#/components/schemas/SecretDriverSpec"
        Labels:
          additionalProperties:
            type: string
          description: Labels are labels on the secret
          type: object
        Name:
          description: User-defined name of the secret.
          type: string
      type: object
      x-go-name: SecretCreateRequest
      x-go-package: github.com/containers/podman/v5/pkg/domain/entities
    SecretCreateReport:
      example:
        ID: ID
      properties:
        ID:
          type: string
      type: object
      x-go-package: github.com/containers/podman/v5/pkg/domain/entities/types
    SecretDriverSpec:
      example:
        Options:
          key: Options
        Name: Name
      properties:
        Name:
          type: string
        Options:
          additionalProperties:
            type: string
          type: object
      type: object
      x-go-package: github.com/containers/podman/v5/pkg/domain/entities/types
    SecretInfoReport:
      example:
        CreatedAt: 2000-01-23T04:56:07.000+00:00
        ID: ID
        SecretData: SecretData
        Spec:
          Driver:
            Options:
              key: Options
            Name: Name
          Labels:
            key: Labels
          Name: Name
        UpdatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        CreatedAt:
          format: date-time
          type: string
        ID:
          type: string
        SecretData:
          type: string
        Spec:
          $ref: "#/components/schemas/SecretSpec"
        UpdatedAt:
          format: date-time
          type: string
      type: object
      x-go-package: github.com/containers/podman/v5/pkg/domain/entities/types
    SecretInfoReportCompat:
      example:
        Version:
          Index: 0
        CreatedAt: 2000-01-23T04:56:07.000+00:00
        ID: ID
        SecretData: SecretData
        Spec:
          Driver:
            Options:
              key: Options
            Name: Name
          Labels:
            key: Labels
          Name: Name
        UpdatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        CreatedAt:
          format: date-time
          type: string
        ID:
          type: string
        SecretData:
          type: string
        Spec:
          $ref: "#/components/schemas/SecretSpec"
        UpdatedAt:
          format: date-time
          type: string
        Version:
          $ref: "#/components/schemas/SecretVersion"
      type: object
      x-go-package: github.com/containers/podman/v5/pkg/domain/entities/types
    SecretRmReport:
      example:
        Err: Err
        ID: ID
      properties:
        Err:
          type: string
        ID:
          type: string
      type: object
      x-go-package: github.com/containers/podman/v5/pkg/domain/entities/types
    SecretSpec:
      example:
        Driver:
          Options:
            key: Options
          Name: Name
        Labels:
          key: Labels
        Name: Name
      properties:
        Driver:
          $ref: "#/components/schemas/SecretDriverSpec"
        Labels:
          additionalProperties:
            type: string
          type: object
        Name:
          type: string
      type: object
      x-go-package: github.com/containers/podman/v5/pkg/domain/entities/types
    SecretVersion:
      example:
        Index: 0
      properties:
        Index:
          format: int64
          type: integer
      type: object
      x-go-package: github.com/containers/podman/v5/pkg/domain/entities/types
    SecurityInfo:
      description: SecurityInfo describes the libpod host
      example:
        capabilities: capabilities
        rootless: true
        selinuxEnabled: true
        seccompProfilePath: seccompProfilePath
        apparmorEnabled: true
        seccompEnabled: true
      properties:
        apparmorEnabled:
          type: boolean
          x-go-name: AppArmorEnabled
        capabilities:
          type: string
          x-go-name: DefaultCapabilities
        rootless:
          type: boolean
          x-go-name: Rootless
        seccompEnabled:
          type: boolean
          x-go-name: SECCOMPEnabled
        seccompProfilePath:
          type: string
          x-go-name: SECCOMPProfilePath
        selinuxEnabled:
          type: boolean
          x-go-name: SELinuxEnabled
      type: object
      x-go-package: github.com/containers/podman/v5/libpod/define
    ServiceCreateResponse:
      description: |-
        ServiceCreateResponse contains the information returned to a client on the
        creation of a new service.
      properties:
        ID:
          description: The ID of the created service.
          type: string
        Warnings:
          description: |-
            Optional warning message.

            FIXME(thaJeztah): this should have "omitempty" in the generated type.
          items:
            type: string
          type: array
      type: object
      x-go-package: github.com/docker/docker/api/types/swarm
    ServiceInfo:
      description: ServiceInfo represents service parameters with the list of service's
        tasks
      example:
        Tasks:
        - EndpointID: EndpointID
          EndpointIP: EndpointIP
          Info:
            key: Info
          Name: Name
        - EndpointID: EndpointID
          EndpointIP: EndpointIP
          Info:
            key: Info
          Name: Name
        Ports:
        - Ports
        - Ports
        LocalLBIndex: 0
        VIP: VIP
      properties:
        LocalLBIndex:
          format: int64
          type: integer
        Ports:
          items:
            type: string
          type: array
        Tasks:
          items:
            $ref: "#/components/schemas/Task"
          type: array
        VIP:
          type: string
      type: object
      x-go-package: github.com/docker/docker/api/types/network
    ServiceUpdateResponse:
      description: ServiceUpdateResponse service update response
      properties:
        Warnings:
          description: Optional warning messages
          items:
            type: string
          type: array
      type: object
      x-go-package: github.com/docker/docker/api/types/swarm
    SharingMode:
      description: |-
        SharingMode defines the Sharing of a Cluster Volume. This is how Tasks using a
        Volume at the same time can use it.
      type: string
      x-go-package: github.com/docker/docker/api/types/volume
    Signal:
      description: "It implements the [os.Signal] interface."
      format: int64
      title: A Signal is a number describing a process signal.
      type: integer
      x-go-package: syscall
    SlirpInfo:
      description: SlirpInfo describes the slirp executable that is being used
      example:
        package: package
        version: version
        executable: executable
      properties:
        executable:
          type: string
          x-go-name: Executable
        package:
          type: string
          x-go-name: Package
        version:
          type: string
          x-go-name: Version
      type: object
      x-go-package: github.com/containers/podman/v5/libpod/define
    SpecGenerator:
      description: |-
        SpecGenerator creates an OCI spec and Libpod configuration options to create
        a container based on the given configuration.
      example:
        cni_networks:
        - cni_networks
        - cni_networks
        dependencyContainers:
        - dependencyContainers
        - dependencyContainers
        Networks:
          key:
            aliases:
            - aliases
            - aliases
            interface_name: interface_name
            options:
              key: options
            static_ips:
            - static_ips
            - static_ips
            static_mac: static_mac
        stdin: true
        passwd_entry: passwd_entry
        shm_size: 9
        rootfs_mapping: rootfs_mapping
        oci_runtime: oci_runtime
        hostname: hostname
        hostusers:
        - hostusers
        - hostusers
        conmon_pid_file: conmon_pid_file
        ipcns:
          nsmode: nsmode
          value: value
        selinux_opts:
        - selinux_opts
        - selinux_opts
        netns:
          nsmode: nsmode
          value: value
        storage_opts:
          key: storage_opts
        throttleReadIOPSDevice:
          key:
            major: 6
            minor: 1
            rate: 5
        init: true
        envmerge:
        - envmerge
        - envmerge
        devices:
        - path: path
          uid: 5
          gid: 6
          major: 1
          minor: 5
          fileMode: 0
          type: type
        - path: path
          uid: 5
          gid: 6
          major: 1
          minor: 5
          fileMode: 0
          type: type
        volumes:
        - Options:
          - Options
          - Options
          Dest: Dest
          SubPath: SubPath
          IsAnonymous: true
          Name: Name
        - Options:
          - Options
          - Options
          Dest: Dest
          SubPath: SubPath
          IsAnonymous: true
          Name: Name
        mounts:
        - BindOptions:
            ReadOnlyForceRecursive: true
            NonRecursive: true
            Propagation: Propagation
            ReadOnlyNonRecursive: true
            CreateMountpoint: true
          ReadOnly: true
          Target: Target
          Type: Type
          VolumeOptions:
            NoCopy: true
            Subpath: Subpath
            DriverConfig:
              Options:
                key: Options
              Name: Name
            Labels:
              key: Labels
          Consistency: Consistency
          TmpfsOptions:
            Options:
            - - Options
              - Options
            - - Options
              - Options
            Mode: 3
            SizeBytes: 6
          Source: Source
          ClusterOptions: "{}"
        - BindOptions:
            ReadOnlyForceRecursive: true
            NonRecursive: true
            Propagation: Propagation
            ReadOnlyNonRecursive: true
            CreateMountpoint: true
          ReadOnly: true
          Target: Target
          Type: Type
          VolumeOptions:
            NoCopy: true
            Subpath: Subpath
            DriverConfig:
              Options:
                key: Options
              Name: Name
            Labels:
              key: Labels
          Consistency: Consistency
          TmpfsOptions:
            Options:
            - - Options
              - Options
            - - Options
              - Options
            Mode: 3
            SizeBytes: 6
          Source: Source
          ClusterOptions: "{}"
        oom_score_adj: 1
        create_working_dir: true
        use_image_resolve_conf: true
        sdnotifyMode: sdnotifyMode
        labels:
          key: labels
        use_image_hosts: true
        intelRdt:
          l3CacheSchema: l3CacheSchema
          enableMBM: true
          closID: closID
          memBwSchema: memBwSchema
          enableCMT: true
        env_host: true
        dns_option:
        - dns_option
        - dns_option
        sysctl:
          key: sysctl
        throttleWriteBpsDevice:
          key:
            major: 6
            minor: 1
            rate: 5
        volumes_from:
        - volumes_from
        - volumes_from
        label_nested: true
        resource_limits:
          memory:
            swappiness: 9
            checkBeforeUpdate: true
            swap: 8
            useHierarchy: true
            kernel: 5
            disableOOMKiller: true
            limit: 9
            reservation: 6
            kernelTCP: 9
          rdma:
            key:
              hcaObjects: 2
              hcaHandles: 1
          devices:
          - allow: true
            access: access
            major: 7
            minor: 1
            type: type
          - allow: true
            access: access
            major: 7
            minor: 1
            type: type
          unified:
            key: unified
          cpu:
            shares: 6
            period: 7
            cpus: cpus
            idle: 4
            quota: 1
            burst: 2
            realtimePeriod: 1
            realtimeRuntime: 1
            mems: mems
          blockIO:
            throttleWriteBpsDevice:
            - major: 6
              minor: 1
              rate: 5
            - major: 6
              minor: 1
              rate: 5
            throttleReadBpsDevice:
            - major: 6
              minor: 1
              rate: 5
            - major: 6
              minor: 1
              rate: 5
            leafWeight: 0
            weight: 5
            weightDevice:
            - major: 7
              minor: 9
              leafWeight: 2
              weight: 3
            - major: 7
              minor: 9
              leafWeight: 2
              weight: 3
            throttleWriteIOPSDevice:
            - major: 6
              minor: 1
              rate: 5
            - major: 6
              minor: 1
              rate: 5
            throttleReadIOPSDevice:
            - major: 6
              minor: 1
              rate: 5
            - major: 6
              minor: 1
              rate: 5
          hugepageLimits:
          - limit: 4
            pageSize: pageSize
          - limit: 4
            pageSize: pageSize
          pids:
            limit: 6
          network:
            classID: 6
            priorities:
            - name: name
              priority: 3
            - name: name
              priority: 3
        httpproxy: true
        image_arch: image_arch
        umask: umask
        pod: pod
        containerCreateCommand:
        - containerCreateCommand
        - containerCreateCommand
        work_dir: work_dir
        cgroupns:
          nsmode: nsmode
          value: value
        cap_add:
        - cap_add
        - cap_add
        stop_timeout: 9
        rootfs_propagation: rootfs_propagation
        group_entry: group_entry
        init_path: init_path
        image_volume_mode: image_volume_mode
        stop_signal: 8
        chroot_directories:
        - chroot_directories
        - chroot_directories
        secret_env:
          key: secret_env
        healthMaxLogCount: 7
        no_new_privileges: true
        image_volumes:
        - Destination: Destination
          ReadWrite: true
          subPath: subPath
          Source: Source
        - Destination: Destination
          ReadWrite: true
          subPath: subPath
          Source: Source
        systemd: systemd
        unsetenvall: true
        healthMaxLogSize: 9
        removeImage: true
        restart_policy: restart_policy
        device_cgroup_rule:
        - allow: true
          access: access
          major: 7
          minor: 1
          type: type
        - allow: true
          access: access
          major: 7
          minor: 1
          type: type
        healthconfig:
          StartInterval: 1
          Test:
          - Test
          - Test
          Retries: 6
          Timeout: 5
          Interval: 0
          StartPeriod: 5
        unified:
          key: unified
        r_limits:
        - hard: 4
          type: type
          soft: 5
        - hard: 4
          type: type
          soft: 5
        rootfs_overlay: true
        hostadd:
        - hostadd
        - hostadd
        init_container_type: init_container_type
        publish_image_ports: true
        host_device_list:
        - path: path
          uid: 5
          gid: 6
          major: 1
          minor: 5
          fileMode: 0
          type: type
        - path: path
          uid: 5
          gid: 6
          major: 1
          minor: 5
          fileMode: 0
          type: type
        throttleReadBpsDevice:
          key:
            major: 6
            minor: 1
            rate: 5
        annotations:
          key: annotations
        log_configuration:
          path: path
          driver: driver
          size: 1
          options:
            key: options
        image_os: image_os
        cgroups_mode: cgroups_mode
        entrypoint:
        - entrypoint
        - entrypoint
        image: image
        seccomp_policy: seccomp_policy
        dns_server:
        - dns_server
        - dns_server
        read_only_filesystem: true
        secrets:
        - Secret: Secret
          Key: Key
        - Secret: Secret
          Key: Key
        shm_size_systemd: 6
        privileged: true
        seccomp_profile_path: seccomp_profile_path
        health_check_on_failure_action: 2
        name: name
        overlay_volumes:
        - destination: destination
          options:
          - options
          - options
          source: source
        - destination: destination
          options:
          - options
          - options
          source: source
        throttleWriteIOPSDevice:
          key:
            major: 6
            minor: 1
            rate: 5
        raw_image_name: raw_image_name
        network_options:
          key:
          - network_options
          - network_options
        timezone: timezone
        restart_tries: 9
        portmappings:
        - container_port: 6
          host_ip: host_ip
          protocol: protocol
          host_port: 7
          range: 1
        - container_port: 6
          host_ip: host_ip
          protocol: protocol
          host_port: 7
          range: 1
        manage_password: true
        pidns:
          nsmode: nsmode
          value: value
        remove: true
        timeout: 6
        devices_from:
        - devices_from
        - devices_from
        healthLogDestination: healthLogDestination
        personality:
          domain: domain
          flags:
          - null
          - null
        read_write_tmpfs: true
        procfs_opts:
        - procfs_opts
        - procfs_opts
        dns_search:
        - dns_search
        - dns_search
        utsns:
          nsmode: nsmode
          value: value
        mask:
        - mask
        - mask
        image_variant: image_variant
        base_hosts_file: base_hosts_file
        cap_drop:
        - cap_drop
        - cap_drop
        groups:
        - groups
        - groups
        volatile: true
        terminal: true
        env:
          key: env
        expose: "{}"
        unmask:
        - unmask
        - unmask
        command:
        - command
        - command
        idmappings:
          HostGIDMapping: true
          AutoUserNsOpts:
            PasswdFile: PasswdFile
            AdditionalGIDMappings:
            - size: 4
              container_id: 3
              host_id: 2
            - size: 4
              container_id: 3
              host_id: 2
            Size: 1
            InitialSize: 7
            AdditionalUIDMappings:
            - size: 4
              container_id: 3
              host_id: 2
            - size: 4
              container_id: 3
              host_id: 2
            GroupFile: GroupFile
          GIDMap:
          - size: 4
            container_id: 3
            host_id: 2
          - size: 4
            container_id: 3
            host_id: 2
          AutoUserNs: true
          UIDMap:
          - size: 4
            container_id: 3
            host_id: 2
          - size: 4
            container_id: 3
            host_id: 2
          HostUIDMapping: true
        startupHealthConfig:
          StartInterval: 1
          Test:
          - Test
          - Test
          Retries: 7
          Successes: 1
          Timeout: 6
          Interval: 4
          StartPeriod: 1
        apparmor_profile: apparmor_profile
        cgroup_parent: cgroup_parent
        rootfs: rootfs
        userns:
          nsmode: nsmode
          value: value
        unsetenv:
        - unsetenv
        - unsetenv
        user: user
        weightDevice:
          key:
            major: 7
            minor: 9
            leafWeight: 2
            weight: 3
      properties:
        Networks:
          additionalProperties:
            $ref: "#/components/schemas/PerNetworkOptions"
          description: |-
            Map of networks names or ids that the container should join.
            You can request additional settings for each network, you can
            set network aliases, static ips, static mac address  and the
            network interface name for this container on the specific network.
            If the map is empty and the bridge network mode is set the container
            will be joined to the default network.
            Optional.
          type: object
        annotations:
          additionalProperties:
            type: string
          description: |-
            Annotations are key-value options passed into the container runtime
            that can be used to trigger special behavior.
            Optional.
          type: object
          x-go-name: Annotations
        apparmor_profile:
          description: |-
            ApparmorProfile is the name of the Apparmor profile the container
            will use.
            Optional.
          type: string
          x-go-name: ApparmorProfile
        base_hosts_file:
          description: |-
            BaseHostsFile is the path to a hosts file, the entries from this file
            are added to the containers hosts file. As special value "image" is
            allowed which uses the /etc/hosts file from within the image and "none"
            which uses no base file at all. If it is empty we should default
            to the base_hosts_file configuration in containers.conf.
            Optional.
          type: string
          x-go-name: BaseHostsFile
        cap_add:
          description: |-
            CapAdd are capabilities which will be added to the container.
            Conflicts with Privileged.
            Optional.
          items:
            type: string
          type: array
          x-go-name: CapAdd
        cap_drop:
          description: |-
            CapDrop are capabilities which will be removed from the container.
            Conflicts with Privileged.
            Optional.
          items:
            type: string
          type: array
          x-go-name: CapDrop
        cgroup_parent:
          description: |-
            CgroupParent is the container's Cgroup parent.
            If not set, the default for the current cgroup driver will be used.
            Optional.
          type: string
          x-go-name: CgroupParent
        cgroupns:
          $ref: "#/components/schemas/Namespace"
        cgroups_mode:
          description: |-
            CgroupsMode sets a policy for how cgroups will be created for the
            container, including the ability to disable creation entirely.
            Optional.
          type: string
          x-go-name: CgroupsMode
        chroot_directories:
          description: |-
            ChrootDirs is an additional set of directories that need to be
            treated as root directories. Standard bind mounts will be mounted
            into paths relative to these directories.
            Optional.
          items:
            type: string
          type: array
          x-go-name: ChrootDirs
        cni_networks:
          description: |-
            CNINetworks is a list of CNI networks to join the container to.
            If this list is empty, the default CNI network will be joined
            instead. If at least one entry is present, we will not join the
            default network (unless it is part of this list).
            Only available if NetNS is set to bridge.
            Optional.
            Deprecated: as of podman 4.0 use "Networks" instead.
          items:
            type: string
          type: array
          x-go-name: CNINetworks
        command:
          description: |-
            Command is the container's command.
            If not given and Image is specified, this will be populated by the
            image's configuration.
            Optional.
          items:
            type: string
          type: array
          x-go-name: Command
        conmon_pid_file:
          description: |-
            ConmonPidFile is a path at which a PID file for Conmon will be
            placed.
            If not given, a default location will be used.
            Optional.
          type: string
          x-go-name: ConmonPidFile
        containerCreateCommand:
          description: |-
            ContainerCreateCommand is the command that was used to create this
            container.
            This will be shown in the output of Inspect() on the container, and
            may also be used by some tools that wish to recreate the container
            (e.g. `podman generate systemd --new`).
            Optional.
          items:
            type: string
          type: array
          x-go-name: ContainerCreateCommand
        create_working_dir:
          description: |-
            Create the working directory if it doesn't exist.
            If unset, it doesn't create it.
            Optional.
          type: boolean
          x-go-name: CreateWorkingDir
        dependencyContainers:
          description: |-
            DependencyContainers is an array of containers this container
            depends on. Dependency containers must be started before this
            container. Dependencies can be specified by name or full/partial ID.
            Optional.
          items:
            type: string
          type: array
          x-go-name: DependencyContainers
        device_cgroup_rule:
          description: |-
            DeviceCgroupRule are device cgroup rules that allow containers
            to use additional types of devices.
          items:
            $ref: "#/components/schemas/LinuxDeviceCgroup"
          type: array
          x-go-name: DeviceCgroupRule
        devices:
          description: |-
            Devices are devices that will be added to the container.
            Optional.
          items:
            $ref: "#/components/schemas/LinuxDevice"
          type: array
          x-go-name: Devices
        devices_from:
          description: |-
            DevicesFrom specifies that this container will mount the device(s) from other container(s).
            Optional.
          items:
            type: string
          type: array
          x-go-name: DevicesFrom
        dns_option:
          description: |-
            DNSOptions is a set of DNS options that will be used in the
            container's resolv.conf, replacing the host's DNS options which are
            used by default.
            Conflicts with UseImageResolvConf.
            Optional.
          items:
            type: string
          type: array
          x-go-name: DNSOptions
        dns_search:
          description: |-
            DNSSearch is a set of DNS search domains that will be used in the
            container's resolv.conf, replacing the host's DNS search domains
            which are used by default.
            Conflicts with UseImageResolvConf.
            Optional.
          items:
            type: string
          type: array
          x-go-name: DNSSearch
        dns_server:
          description: |-
            DNSServers is a set of DNS servers that will be used in the
            container's resolv.conf, replacing the host's DNS Servers which are
            used by default.
            Conflicts with UseImageResolvConf.
            Optional.
          items:
            type: string
          type: array
          x-go-name: DNSServers
        entrypoint:
          description: |-
            Entrypoint is the container's entrypoint.
            If not given and Image is specified, this will be populated by the
            image's configuration.
            Optional.
          items:
            type: string
          type: array
          x-go-name: Entrypoint
        env:
          additionalProperties:
            type: string
          description: |-
            Env is a set of environment variables that will be set in the
            container.
            Optional.
          type: object
          x-go-name: Env
        env_host:
          description: |-
            EnvHost indicates that the host environment should be added to container
            Optional.
          type: boolean
          x-go-name: EnvHost
        envmerge:
          description: |-
            EnvMerge takes the specified environment variables from image and preprocess them before injecting them into the
            container.
            Optional.
          items:
            type: string
          type: array
          x-go-name: EnvMerge
        expose:
          description: |-
            Expose is a number of ports that will be forwarded to the container
            if PublishExposedPorts is set.
            Expose is a map of uint16 (port number) to a string representing
            protocol i.e map[uint16]string. Allowed protocols are "tcp", "udp", and "sctp", or some
            combination of the three separated by commas.
            If protocol is set to "" we will assume TCP.
            Only available if NetNS is set to Bridge or Slirp, and
            PublishExposedPorts is set.
            Optional.
          type: object
          x-go-name: Expose
        group_entry:
          description: |-
            GroupEntry specifies an arbitrary string to append to the container's /etc/group file.
            Optional.
          type: string
          x-go-name: GroupEntry
        groups:
          description: |-
            Groups are a list of supplemental groups the container's user will
            be granted access to.
            Optional.
          items:
            type: string
          type: array
          x-go-name: Groups
        health_check_on_failure_action:
          description: |-
            HealthCheckOnFailureAction defines how Podman reacts when a container's health
            status turns unhealthy.
          format: int64
          type: integer
          x-go-package: github.com/containers/podman/v5/libpod/define
        healthLogDestination:
          description: HealthLogDestination defines the destination where the log
            is stored
          type: string
          x-go-name: HealthLogDestination
        healthMaxLogCount:
          description: |-
            HealthMaxLogCount is maximum number of attempts in the HealthCheck log file.
            ('0' value means an infinite number of attempts in the log file)
          format: uint64
          type: integer
          x-go-name: HealthMaxLogCount
        healthMaxLogSize:
          description: |-
            HealthMaxLogSize is the maximum length in characters of stored HealthCheck log
            ("0" value means an infinite log length)
          format: uint64
          type: integer
          x-go-name: HealthMaxLogSize
        healthconfig:
          $ref: "#/components/schemas/Schema2HealthConfig"
        host_device_list:
          description: HostDeviceList is used to recreate the mounted device on inherited
            containers
          items:
            $ref: "#/components/schemas/LinuxDevice"
          type: array
          x-go-name: HostDeviceList
        hostadd:
          description: |-
            HostAdd is a set of hosts which will be added to the container's
            etc/hosts file.
            Conflicts with UseImageHosts.
            Optional.
          items:
            type: string
          type: array
          x-go-name: HostAdd
        hostname:
          description: |-
            Hostname is the container's hostname. If not set, the hostname will
            not be modified (if UtsNS is not private) or will be set to the
            container ID (if UtsNS is private).
            Conflicts with UtsNS if UtsNS is not set to private.
            Optional.
          type: string
          x-go-name: Hostname
        hostusers:
          description: |-
            HostUsers is a list of host usernames or UIDs to add to the container
            etc/passwd file
          items:
            type: string
          type: array
          x-go-name: HostUsers
        httpproxy:
          description: |-
            EnvHTTPProxy indicates that the http host proxy environment variables
            should be added to container
            Optional.
          type: boolean
          x-go-name: HTTPProxy
        idmappings:
          $ref: "#/components/schemas/IDMappingOptions"
        image:
          description: |-
            Image is the image the container will be based on. The image will be
            used as the container's root filesystem, and its environment vars,
            volumes, and other configuration will be applied to the container.
            Conflicts with Rootfs.
            At least one of Image or Rootfs must be specified.
          type: string
          x-go-name: Image
        image_arch:
          description: |-
            ImageArch is the user-specified image architecture.
            Used to select a different variant from a manifest list.
            Optional.
          type: string
          x-go-name: ImageArch
        image_os:
          description: |-
            ImageOS is the user-specified OS of the image.
            Used to select a different variant from a manifest list.
            Optional.
          type: string
          x-go-name: ImageOS
        image_variant:
          description: |-
            ImageVariant is the user-specified image variant.
            Used to select a different variant from a manifest list.
            Optional.
          type: string
          x-go-name: ImageVariant
        image_volume_mode:
          description: |-
            ImageVolumeMode indicates how image volumes will be created.
            Supported modes are "ignore" (do not create), "tmpfs" (create as
            tmpfs), and "anonymous" (create as anonymous volumes).
            The default if unset is anonymous.
            Optional.
          type: string
          x-go-name: ImageVolumeMode
        image_volumes:
          description: |-
            Image volumes bind-mount a container-image mount into the container.
            Optional.
          items:
            $ref: "#/components/schemas/ImageVolume"
          type: array
          x-go-name: ImageVolumes
        init:
          description: |-
            Init specifies that an init binary will be mounted into the
            container, and will be used as PID1.
            Optional.
          type: boolean
          x-go-name: Init
        init_container_type:
          description: |-
            InitContainerType describes if this container is an init container
            and if so, what type: always or once.
            Optional.
          type: string
          x-go-name: InitContainerType
        init_path:
          description: |-
            InitPath specifies the path to the init binary that will be added if
            Init is specified above. If not specified, the default set in the
            Libpod config will be used. Ignored if Init above is not set.
            Optional.
          type: string
          x-go-name: InitPath
        intelRdt:
          $ref: "#/components/schemas/LinuxIntelRdt"
        ipcns:
          $ref: "#/components/schemas/Namespace"
        label_nested:
          description: |-
            LabelNested indicates whether or not the container is allowed to
            run fully nested containers including SELinux labelling.
            Optional.
          type: boolean
          x-go-name: LabelNested
        labels:
          additionalProperties:
            type: string
          description: |-
            Labels are key-value pairs that are used to add metadata to
            containers.
            Optional.
          type: object
          x-go-name: Labels
        log_configuration:
          $ref: "#/components/schemas/LogConfigLibpod"
        manage_password:
          description: Passwd is a container run option that determines if we are
            validating users/groups before running the container
          type: boolean
          x-go-name: Passwd
        mask:
          description: |-
            Mask is the path we want to mask in the container. This masks the paths
            given in addition to the default list.
            Optional
          items:
            type: string
          type: array
          x-go-name: Mask
        mounts:
          description: |-
            Mounts are mounts that will be added to the container.
            These will supersede Image Volumes and VolumesFrom volumes where
            there are conflicts.
            Optional.
          items:
            $ref: "#/components/schemas/Mount"
          type: array
          x-go-name: Mounts
        name:
          description: |-
            Name is the name the container will be given.
            If no name is provided, one will be randomly generated.
            Optional.
          type: string
          x-go-name: Name
        netns:
          $ref: "#/components/schemas/Namespace"
        network_options:
          additionalProperties:
            items:
              type: string
            type: array
          description: |-
            NetworkOptions are additional options for each network
            Optional.
          type: object
          x-go-name: NetworkOptions
        no_new_privileges:
          description: |-
            NoNewPrivileges is whether the container will set the no new
            privileges flag on create, which disables gaining additional
            privileges (e.g. via setuid) in the container.
            Optional.
          type: boolean
          x-go-name: NoNewPrivileges
        oci_runtime:
          description: |-
            OCIRuntime is the name of the OCI runtime that will be used to create
            the container.
            If not specified, the default will be used.
            Optional.
          type: string
          x-go-name: OCIRuntime
        oom_score_adj:
          description: |-
            OOMScoreAdj adjusts the score used by the OOM killer to determine
            processes to kill for the container's process.
            Optional.
          format: int64
          type: integer
          x-go-name: OOMScoreAdj
        overlay_volumes:
          description: |-
            Overlay volumes are named volumes that will be added to the container.
            Optional.
          items:
            $ref: "#/components/schemas/OverlayVolume"
          type: array
          x-go-name: OverlayVolumes
        passwd_entry:
          description: |-
            PasswdEntry specifies an arbitrary string to append to the container's /etc/passwd file.
            Optional.
          type: string
          x-go-name: PasswdEntry
        personality:
          $ref: "#/components/schemas/LinuxPersonality"
        pidns:
          $ref: "#/components/schemas/Namespace"
        pod:
          description: |-
            Pod is the ID of the pod the container will join.
            Optional.
          type: string
          x-go-name: Pod
        portmappings:
          description: |-
            PortBindings is a set of ports to map into the container.
            Only available if NetNS is set to bridge, slirp, or pasta.
            Optional.
          items:
            $ref: "#/components/schemas/PortMapping"
          type: array
          x-go-name: PortMappings
        privileged:
          description: |-
            Privileged is whether the container is privileged.
            Privileged does the following:
            Adds all devices on the system to the container.
            Adds all capabilities to the container.
            Disables Seccomp, SELinux, and Apparmor confinement.
            (Though SELinux can be manually re-enabled).
            TODO: this conflicts with things.
            TODO: this does more.
            Optional.
          type: boolean
          x-go-name: Privileged
        procfs_opts:
          description: ProcOpts are the options used for the proc mount.
          items:
            type: string
          type: array
          x-go-name: ProcOpts
        publish_image_ports:
          description: |-
            PublishExposedPorts will publish ports specified in the image to
            random unused ports (guaranteed to be above 1024) on the host.
            This is based on ports set in Expose below, and any ports specified
            by the Image (if one is given).
            Only available if NetNS is set to Bridge or Slirp.
            Optional.
          type: boolean
          x-go-name: PublishExposedPorts
        r_limits:
          description: |-
            Rlimits are POSIX rlimits to apply to the container.
            Optional.
          items:
            $ref: "#/components/schemas/POSIXRlimit"
          type: array
          x-go-name: Rlimits
        raw_image_name:
          description: |-
            RawImageName is the user-specified and unprocessed input referring
            to a local or a remote image.
            Optional, but strongly encouraged to be set if Image is set.
          type: string
          x-go-name: RawImageName
        read_only_filesystem:
          description: |-
            ReadOnlyFilesystem indicates that everything will be mounted
            as read-only.
            Optional.
          type: boolean
          x-go-name: ReadOnlyFilesystem
        read_write_tmpfs:
          description: |-
            ReadWriteTmpfs indicates that when running with a ReadOnlyFilesystem
            mount temporary file systems.
            Optional.
          type: boolean
          x-go-name: ReadWriteTmpfs
        remove:
          description: |-
            Remove indicates if the container should be removed once it has been started
            and exits.
            Optional.
          type: boolean
          x-go-name: Remove
        removeImage:
          description: |-
            RemoveImage indicates that the container should remove the image it
            was created from after it exits.
            Only allowed if Remove is set to true and Image, not Rootfs, is in
            use.
            Optional.
          type: boolean
          x-go-name: RemoveImage
        resource_limits:
          $ref: "#/components/schemas/LinuxResources"
        restart_policy:
          description: |-
            RestartPolicy is the container's restart policy - an action which
            will be taken when the container exits.
            If not given, the default policy, which does nothing, will be used.
            Optional.
          type: string
          x-go-name: RestartPolicy
        restart_tries:
          description: |-
            RestartRetries is the number of attempts that will be made to restart
            the container.
            Only available when RestartPolicy is set to "on-failure".
            Optional.
          format: uint64
          type: integer
          x-go-name: RestartRetries
        rootfs:
          description: |-
            Rootfs is the path to a directory that will be used as the
            container's root filesystem. No modification will be made to the
            directory, it will be directly mounted into the container as root.
            Conflicts with Image.
            At least one of Image or Rootfs must be specified.
          type: string
          x-go-name: Rootfs
        rootfs_mapping:
          description: |-
            RootfsMapping specifies if there are UID/GID mappings to apply to the rootfs.
            Optional.
          type: string
          x-go-name: RootfsMapping
        rootfs_overlay:
          description: |-
            RootfsOverlay tells if rootfs is actually an overlay on top of base path.
            Optional.
          type: boolean
          x-go-name: RootfsOverlay
        rootfs_propagation:
          description: |-
            RootfsPropagation is the rootfs propagation mode for the container.
            If not set, the default of rslave will be used.
            Optional.
          type: string
          x-go-name: RootfsPropagation
        sdnotifyMode:
          description: |-
            Determine how to handle the NOTIFY_SOCKET - do we participate or pass it through
            "container" - let the OCI runtime deal with it, advertise conmon's MAINPID
            "conmon-only" - advertise conmon's MAINPID, send READY when started, don't pass to OCI
            "ignore" - unset NOTIFY_SOCKET
            Optional.
          type: string
          x-go-name: SdNotifyMode
        seccomp_policy:
          description: |-
            SeccompPolicy determines which seccomp profile gets applied
            the container. valid values: empty,default,image
          type: string
          x-go-name: SeccompPolicy
        seccomp_profile_path:
          description: |-
            SeccompProfilePath is the path to a JSON file containing the
            container's Seccomp profile.
            If not specified, no Seccomp profile will be used.
            Optional.
          type: string
          x-go-name: SeccompProfilePath
        secret_env:
          additionalProperties:
            type: string
          description: |-
            EnvSecrets are secrets that will be set as environment variables
            Optional.
          type: object
          x-go-name: EnvSecrets
        secrets:
          description: |-
            Secrets are the secrets that will be added to the container
            Optional.
          items:
            $ref: "#/components/schemas/Secret"
          type: array
          x-go-name: Secrets
        selinux_opts:
          description: |-
            SelinuxProcessLabel is the process label the container will use.
            If SELinux is enabled and this is not specified, a label will be
            automatically generated if not specified.
            Optional.
          items:
            type: string
          type: array
          x-go-name: SelinuxOpts
        shm_size:
          description: |-
            ShmSize is the size of the tmpfs to mount in at /dev/shm, in bytes.
            Conflicts with ShmSize if IpcNS is not private.
            Optional.
          format: int64
          type: integer
          x-go-name: ShmSize
        shm_size_systemd:
          description: |-
            ShmSizeSystemd is the size of systemd-specific tmpfs mounts
            specifically /run, /run/lock, /var/log/journal and /tmp.
            Optional
          format: int64
          type: integer
          x-go-name: ShmSizeSystemd
        startupHealthConfig:
          $ref: "#/components/schemas/StartupHealthCheck"
        stdin:
          description: |-
            Stdin is whether the container will keep its STDIN open.
            Optional.
          type: boolean
          x-go-name: Stdin
        stop_signal:
          description: "It implements the [os.Signal] interface."
          format: int64
          title: A Signal is a number describing a process signal.
          type: integer
          x-go-package: syscall
        stop_timeout:
          description: |-
            StopTimeout is a timeout between the container's stop signal being
            sent and SIGKILL being sent.
            If not provided, the default will be used.
            If 0 is used, stop signal will not be sent, and SIGKILL will be sent
            instead.
            Optional.
          format: uint64
          type: integer
          x-go-name: StopTimeout
        storage_opts:
          additionalProperties:
            type: string
          description: |-
            StorageOpts is the container's storage options
            Optional.
          type: object
          x-go-name: StorageOpts
        sysctl:
          additionalProperties:
            type: string
          description: Sysctl sets kernel parameters for the container
          type: object
          x-go-name: Sysctl
        systemd:
          description: |-
            Systemd is whether the container will be started in systemd mode.
            Valid options are "true", "false", and "always".
            "true" enables this mode only if the binary run in the container is
            sbin/init or systemd. "always" unconditionally enables systemd mode.
            "false" unconditionally disables systemd mode.
            If enabled, mounts and stop signal will be modified.
            If set to "always" or set to "true" and conditionally triggered,
            conflicts with StopSignal.
            If not specified, "false" will be assumed.
            Optional.
          type: string
          x-go-name: Systemd
        terminal:
          description: |-
            Terminal is whether the container will create a PTY.
            Optional.
          type: boolean
          x-go-name: Terminal
        throttleReadBpsDevice:
          additionalProperties:
            $ref: "#/components/schemas/LinuxThrottleDevice"
          description: "IO read rate limit per cgroup per device, bytes per second"
          type: object
          x-go-name: ThrottleReadBpsDevice
        throttleReadIOPSDevice:
          additionalProperties:
            $ref: "#/components/schemas/LinuxThrottleDevice"
          description: "IO read rate limit per cgroup per device, IO per second"
          type: object
          x-go-name: ThrottleReadIOPSDevice
        throttleWriteBpsDevice:
          additionalProperties:
            $ref: "#/components/schemas/LinuxThrottleDevice"
          description: "IO write rate limit per cgroup per device, bytes per second"
          type: object
          x-go-name: ThrottleWriteBpsDevice
        throttleWriteIOPSDevice:
          additionalProperties:
            $ref: "#/components/schemas/LinuxThrottleDevice"
          description: "IO write rate limit per cgroup per device, IO per second"
          type: object
          x-go-name: ThrottleWriteIOPSDevice
        timeout:
          description: |-
            Timeout is a maximum time in seconds the container will run before
            main process is sent SIGKILL.
            If 0 is used, signal will not be sent. Container can run indefinitely
            if they do not stop after the default termination signal.
            Optional.
          format: uint64
          type: integer
          x-go-name: Timeout
        timezone:
          description: |-
            Timezone is the timezone inside the container.
            Local means it has the same timezone as the host machine
            Optional.
          type: string
          x-go-name: Timezone
        umask:
          description: Umask is the umask the init process of the container will be
            run with.
          type: string
          x-go-name: Umask
        unified:
          additionalProperties:
            type: string
          description: |-
            CgroupConf are key-value options passed into the container runtime
            that are used to configure cgroup v2.
            Optional.
          type: object
          x-go-name: CgroupConf
        unmask:
          description: |-
            Unmask a path in the container. Some paths are masked by default,
            preventing them from being accessed within the container; this undoes
            that masking. If ALL is passed, all paths will be unmasked.
            Optional.
          items:
            type: string
          type: array
          x-go-name: Unmask
        unsetenv:
          description: |-
            UnsetEnv unsets the specified default environment variables from the image or from built-in or containers.conf
            Optional.
          items:
            type: string
          type: array
          x-go-name: UnsetEnv
        unsetenvall:
          description: |-
            UnsetEnvAll unsetall default environment variables from the image or from built-in or containers.conf
            UnsetEnvAll unsets all default environment variables from the image or from built-in
            Optional.
          type: boolean
          x-go-name: UnsetEnvAll
        use_image_hosts:
          description: |-
            UseImageHosts indicates that /etc/hosts should not be managed by
            Podman, and instead sourced from the image.
            Conflicts with HostAdd.
            Optional.
          type: boolean
          x-go-name: UseImageHosts
        use_image_resolve_conf:
          description: |-
            UseImageResolvConf indicates that resolv.conf should not be managed
            by Podman, but instead sourced from the image.
            Conflicts with DNSServer, DNSSearch, DNSOption.
            Optional.
          type: boolean
          x-go-name: UseImageResolvConf
        user:
          description: |-
            User is the user the container will be run as.
            Can be given as a UID or a username; if a username, it will be
            resolved within the container, using the container's /etc/passwd.
            If unset, the container will be run as root.
            Optional.
          type: string
          x-go-name: User
        userns:
          $ref: "#/components/schemas/Namespace"
        utsns:
          $ref: "#/components/schemas/Namespace"
        volatile:
          description: |-
            Volatile specifies whether the container storage can be optimized
            at the cost of not syncing all the dirty files in memory.
            Optional.
          type: boolean
          x-go-name: Volatile
        volumes:
          description: |-
            Volumes are named volumes that will be added to the container.
            These will supersede Image Volumes and VolumesFrom volumes where
            there are conflicts.
            Optional.
          items:
            $ref: "#/components/schemas/NamedVolume"
          type: array
          x-go-name: Volumes
        volumes_from:
          description: |-
            VolumesFrom is a set of containers whose volumes will be added to
            this container. The name or ID of the container must be provided, and
            may optionally be followed by a : and then one or more
            comma-separated options. Valid options are 'ro', 'rw', and 'z'.
            Options will be used for all volumes sourced from the container.
            Optional.
          items:
            type: string
          type: array
          x-go-name: VolumesFrom
        weightDevice:
          additionalProperties:
            $ref: "#/components/schemas/LinuxWeightDevice"
          description: "Weight per cgroup per device, can override BlkioWeight"
          type: object
          x-go-name: WeightDevice
        work_dir:
          description: |-
            WorkDir is the container's working directory.
            If unset, the default, /, will be used.
            Optional.
          type: string
          x-go-name: WorkDir
      type: object
      x-go-package: github.com/containers/podman/v5/pkg/specgen
    StartupHealthCheck:
      example:
        StartInterval: 1
        Test:
        - Test
        - Test
        Retries: 7
        Successes: 1
        Timeout: 6
        Interval: 4
        StartPeriod: 1
      properties:
        Interval:
          description: |-
            A Duration represents the elapsed time between two instants
            as an int64 nanosecond count. The representation limits the
            largest representable duration to approximately 290 years.
          format: int64
          type: integer
          x-go-package: time
        Retries:
          description: |-
            Retries is the number of consecutive failures needed to consider a container as unhealthy.
            Zero means inherit.
          format: int64
          type: integer
        StartInterval:
          description: |-
            A Duration represents the elapsed time between two instants
            as an int64 nanosecond count. The representation limits the
            largest representable duration to approximately 290 years.
          format: int64
          type: integer
          x-go-package: time
        StartPeriod:
          description: |-
            A Duration represents the elapsed time between two instants
            as an int64 nanosecond count. The representation limits the
            largest representable duration to approximately 290 years.
          format: int64
          type: integer
          x-go-package: time
        Successes:
          description: |-
            Successes are the number of successes required to mark the startup HC
            as passed.
            If set to 0, a single success will mark the HC as passed.
          format: int64
          type: integer
        Test:
          description: |-
            Test is the test to perform to check that the container is healthy.
            An empty slice means to inherit the default.
            The options are:
            {} : inherit healthcheck
            {"NONE"} : disable healthcheck
            {"CMD", args...} : exec arguments directly
            {"CMD-SHELL", command} : run command with system's default shell
          items:
            type: string
          type: array
        Timeout:
          description: |-
            A Duration represents the elapsed time between two instants
            as an int64 nanosecond count. The representation limits the
            largest representable duration to approximately 290 years.
          format: int64
          type: integer
          x-go-package: time
      title: StartupHealthCheck is the configuration of a startup healthcheck.
      type: object
      x-go-package: github.com/containers/podman/v5/libpod/define
    StoreInfo:
      description: |-
        StoreInfo describes the container storage and its
        attributes
      example:
        graphStatus:
          key: graphStatus
        imageCopyTmpDir: imageCopyTmpDir
        graphDriverName: graphDriverName
        volumePath: volumePath
        transientStore: true
        runRoot: runRoot
        configFile: configFile
        containerStore:
          running: 7
          number: 2
          paused: 4
          stopped: 1
        graphRootAllocated: 1
        graphRoot: graphRoot
        graphOptions:
          key: "{}"
        imageStore:
          number: 6
        graphRootUsed: 1
      properties:
        configFile:
          type: string
          x-go-name: ConfigFile
        containerStore:
          $ref: "#/components/schemas/ContainerStore"
        graphDriverName:
          type: string
          x-go-name: GraphDriverName
        graphOptions:
          additionalProperties:
            type: object
          type: object
          x-go-name: GraphOptions
        graphRoot:
          type: string
          x-go-name: GraphRoot
        graphRootAllocated:
          description: GraphRootAllocated is how much space the graphroot has in bytes
          format: uint64
          type: integer
          x-go-name: GraphRootAllocated
        graphRootUsed:
          description: GraphRootUsed is how much of graphroot is used in bytes
          format: uint64
          type: integer
          x-go-name: GraphRootUsed
        graphStatus:
          additionalProperties:
            type: string
          type: object
          x-go-name: GraphStatus
        imageCopyTmpDir:
          type: string
          x-go-name: ImageCopyTmpDir
        imageStore:
          $ref: "#/components/schemas/ImageStore"
        runRoot:
          type: string
          x-go-name: RunRoot
        transientStore:
          type: boolean
          x-go-name: TransientStore
        volumePath:
          type: string
          x-go-name: VolumePath
      type: object
      x-go-package: github.com/containers/podman/v5/libpod/define
    StrSlice:
      description: We need to override the json decoder to accept both options.
      items:
        type: string
      title: StrSlice represents a string or an array of strings.
      type: array
      x-go-package: github.com/docker/docker/api/types/strslice
    Subnet:
      example:
        subnet: subnet
        lease_range:
          start_ip: start_ip
          end_ip: end_ip
        gateway: gateway
      properties:
        gateway:
          description: Gateway IP for this Network.
          format: string
          type: string
          x-go-name: Gateway
        lease_range:
          $ref: "#/components/schemas/LeaseRange"
        subnet:
          description: Subnet for this Network in CIDR form.
          format: string
          type: string
          x-go-name: Subnet
      type: object
      x-go-package: github.com/containers/common/libnetwork/types
    Summary:
      example:
        ParentId: ParentId
        RepoDigests:
        - RepoDigests
        - RepoDigests
        SharedSize: 9
        VirtualSize: 2
        RepoTags:
        - RepoTags
        - RepoTags
        Size: 3
        Containers: 0
        Labels:
          key: Labels
        Manifests:
        - AttestationData:
            For: For
          ImageData:
            Platform:
              os: os
              os.features:
              - os.features
              - os.features
              variant: variant
              architecture: architecture
              os.version: os.version
            Size:
              Unpacked: 5
            Containers:
            - Containers
            - Containers
          Size:
            Content: 2
            Total: 7
          Kind: Kind
          Descriptor:
            artifactType: artifactType
            urls:
            - urls
            - urls
            data:
            - 1
            - 1
            size: 5
            digest: digest
            annotations:
              key: annotations
            mediaType: mediaType
            platform:
              os: os
              os.features:
              - os.features
              - os.features
              variant: variant
              architecture: architecture
              os.version: os.version
          Available: true
          ID: ID
        - AttestationData:
            For: For
          ImageData:
            Platform:
              os: os
              os.features:
              - os.features
              - os.features
              variant: variant
              architecture: architecture
              os.version: os.version
            Size:
              Unpacked: 5
            Containers:
            - Containers
            - Containers
          Size:
            Content: 2
            Total: 7
          Kind: Kind
          Descriptor:
            artifactType: artifactType
            urls:
            - urls
            - urls
            data:
            - 1
            - 1
            size: 5
            digest: digest
            annotations:
              key: annotations
            mediaType: mediaType
            platform:
              os: os
              os.features:
              - os.features
              - os.features
              variant: variant
              architecture: architecture
              os.version: os.version
          Available: true
          ID: ID
        Id: Id
        Created: 6
      properties:
        Containers:
          description: |-
            Number of containers using this image. Includes both stopped and running
            containers.

            This size is not calculated by default, and depends on which API endpoint
            is used. `-1` indicates that the value has not been set / calculated.
          format: int64
          type: integer
        Created:
          description: |-
            Date and time at which the image was created as a Unix timestamp
            (number of seconds since EPOCH).
          format: int64
          type: integer
        Id:
          description: |-
            ID is the content-addressable ID of an image.

            This identifier is a content-addressable digest calculated from the
            image's configuration (which includes the digests of layers used by
            the image).

            Note that this digest differs from the `RepoDigests` below, which
            holds digests of image manifests that reference the image.
          type: string
          x-go-name: ID
        Labels:
          additionalProperties:
            type: string
          description: User-defined key/value metadata.
          type: object
        Manifests:
          description: |-
            Manifests is a list of image manifests available in this image.  It
            provides a more detailed view of the platform-specific image manifests or
            other image-attached data like build attestations.

            WARNING: This is experimental and may change at any time without any backward
            compatibility.
          items:
            $ref: "#/components/schemas/ManifestSummary"
          type: array
        ParentId:
          description: |-
            ID of the parent image.

            Depending on how the image was created, this field may be empty and
            is only set for images that were built/created locally. This field
            is empty if the image was pulled from an image registry.
          type: string
          x-go-name: ParentID
        RepoDigests:
          description: |-
            List of content-addressable digests of locally available image manifests
            that the image is referenced from. Multiple manifests can refer to the
            same image.

            These digests are usually only available if the image was either pulled
            from a registry, or if the image was pushed to a registry, which is when
            the manifest is generated and its digest calculated.
          items:
            type: string
          type: array
        RepoTags:
          description: |-
            List of image names/tags in the local image cache that reference this
            image.

            Multiple image tags can refer to the same image, and this list may be
            empty if no tags reference the image, in which case the image is
            "untagged", in which case it can still be referenced by its ID.
          items:
            type: string
          type: array
        SharedSize:
          description: |-
            Total size of image layers that are shared between this image and other
            images.

            This size is not calculated by default. `-1` indicates that the value
            has not been set / calculated.
          format: int64
          type: integer
        Size:
          description: Total size of the image including all layers it is composed
            of.
          format: int64
          type: integer
        VirtualSize:
          description: |-
            Total size of the image including all layers it is composed of.

            Deprecated: this field is omitted in API v1.44, but kept for backward compatibility. Use Size instead.
          format: int64
          type: integer
      required:
      - Containers
      - Created
      - Id
      - Labels
      - ParentId
      - RepoDigests
      - RepoTags
      - SharedSize
      - Size
      type: object
      x-go-package: github.com/docker/docker/api/types/image
    SummaryNetworkSettings:
      description: |-
        SummaryNetworkSettings provides a summary of container's networks
        in /containers/json
      example:
        Networks:
          key:
            GlobalIPv6Address: GlobalIPv6Address
            GlobalIPv6PrefixLen: 7
            IPPrefixLen: 6
            Aliases:
            - Aliases
            - Aliases
            MacAddress: MacAddress
            NetworkID: NetworkID
            DNSNames:
            - DNSNames
            - DNSNames
            IPAMConfig:
              LinkLocalIPs:
              - LinkLocalIPs
              - LinkLocalIPs
              IPv6Address: IPv6Address
              IPv4Address: IPv4Address
            DriverOpts:
              key: DriverOpts
            Gateway: Gateway
            EndpointID: EndpointID
            Links:
            - Links
            - Links
            IPv6Gateway: IPv6Gateway
            IPAddress: IPAddress
      properties:
        Networks:
          additionalProperties:
            $ref: "#/components/schemas/EndpointSettings"
          type: object
      type: object
      x-go-package: github.com/docker/docker/api/types
    SystemCheckReport:
      description: |-
        SystemCheckReport provides a report of what a storage consistency check
        found, and if we removed anything that was damaged, what we removed.
      example:
        Errors: true
        ROLayers:
          key:
          - ROLayers
          - ROLayers
        RemovedContainers:
          key: RemovedContainers
        RemovedLayers:
        - RemovedLayers
        - RemovedLayers
        Images:
          key:
          - Images
          - Images
        Containers:
          key:
          - Containers
          - Containers
        ROImages:
          key:
          - ROImages
          - ROImages
        Layers:
          key:
          - Layers
          - Layers
        RemovedImages:
          key:
          - RemovedImages
          - RemovedImages
      properties:
        Containers:
          additionalProperties:
            items:
              type: string
            type: array
          type: object
        Errors:
          type: boolean
        Images:
          additionalProperties:
            items:
              type: string
            type: array
          type: object
        Layers:
          additionalProperties:
            items:
              type: string
            type: array
          type: object
        ROImages:
          additionalProperties:
            items:
              type: string
            type: array
          type: object
        ROLayers:
          additionalProperties:
            items:
              type: string
            type: array
          type: object
        RemovedContainers:
          additionalProperties:
            type: string
          type: object
        RemovedImages:
          additionalProperties:
            items:
              type: string
            type: array
          type: object
        RemovedLayers:
          items:
            type: string
          type: array
      type: object
      x-go-package: github.com/containers/podman/v5/pkg/domain/entities/types
    SystemComponentVersion:
      description: SystemComponentVersion is the type used by pkg/domain/entities
      example:
        Components:
        - Details:
            key: Details
          Version: Version
          Name: Name
        - Details:
            key: Details
          Version: Version
          Name: Name
        KernelVersion: KernelVersion
        ApiVersion: ApiVersion
        GitCommit: GitCommit
        Os: Os
        Platform:
          Name: Name
        Version: Version
        Experimental: true
        MinAPIVersion: MinAPIVersion
        Arch: Arch
        GoVersion: GoVersion
        BuildTime: BuildTime
      properties:
        ApiVersion:
          type: string
          x-go-name: APIVersion
        Arch:
          type: string
        BuildTime:
          type: string
        Components:
          items:
            $ref: "#/components/schemas/ComponentVersion"
          type: array
        Experimental:
          type: boolean
        GitCommit:
          type: string
        GoVersion:
          type: string
        KernelVersion:
          type: string
        MinAPIVersion:
          type: string
        Os:
          type: string
        Platform:
          $ref: "#/components/schemas/SystemComponentVersion_Platform"
        Version:
          type: string
      type: object
      x-go-package: github.com/containers/podman/v5/pkg/domain/entities/types
    SystemDfContainerReport:
      description: SystemDfContainerReport describes a container for use with df
      example:
        Names: Names
        Status: Status
        Command:
        - Command
        - Command
        ContainerID: ContainerID
        Size: 1
        RWSize: 6
        LocalVolumes: 0
        Image: Image
        Created: 2000-01-23T04:56:07.000+00:00
      properties:
        Command:
          items:
            type: string
          type: array
        ContainerID:
          type: string
        Created:
          format: date-time
          type: string
        Image:
          type: string
        LocalVolumes:
          format: int64
          type: integer
        Names:
          type: string
        RWSize:
          format: int64
          type: integer
        Size:
          format: int64
          type: integer
        Status:
          type: string
      type: object
      x-go-package: github.com/containers/podman/v5/pkg/domain/entities/types
    SystemDfImageReport:
      description: SystemDfImageReport describes an image for use with df
      example:
        SharedSize: 5
        UniqueSize: 7
        Repository: Repository
        Size: 2
        Containers: 5
        ImageID: ImageID
        Tag: Tag
        Created: 2000-01-23T04:56:07.000+00:00
      properties:
        Containers:
          format: int64
          type: integer
        Created:
          format: date-time
          type: string
        ImageID:
          type: string
        Repository:
          type: string
        SharedSize:
          format: int64
          type: integer
        Size:
          format: int64
          type: integer
        Tag:
          type: string
        UniqueSize:
          format: int64
          type: integer
      type: object
      x-go-package: github.com/containers/podman/v5/pkg/domain/entities/types
    SystemDfReport:
      description: SystemDfReport describes the response for df information
      example:
        Volumes:
        - VolumeName: VolumeName
          ReclaimableSize: 2
          Size: 4
          Links: 3
        - VolumeName: VolumeName
          ReclaimableSize: 2
          Size: 4
          Links: 3
        ImagesSize: 9
        Images:
        - SharedSize: 5
          UniqueSize: 7
          Repository: Repository
          Size: 2
          Containers: 5
          ImageID: ImageID
          Tag: Tag
          Created: 2000-01-23T04:56:07.000+00:00
        - SharedSize: 5
          UniqueSize: 7
          Repository: Repository
          Size: 2
          Containers: 5
          ImageID: ImageID
          Tag: Tag
          Created: 2000-01-23T04:56:07.000+00:00
        Containers:
        - Names: Names
          Status: Status
          Command:
          - Command
          - Command
          ContainerID: ContainerID
          Size: 1
          RWSize: 6
          LocalVolumes: 0
          Image: Image
          Created: 2000-01-23T04:56:07.000+00:00
        - Names: Names
          Status: Status
          Command:
          - Command
          - Command
          ContainerID: ContainerID
          Size: 1
          RWSize: 6
          LocalVolumes: 0
          Image: Image
          Created: 2000-01-23T04:56:07.000+00:00
      properties:
        Containers:
          items:
            $ref: "#/components/schemas/SystemDfContainerReport"
          type: array
        Images:
          items:
            $ref: "#/components/schemas/SystemDfImageReport"
          type: array
        ImagesSize:
          format: int64
          type: integer
        Volumes:
          items:
            $ref: "#/components/schemas/SystemDfVolumeReport"
          type: array
      type: object
      x-go-package: github.com/containers/podman/v5/pkg/domain/entities/types
    SystemDfVolumeReport:
      description: SystemDfVolumeReport describes a volume and its size
      example:
        VolumeName: VolumeName
        ReclaimableSize: 2
        Size: 4
        Links: 3
      properties:
        Links:
          format: int64
          type: integer
        ReclaimableSize:
          format: int64
          type: integer
        Size:
          format: int64
          type: integer
        VolumeName:
          type: string
      type: object
      x-go-package: github.com/containers/podman/v5/pkg/domain/entities/types
    SystemPruneReport:
      example:
        VolumePruneReports:
        - Err: Err
          Size: 0
          Id: Id
        - Err: Err
          Size: 0
          Id: Id
        PodPruneReport:
        - Err: Err
          Id: Id
        - Err: Err
          Id: Id
        NetworkPruneReports:
        - Error: Error
          Name: Name
        - Error: Error
          Name: Name
        ContainerPruneReports:
        - Err: Err
          Size: 0
          Id: Id
        - Err: Err
          Size: 0
          Id: Id
        ImagePruneReports:
        - Err: Err
          Size: 0
          Id: Id
        - Err: Err
          Size: 0
          Id: Id
        ReclaimedSpace: 0
      properties:
        ContainerPruneReports:
          items:
            $ref: "#/components/schemas/PruneReport"
          type: array
        ImagePruneReports:
          items:
            $ref: "#/components/schemas/PruneReport"
          type: array
        NetworkPruneReports:
          items:
            $ref: "#/components/schemas/NetworkPruneReport"
          type: array
        PodPruneReport:
          items:
            $ref: "#/components/schemas/PodPruneReport"
          type: array
        ReclaimedSpace:
          format: uint64
          type: integer
        VolumePruneReports:
          items:
            $ref: "#/components/schemas/PruneReport"
          type: array
      title: SystemPruneReport provides report after system prune is executed.
      type: object
      x-go-package: github.com/containers/podman/v5/pkg/domain/entities/types
    Task:
      description: Task carries the information about one backend task
      example:
        EndpointID: EndpointID
        EndpointIP: EndpointIP
        Info:
          key: Info
        Name: Name
      properties:
        EndpointID:
          type: string
        EndpointIP:
          type: string
        Info:
          additionalProperties:
            type: string
          type: object
        Name:
          type: string
      type: object
      x-go-package: github.com/docker/docker/api/types/network
    ThrottleDevice:
      description: ThrottleDevice is a structure that holds device:rate_per_second
        pair
      example:
        Path: Path
        Rate: 7
      properties:
        Path:
          type: string
        Rate:
          format: uint64
          type: integer
      type: object
      x-go-package: github.com/docker/docker/api/types/blkiodev
    TmpfsOptions:
      example:
        Options:
        - - Options
          - Options
        - - Options
          - Options
        Mode: 3
        SizeBytes: 6
      properties:
        Mode:
          description: |-
            The bits have the same definition on all systems, so that
            information about files can be moved from one system
            to another portably. Not all bits apply to all systems.
            The only required bit is [ModeDir] for directories.
          format: uint32
          title: A FileMode represents a file's mode and permission bits.
          type: integer
          x-go-package: io/fs
        Options:
          description: |-
            Options to be passed to the tmpfs mount. An array of arrays. Flag
            options should be provided as 1-length arrays. Other types should be
            provided as 2-length arrays, where the first item is the key and the
            second the value.
          items:
            items:
              type: string
            type: array
          type: array
        SizeBytes:
          description: |-
            Size sets the size of the tmpfs, in bytes.

            This will be converted to an operating system specific value
            depending on the host. For example, on linux, it will be converted to
            use a 'k', 'm' or 'g' syntax. BSD, though not widely supported with
            docker, uses a straight byte value.

            Percentages are not supported.
          format: int64
          type: integer
      title: TmpfsOptions defines options specific to mounts of type "tmpfs".
      type: object
      x-go-package: github.com/docker/docker/api/types/mount
    Topology:
      description: |-
        This description is taken verbatim from the CSI Spec:

        A topological domain is a sub-division of a cluster, like "region",
        "zone", "rack", etc.
        A topological segment is a specific instance of a topological domain,
        like "zone3", "rack3", etc.
        For example {"com.company/zone": "Z1", "com.company/rack": "R3"}
        Valid keys have two segments: an OPTIONAL prefix and name, separated
        by a slash (/), for example: "com.company.example/zone".
        The key name segment is REQUIRED. The prefix is OPTIONAL.
        The key name MUST be 63 characters or less, begin and end with an
        alphanumeric character ([a-z0-9A-Z]), and contain only dashes (-),
        underscores (_), dots (.), or alphanumerics in between, for example
        "zone".
        The key prefix MUST be 63 characters or less, begin and end with a
        lower-case alphanumeric character ([a-z0-9]), contain only
        dashes (-), dots (.), or lower-case alphanumerics in between, and
        follow domain name notation format
        (https://tools.ietf.org/html/rfc1035#section-2.3.1).
        The key prefix SHOULD include the plugin's host company name and/or
        the plugin name, to minimize the possibility of collisions with keys
        from other plugins.
        If a key prefix is specified, it MUST be identical across all
        topology keys returned by the SP (across all RPCs).
        Keys MUST be case-insensitive. Meaning the keys "Zone" and "zone"
        MUST not both exist.
        Each value (topological segment) MUST contain 1 or more strings.
        Each string MUST be 63 characters or less and begin and end with an
        alphanumeric character with '-', '_', '.', or alphanumerics in
        between.
      example:
        Segments:
          key: Segments
      properties:
        Segments:
          additionalProperties:
            type: string
          type: object
      title: Topology is a map of topological domains to topological segments.
      type: object
      x-go-package: github.com/docker/docker/api/types/volume
    TopologyRequirement:
      description: |-
        TopologyRequirement expresses the user's requirements for a volume's
        accessible topology.
      example:
        Preferred:
        - Segments:
            key: Segments
        - Segments:
            key: Segments
        Requisite:
        - Segments:
            key: Segments
        - Segments:
            key: Segments
      properties:
        Preferred:
          description: |-
            Preferred is a list of Topologies that the volume should attempt to be
            provisioned in.

            Taken from the CSI spec:

            Specifies the list of topologies the CO would prefer the volume to
            be provisioned in.

            This field is OPTIONAL. If TopologyRequirement is specified either
            requisite or preferred or both MUST be specified.

            An SP MUST attempt to make the provisioned volume available using
            the preferred topologies in order from first to last.

            If requisite is specified, all topologies in preferred list MUST
            also be present in the list of requisite topologies.

            If the SP is unable to make the provisioned volume available
            from any of the preferred topologies, the SP MAY choose a topology
            from the list of requisite topologies.
            If the list of requisite topologies is not specified, then the SP
            MAY choose from the list of all possible topologies.
            If the list of requisite topologies is specified and the SP is
            unable to make the provisioned volume available from any of the
            requisite topologies it MUST fail the CreateVolume call.

            Example 1:
            Given a volume should be accessible from a single zone, and
            requisite =
            {"region": "R1", "zone": "Z2"},
            {"region": "R1", "zone": "Z3"}
            preferred =
            {"region": "R1", "zone": "Z3"}
            then the SP SHOULD first attempt to make the provisioned volume
            available from "zone" "Z3" in the "region" "R1" and fall back to
            "zone" "Z2" in the "region" "R1" if that is not possible.

            Example 2:
            Given a volume should be accessible from a single zone, and
            requisite =
            {"region": "R1", "zone": "Z2"},
            {"region": "R1", "zone": "Z3"},
            {"region": "R1", "zone": "Z4"},
            {"region": "R1", "zone": "Z5"}
            preferred =
            {"region": "R1", "zone": "Z4"},
            {"region": "R1", "zone": "Z2"}
            then the SP SHOULD first attempt to make the provisioned volume
            accessible from "zone" "Z4" in the "region" "R1" and fall back to
            "zone" "Z2" in the "region" "R1" if that is not possible. If that
            is not possible, the SP may choose between either the "zone"
            "Z3" or "Z5" in the "region" "R1".

            Example 3:
            Given a volume should be accessible from TWO zones (because an
            opaque parameter in CreateVolumeRequest, for example, specifies
            the volume is accessible from two zones, aka synchronously
            replicated), and
            requisite =
            {"region": "R1", "zone": "Z2"},
            {"region": "R1", "zone": "Z3"},
            {"region": "R1", "zone": "Z4"},
            {"region": "R1", "zone": "Z5"}
            preferred =
            {"region": "R1", "zone": "Z5"},
            {"region": "R1", "zone": "Z3"}
            then the SP SHOULD first attempt to make the provisioned volume
            accessible from the combination of the two "zones" "Z5" and "Z3" in
            the "region" "R1". If that's not possible, it should fall back to
            a combination of "Z5" and other possibilities from the list of
            requisite. If that's not possible, it should fall back  to a
            combination of "Z3" and other possibilities from the list of
            requisite. If that's not possible, it should fall back  to a
            combination of other possibilities from the list of requisite.
          items:
            $ref: "#/components/schemas/Topology"
          type: array
        Requisite:
          description: |-
            Requisite specifies a list of Topologies, at least one of which the
            volume must be accessible from.

            Taken verbatim from the CSI Spec:

            Specifies the list of topologies the provisioned volume MUST be
            accessible from.
            This field is OPTIONAL. If TopologyRequirement is specified either
            requisite or preferred or both MUST be specified.

            If requisite is specified, the provisioned volume MUST be
            accessible from at least one of the requisite topologies.

            Given
            x = number of topologies provisioned volume is accessible from
            n = number of requisite topologies
            The CO MUST ensure n >= 1. The SP MUST ensure x >= 1
            If x==n, then the SP MUST make the provisioned volume available to
            all topologies from the list of requisite topologies. If it is
            unable to do so, the SP MUST fail the CreateVolume call.
            For example, if a volume should be accessible from a single zone,
            and requisite =
            {"region": "R1", "zone": "Z2"}
            then the provisioned volume MUST be accessible from the "region"
            "R1" and the "zone" "Z2".
            Similarly, if a volume should be accessible from two zones, and
            requisite =
            {"region": "R1", "zone": "Z2"},
            {"region": "R1", "zone": "Z3"}
            then the provisioned volume MUST be accessible from the "region"
            "R1" and both "zone" "Z2" and "zone" "Z3".

            If x<n, then the SP SHALL choose x unique topologies from the list
            of requisite topologies. If it is unable to do so, the SP MUST fail
            the CreateVolume call.
            For example, if a volume should be accessible from a single zone,
            and requisite =
            {"region": "R1", "zone": "Z2"},
            {"region": "R1", "zone": "Z3"}
            then the SP may choose to make the provisioned volume available in
            either the "zone" "Z2" or the "zone" "Z3" in the "region" "R1".
            Similarly, if a volume should be accessible from two zones, and
            requisite =
            {"region": "R1", "zone": "Z2"},
            {"region": "R1", "zone": "Z3"},
            {"region": "R1", "zone": "Z4"}
            then the provisioned volume MUST be accessible from any combination
            of two unique topologies: e.g. "R1/Z2" and "R1/Z3", or "R1/Z2" and
            "R1/Z4", or "R1/Z3" and "R1/Z4".

            If x>n, then the SP MUST make the provisioned volume available from
            all topologies from the list of requisite topologies and MAY choose
            the remaining x-n unique topologies from the list of all possible
            topologies. If it is unable to do so, the SP MUST fail the
            CreateVolume call.
            For example, if a volume should be accessible from two zones, and
            requisite =
            {"region": "R1", "zone": "Z2"}
            then the provisioned volume MUST be accessible from the "region"
            "R1" and the "zone" "Z2" and the SP may select the second zone
            independently, e.g. "R1/Z4".
          items:
            $ref: "#/components/schemas/Topology"
          type: array
      type: object
      x-go-package: github.com/docker/docker/api/types/volume
    Type:
      title: Type represents the type of a mount.
      type: string
      x-go-package: github.com/docker/docker/api/types/mount
    TypeBlock:
      description: Intentionally empty.
      title: TypeBlock defines options for using a volume as a block-type volume.
      type: object
      x-go-package: github.com/docker/docker/api/types/volume
    TypeMount:
      description: |-
        TypeMount contains options for using a volume as a Mount-type
        volume.
      example:
        MountFlags:
        - MountFlags
        - MountFlags
        FsType: FsType
      properties:
        FsType:
          description: FsType specifies the filesystem type for the mount volume.
            Optional.
          type: string
        MountFlags:
          description: MountFlags defines flags to pass when mounting the volume.
            Optional.
          items:
            type: string
          type: array
      type: object
      x-go-package: github.com/docker/docker/api/types/volume
    UTSMode:
      title: UTSMode represents the UTS namespace of the container.
      type: string
      x-go-package: github.com/docker/docker/api/types/container
    Ulimit:
      example:
        Hard: 6
        Soft: 3
        Name: Name
      properties:
        Hard:
          format: int64
          type: integer
        Name:
          type: string
        Soft:
          format: int64
          type: integer
      title: Ulimit is a human friendly version of Rlimit.
      type: object
      x-go-package: github.com/docker/go-units
    UpdateConfig:
      description: Those attributes can be updated at runtime.
      example:
        DeviceRequests:
        - DeviceIDs:
          - DeviceIDs
          - DeviceIDs
          Options:
            key: Options
          Capabilities:
          - - Capabilities
            - Capabilities
          - - Capabilities
            - Capabilities
          Driver: Driver
          Count: 1
        - DeviceIDs:
          - DeviceIDs
          - DeviceIDs
          Options:
            key: Options
          Capabilities:
          - - Capabilities
            - Capabilities
          - - Capabilities
            - Capabilities
          Driver: Driver
          Count: 1
        BlkioWeightDevice:
        - Path: Path
          Weight: 3
        - Path: Path
          Weight: 3
        OomKillDisable: true
        IOMaximumBandwidth: 3
        Memory: 1
        CpuPeriod: 5
        KernelMemoryTCP: 7
        Devices:
        - CgroupPermissions: CgroupPermissions
          PathInContainer: PathInContainer
          PathOnHost: PathOnHost
        - CgroupPermissions: CgroupPermissions
          PathInContainer: PathInContainer
          PathOnHost: PathOnHost
        MemorySwappiness: 6
        BlkioWeight: 0
        CpuPercent: 1
        IOMaximumIOps: 2
        CpuCount: 6
        DeviceCgroupRules:
        - DeviceCgroupRules
        - DeviceCgroupRules
        Ulimits:
        - Hard: 6
          Soft: 3
          Name: Name
        - Hard: 6
          Soft: 3
          Name: Name
        CpusetCpus: CpusetCpus
        CpuRealtimePeriod: 2
        MemoryReservation: 1
        BlkioDeviceWriteIOps:
        - Path: Path
          Rate: 7
        - Path: Path
          Rate: 7
        CpusetMems: CpusetMems
        BlkioDeviceWriteBps:
        - Path: Path
          Rate: 7
        - Path: Path
          Rate: 7
        RestartPolicy:
          MaximumRetryCount: 6
          Name: Name
        CpuQuota: 5
        CpuRealtimeRuntime: 7
        BlkioDeviceReadBps:
        - Path: Path
          Rate: 7
        - Path: Path
          Rate: 7
        CgroupParent: CgroupParent
        CpuShares: 9
        NanoCpus: 7
        MemorySwap: 1
        PidsLimit: 1
        BlkioDeviceReadIOps:
        - Path: Path
          Rate: 7
        - Path: Path
          Rate: 7
        KernelMemory: 4
      properties:
        BlkioDeviceReadBps:
          items:
            $ref: "#/components/schemas/ThrottleDevice"
          type: array
        BlkioDeviceReadIOps:
          items:
            $ref: "#/components/schemas/ThrottleDevice"
          type: array
        BlkioDeviceWriteBps:
          items:
            $ref: "#/components/schemas/ThrottleDevice"
          type: array
        BlkioDeviceWriteIOps:
          items:
            $ref: "#/components/schemas/ThrottleDevice"
          type: array
        BlkioWeight:
          format: uint16
          type: integer
        BlkioWeightDevice:
          items:
            $ref: "#/components/schemas/WeightDevice"
          type: array
        CgroupParent:
          description: Applicable to UNIX platforms
          type: string
        CpuCount:
          description: Applicable to Windows
          format: int64
          type: integer
          x-go-name: CPUCount
        CpuPercent:
          format: int64
          type: integer
          x-go-name: CPUPercent
        CpuPeriod:
          format: int64
          type: integer
          x-go-name: CPUPeriod
        CpuQuota:
          format: int64
          type: integer
          x-go-name: CPUQuota
        CpuRealtimePeriod:
          format: int64
          type: integer
          x-go-name: CPURealtimePeriod
        CpuRealtimeRuntime:
          format: int64
          type: integer
          x-go-name: CPURealtimeRuntime
        CpuShares:
          description: Applicable to all platforms
          format: int64
          type: integer
          x-go-name: CPUShares
        CpusetCpus:
          type: string
        CpusetMems:
          type: string
        DeviceCgroupRules:
          items:
            type: string
          type: array
        DeviceRequests:
          items:
            $ref: "#/components/schemas/DeviceRequest"
          type: array
        Devices:
          items:
            $ref: "#/components/schemas/DeviceMapping"
          type: array
        IOMaximumBandwidth:
          format: uint64
          type: integer
        IOMaximumIOps:
          format: uint64
          type: integer
        KernelMemory:
          description: |-
            KernelMemory specifies the kernel memory limit (in bytes) for the container.
            Deprecated: kernel 5.4 deprecated kmem.limit_in_bytes.
          format: int64
          type: integer
        KernelMemoryTCP:
          format: int64
          type: integer
        Memory:
          format: int64
          type: integer
        MemoryReservation:
          format: int64
          type: integer
        MemorySwap:
          format: int64
          type: integer
        MemorySwappiness:
          format: int64
          type: integer
        NanoCpus:
          format: int64
          type: integer
          x-go-name: NanoCPUs
        OomKillDisable:
          type: boolean
        PidsLimit:
          format: int64
          type: integer
        RestartPolicy:
          $ref: "#/components/schemas/RestartPolicy"
        Ulimits:
          items:
            $ref: "#/components/schemas/Ulimit"
          type: array
      title: UpdateConfig holds the mutable attributes of a Container.
      type: object
      x-go-package: github.com/docker/docker/api/types/container
    UpdateEntities:
      description: UpdateEntities used to wrap the oci resource spec in a swagger
        model
      example:
        Resources:
          memory:
            swappiness: 9
            checkBeforeUpdate: true
            swap: 8
            useHierarchy: true
            kernel: 5
            disableOOMKiller: true
            limit: 9
            reservation: 6
            kernelTCP: 9
          rdma:
            key:
              hcaObjects: 2
              hcaHandles: 1
          devices:
          - allow: true
            access: access
            major: 7
            minor: 1
            type: type
          - allow: true
            access: access
            major: 7
            minor: 1
            type: type
          unified:
            key: unified
          cpu:
            shares: 6
            period: 7
            cpus: cpus
            idle: 4
            quota: 1
            burst: 2
            realtimePeriod: 1
            realtimeRuntime: 1
            mems: mems
          blockIO:
            throttleWriteBpsDevice:
            - major: 6
              minor: 1
              rate: 5
            - major: 6
              minor: 1
              rate: 5
            throttleReadBpsDevice:
            - major: 6
              minor: 1
              rate: 5
            - major: 6
              minor: 1
              rate: 5
            leafWeight: 0
            weight: 5
            weightDevice:
            - major: 7
              minor: 9
              leafWeight: 2
              weight: 3
            - major: 7
              minor: 9
              leafWeight: 2
              weight: 3
            throttleWriteIOPSDevice:
            - major: 6
              minor: 1
              rate: 5
            - major: 6
              minor: 1
              rate: 5
            throttleReadIOPSDevice:
            - major: 6
              minor: 1
              rate: 5
            - major: 6
              minor: 1
              rate: 5
          hugepageLimits:
          - limit: 4
            pageSize: pageSize
          - limit: 4
            pageSize: pageSize
          pids:
            limit: 6
          network:
            classID: 6
            priorities:
            - name: name
              priority: 3
            - name: name
              priority: 3
      properties:
        Resources:
          $ref: "#/components/schemas/LinuxResources"
      type: object
      x-go-package: github.com/containers/podman/v5/pkg/api/handlers
    UsageData:
      description: |-
        UsageData Usage details about the volume. This information is used by the
        `GET /system/df` endpoint, and omitted in other endpoints.
      example:
        RefCount: 5
        Size: 5
      properties:
        RefCount:
          description: |-
            The number of containers referencing this volume. This field
            is set to `-1` if the reference-count is not available.
          format: int64
          type: integer
        Size:
          description: |-
            Amount of disk space used by the volume (in bytes). This information
            is only available for volumes created with the `"local"` volume
            driver. For volumes created with other volume drivers, this field
            is set to `-1` ("not available")
          format: int64
          type: integer
      required:
      - RefCount
      - Size
      type: object
      x-go-package: github.com/docker/docker/api/types/volume
    UsernsMode:
      title: UsernsMode represents userns mode in the container.
      type: string
      x-go-package: github.com/docker/docker/api/types/container
    Version:
      example:
        Index: 7
      properties:
        Index:
          format: uint64
          type: integer
      title: Version represents the internal object version.
      type: object
      x-go-package: github.com/docker/docker/api/types/swarm
    Volume:
      description: Volume volume
      example:
        Status:
          key: "{}"
        Options:
          key: Options
        Scope: Scope
        UsageData:
          RefCount: 5
          Size: 5
        CreatedAt: CreatedAt
        Driver: Driver
        Labels:
          key: Labels
        ClusterVolume:
          Version:
            Index: 7
          CreatedAt: 2000-01-23T04:56:07.000+00:00
          ID: ID
          Info:
            VolumeID: VolumeID
            VolumeContext:
              key: VolumeContext
            CapacityBytes: 0
            AccessibleTopology:
            - Segments:
                key: Segments
            - Segments:
                key: Segments
          Spec:
            Availability: Availability
            Group: Group
            Secrets:
            - Secret: Secret
              Key: Key
            - Secret: Secret
              Key: Key
            AccessMode:
              Scope: Scope
              Sharing: Sharing
              BlockVolume: "{}"
              MountVolume:
                MountFlags:
                - MountFlags
                - MountFlags
                FsType: FsType
            AccessibilityRequirements:
              Preferred:
              - Segments:
                  key: Segments
              - Segments:
                  key: Segments
              Requisite:
              - Segments:
                  key: Segments
              - Segments:
                  key: Segments
            CapacityRange:
              RequiredBytes: 1
              LimitBytes: 6
          UpdatedAt: 2000-01-23T04:56:07.000+00:00
          PublishStatus:
          - PublishContext:
              key: PublishContext
            State: State
            NodeID: NodeID
          - PublishContext:
              key: PublishContext
            State: State
            NodeID: NodeID
        Mountpoint: Mountpoint
        Name: Name
      properties:
        ClusterVolume:
          $ref: "#/components/schemas/ClusterVolume"
        CreatedAt:
          description: Date/Time the volume was created.
          type: string
        Driver:
          description: Name of the volume driver used by the volume.
          type: string
        Labels:
          additionalProperties:
            type: string
          description: User-defined key/value metadata.
          type: object
        Mountpoint:
          description: Mount path of the volume on the host.
          type: string
        Name:
          description: Name of the volume.
          type: string
        Options:
          additionalProperties:
            type: string
          description: The driver specific options used when creating the volume.
          type: object
        Scope:
          description: |-
            The level at which the volume exists. Either `global` for cluster-wide,
            or `local` for machine level.
          type: string
        Status:
          additionalProperties:
            type: object
          description: |-
            Low-level details about the volume, provided by the volume driver.
            Details are returned as a map with key/value pairs:
            `{"key":"value","key2":"value2"}`.

            The `Status` field is optional, and is omitted if the volume driver
            does not support this feature.
          type: object
        UsageData:
          $ref: "#/components/schemas/UsageData"
      required:
      - Driver
      - Labels
      - Mountpoint
      - Name
      - Options
      - Scope
      type: object
      x-go-package: github.com/docker/docker/api/types/volume
    VolumeConfigResponse:
      example:
        NeedsChown: true
        Status:
          key: "{}"
        Options:
          key: Options
        NeedsCopyUp: true
        GID: 0
        MountCount: 1
        Timeout: 5
        CreatedAt: 2000-01-23T04:56:07.000+00:00
        Driver: Driver
        Labels:
          key: Labels
        Anonymous: true
        StorageID: StorageID
        Name: Name
        UID: 5
        LockNumber: 6
        Scope: Scope
        Mountpoint: Mountpoint
      properties:
        Anonymous:
          description: |-
            Anonymous indicates that the volume was created as an anonymous
            volume for a specific container, and will be removed when any
            container using it is removed.
          type: boolean
        CreatedAt:
          description: |-
            CreatedAt is the date and time the volume was created at. This is not
            stored for older Libpod volumes; if so, it will be omitted.
          format: date-time
          type: string
        Driver:
          description: |-
            Driver is the driver used to create the volume.
            If set to "local" or "", the Local driver (Podman built-in code) is
            used to service the volume; otherwise, a volume plugin with the given
            name is used to mount and manage the volume.
          type: string
        GID:
          description: GID is the GID that the volume was created with.
          format: int64
          type: integer
        Labels:
          additionalProperties:
            type: string
          description: |-
            Labels includes the volume's configured labels, key:value pairs that
            can be passed during volume creation to provide information for third
            party tools.
          type: object
        LockNumber:
          description: LockNumber is the number of the volume's Libpod lock.
          format: uint32
          type: integer
        MountCount:
          description: MountCount is the number of times this volume has been mounted.
          format: uint64
          type: integer
        Mountpoint:
          description: Mountpoint is the path on the host where the volume is mounted.
          type: string
        Name:
          description: Name is the name of the volume.
          type: string
        NeedsChown:
          description: |-
            NeedsChown indicates that the next time the volume is mounted into
            a container, the container will chown the volume to the container process
            UID/GID.
          type: boolean
        NeedsCopyUp:
          description: NeedsCopyUp indicates that the next time the volume is mounted
            into
          type: boolean
        Options:
          additionalProperties:
            type: string
          description: |-
            Options is a set of options that were used when creating the volume.
            For the Local driver, these are mount options that will be used to
            determine how a local filesystem is mounted; they are handled as
            parameters to Mount in a manner described in the volume create
            manpage.
            For non-local drivers, these are passed as-is to the volume plugin.
          type: object
        Scope:
          description: |-
            Scope is unused and provided solely for Docker compatibility. It is
            unconditionally set to "local".
          type: string
        Status:
          additionalProperties:
            type: object
          description: |-
            Status is used to return information on the volume's current state,
            if the volume was created using a volume plugin (uses a Driver that
            is not the local driver).
            Status is provided to us by an external program, so no guarantees are
            made about its format or contents. Further, it is an optional field,
            so it may not be set even in cases where a volume plugin is in use.
          type: object
        StorageID:
          description: |-
            StorageID is the ID of the container backing the volume in c/storage.
            Only used with Image Volumes.
          type: string
        Timeout:
          description: Timeout is the specified driver timeout if given
          format: uint64
          type: integer
        UID:
          description: UID is the UID that the volume was created with.
          format: int64
          type: integer
      type: object
      x-go-package: github.com/containers/podman/v5/pkg/domain/entities/types
    VolumeCreateOptions:
      example:
        Options:
          key: Options
        Label:
          key: Label
        Driver: Driver
        Labels:
          key: Labels
        IgnoreIfExists: true
        Name: Name
      properties:
        Driver:
          description: Volume driver to use
          type: string
        IgnoreIfExists:
          description: Ignore existing volumes
          type: boolean
        Label:
          additionalProperties:
            type: string
          description: User-defined key/value metadata. Provided for compatibility
          type: object
        Labels:
          additionalProperties:
            type: string
          description: "User-defined key/value metadata. Preferred field, will override\
            \ Label"
          type: object
        Name:
          description: New volume's name. Can be left blank
          type: string
        Options:
          additionalProperties:
            type: string
          description: Mapping of driver options and values.
          type: object
      type: object
      x-go-package: github.com/containers/podman/v5/pkg/domain/entities/types
    VolumeOptions:
      example:
        NoCopy: true
        Subpath: Subpath
        DriverConfig:
          Options:
            key: Options
          Name: Name
        Labels:
          key: Labels
      properties:
        DriverConfig:
          $ref: "#/components/schemas/Driver"
        Labels:
          additionalProperties:
            type: string
          type: object
        NoCopy:
          type: boolean
        Subpath:
          type: string
      title: VolumeOptions represents the options for a mount of type volume.
      type: object
      x-go-package: github.com/docker/docker/api/types/mount
    VolumeRmReport:
      example:
        Err: Err
        Id: Id
      properties:
        Err:
          type: string
        Id:
          type: string
      type: object
      x-go-package: github.com/containers/podman/v5/pkg/domain/entities/types
    WaitExitError:
      description: "WaitExitError container waiting error, if any"
      properties:
        Message:
          description: Details of an error
          type: string
      type: object
      x-go-package: github.com/docker/docker/api/types/container
    WaitResponse:
      description: OK response to ContainerWait operation
      properties:
        Error:
          $ref: "#/components/schemas/WaitExitError"
        StatusCode:
          description: Exit code of the container
          format: int64
          type: integer
      required:
      - StatusCode
      title: WaitResponse ContainerWaitResponse
      type: object
      x-go-package: github.com/docker/docker/api/types/container
    WeightDevice:
      description: WeightDevice is a structure that holds device:weight pair
      example:
        Path: Path
        Weight: 3
      properties:
        Path:
          type: string
        Weight:
          format: uint16
          type: integer
      type: object
      x-go-package: github.com/docker/docker/api/types/blkiodev
    cacheLibImage:
      type: object
      x-go-package: github.com/containers/podman/v5/pkg/specgen
    containerUpdateRequest:
      $ref: "#/components/schemas/UpdateConfig"
    networkConnectRequest:
      $ref: "#/components/schemas/ConnectOptions"
    networkConnectRequestLibpod:
      $ref: "#/components/schemas/NetworkConnectOptions"
    networkCreate:
      $ref: "#/components/schemas/CreateRequest"
    networkCreateLibpod:
      properties:
        created:
          description: Created contains the timestamp when this network was created.
          format: date-time
          type: string
          x-go-name: Created
        dns_enabled:
          description: |-
            DNSEnabled is whether name resolution is active for container on
            this Network. Only supported with the bridge driver.
          type: boolean
          x-go-name: DNSEnabled
        driver:
          description: "Driver for this Network, e.g. bridge, macvlan..."
          type: string
          x-go-name: Driver
        id:
          description: ID of the Network.
          type: string
          x-go-name: ID
        internal:
          description: |-
            Internal is whether the Network should not have external routes
            to public or other Networks.
          type: boolean
          x-go-name: Internal
        ipam_options:
          additionalProperties:
            type: string
          description: IPAMOptions contains options used for the ip assignment.
          type: object
          x-go-name: IPAMOptions
        ipv6_enabled:
          description: IPv6Enabled if set to true an ipv6 subnet should be created
            for this net.
          type: boolean
          x-go-name: IPv6Enabled
        labels:
          additionalProperties:
            type: string
          description: |-
            Labels is a set of key-value labels that have been applied to the
            Network.
          type: object
          x-go-name: Labels
        name:
          description: Name of the Network.
          type: string
          x-go-name: Name
        network_dns_servers:
          description: |-
            List of custom DNS server for podman's DNS resolver at network level,
            all the containers attached to this network will consider resolvers
            configured at network level.
          items:
            type: string
          type: array
          x-go-name: NetworkDNSServers
        network_interface:
          description: NetworkInterface is the network interface name on the host.
          type: string
          x-go-name: NetworkInterface
        options:
          additionalProperties:
            type: string
          description: |-
            Options is a set of key-value options that have been applied to
            the Network.
          type: object
          x-go-name: Options
        routes:
          description: Routes to use for this network.
          items:
            $ref: "#/components/schemas/Route"
          type: array
          x-go-name: Routes
        subnets:
          description: Subnets to use for this network.
          items:
            $ref: "#/components/schemas/Subnet"
          type: array
          x-go-name: Subnets
      type: object
      x-go-package: github.com/containers/podman/v5/pkg/api/handlers/swagger
    networkDisconnectRequest:
      $ref: "#/components/schemas/DisconnectOptions"
    networkUpdateRequestLibpod:
      $ref: "#/components/schemas/NetworkUpdateOptions"
    volumeCreate:
      description: Details for creating a volume
      properties:
        Driver:
          description: Name of the volume driver to use.
          type: string
        DriverOpts:
          additionalProperties:
            type: string
          description: |-
            A mapping of driver options and values. These options are
            passed directly to the driver and are driver specific.
          type: object
        Labels:
          additionalProperties:
            type: string
          description: User-defined key/value metadata.
          type: object
        Name:
          description: "The new volume's name. If not specified, Docker generates\
            \ a name."
          type: string
      required:
      - Driver
      - DriverOpts
      - Labels
      - Name
      type: object
      x-go-package: github.com/containers/podman/v5/pkg/api/handlers/swagger
    ImageBuild_200_response:
      example:
        stream: |
          (build details...)
          Successfully built 8ba084515c724cbf90d447a63600c0a6
          Successfully tagged your_image:latest
      properties:
        stream:
          description: output from build process
          example: |
            (build details...)
            Successfully built 8ba084515c724cbf90d447a63600c0a6
            Successfully tagged your_image:latest
          type: string
      required:
      - stream
      type: object
    ContainerExec_request:
      properties:
        AttachStderr:
          description: Attach to stderr of the exec command
          type: boolean
        AttachStdin:
          description: Attach to stdin of the exec command
          type: boolean
        AttachStdout:
          description: Attach to stdout of the exec command
          type: boolean
        Cmd:
          description: "Command to run, as a string or array of strings."
          items:
            type: string
          type: array
        DetachKeys:
          description: |
            "Override the key sequence for detaching a container. Format is a single character [a-Z] or ctrl-<value> where <value> is one of: a-z, @, ^, [, , or _."
          type: string
        Env:
          description: "A list of environment variables in the form [\"VAR=value\"\
            , ...]"
          items:
            type: string
          type: array
        Privileged:
          default: false
          description: Runs the exec process with extended privileges
          type: boolean
        Tty:
          description: Allocate a pseudo-TTY
          type: boolean
        User:
          description: |
            "The user, and optionally, group to run the exec process inside the container. Format is one of: user, user:group, uid, or uid:gid."
          type: string
        WorkingDir:
          description: The working directory for the exec process inside the container.
          type: string
      type: object
    ContainerWait_200_response_Error:
      example:
        Message: Message
      properties:
        Message:
          type: string
      type: object
    ContainerWait_200_response:
      example:
        Error:
          Message: Message
        StatusCode: 0
      properties:
        Error:
          $ref: "#/components/schemas/ContainerWait_200_response_Error"
        StatusCode:
          description: container exit code
          format: int64
          type: integer
      type: object
    ExecStart_request:
      properties:
        Detach:
          description: Detach from the command. Not presently supported.
          type: boolean
        Tty:
          description: Allocate a pseudo-TTY. Presently ignored.
          type: boolean
      type: object
    ImageDelete_200_response_inner:
      example:
        deleted: deleted
        untagged:
        - untagged
        - untagged
      properties:
        deleted:
          type: string
          x-go-name: Deleted
        untagged:
          items:
            type: string
          type: array
          x-go-name: Untagged
      type: object
    ImageSearch_200_response:
      example:
        Description: Description
        Automated: Automated
        Stars: 0
        Official: Official
        Index: quay.io
        Tag: Tag
        Name: docker.io/library/alpine"
      properties:
        Automated:
          description: Automated indicates if the image was created by an automated
            build.
          type: string
        Description:
          description: Description of the image.
          type: string
        Index:
          description: Index is the image index
          example: quay.io
          type: string
        Name:
          description: Name is the canonical name of the image
          example: docker.io/library/alpine"
          type: string
        Official:
          description: Official indicates if it's an official image.
          type: string
        Stars:
          description: Stars is the number of stars of the image.
          format: int64
          type: integer
        Tag:
          description: Tag is the image tag
          type: string
      type: object
    ImageBuildLibpod_200_response:
      example:
        stream: |
          (build details...)
      properties:
        stream:
          description: output from build process
          example: |
            (build details...)
          type: string
      required:
      - stream
      type: object
    ExecStartLibpod_request:
      properties:
        Detach:
          description: Detach from the command.
          type: boolean
        Tty:
          description: Allocate a pseudo-TTY.
          type: boolean
        h:
          description: Height of the TTY session in characters. Tty must be set to
            true to use it.
          type: integer
        w:
          description: Width of the TTY session in characters. Tty must be set to
            true to use it.
          type: integer
      type: object
    SecretDeleteLibpod_404_response:
      example:
        response: 400
        cause: API root cause
        message: human error message
      properties:
        cause:
          description: API root cause formatted for automated parsing
          example: API root cause
          type: string
          x-go-name: Because
        message:
          description: "human error message, formatted for a human to read"
          example: human error message
          type: string
          x-go-name: Message
        response:
          description: HTTP response code
          format: int64
          minimum: 400
          type: integer
          x-go-name: ResponseCode
      type: object
    SecretCreateLibpod_201_response:
      example:
        ID: ID
      properties:
        ID:
          type: string
      type: object
    NetworkCreate_201_response:
      example:
        Warning: Warning
        Id: Id
      properties:
        Id:
          type: string
        Warning:
          type: string
      type: object
    NetworkPrune_200_response:
      example:
        NetworksDeleted:
        - NetworksDeleted
        - NetworksDeleted
      properties:
        NetworksDeleted:
          items:
            type: string
          type: array
      type: object
    ImageProperties_Size:
      example:
        Unpacked: 5
      properties:
        Unpacked:
          description: |-
            Unpacked is the size (in bytes) of the locally unpacked
            (uncompressed) image content that's directly usable by the containers
            running this image.
            It's independent of the distributable content - e.g.
            the image might still have an unpacked data that's still used by
            some container even when the distributable/compressed content is
            already gone.
          format: int64
          type: integer
      required:
      - Unpacked
      type: object
    ManifestSummary_Size:
      description: |-
        Size is the size information of the content related to this manifest.
        Note: These sizes only take the locally available content into account.
      example:
        Content: 2
        Total: 7
      properties:
        Content:
          description: |-
            Content is the size (in bytes) of all the locally present
            content in the content store (e.g. image config, layers)
            referenced by this manifest and its children.
            This only includes blobs in the content store.
          format: int64
          type: integer
        Total:
          description: |-
            Total is the total size (in bytes) of all the locally present
            data (both distributable and non-distributable) that's related to
            this manifest and its children.
            This equal to the sum of [Content] size AND all the sizes in the
            [Size] struct present in the Kind-specific data struct.
            For example, for an image kind (Kind == ManifestKindImage),
            this would include the size of the image content and unpacked
            image snapshots ([Size.Content] + [ImageData.Size.Unpacked]).
          format: int64
          type: integer
      type: object
    SystemComponentVersion_Platform:
      example:
        Name: Name
      properties:
        Name:
          type: string
      type: object
x-original-swagger-version: "2.0"

